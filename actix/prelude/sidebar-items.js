window.SIDEBAR_ITEMS = {"enum":[["ActorState","Actor execution state"],["MailboxError","The errors that can occur during the message delivery process."],["Running",""],["SendError",""]],"struct":[["ActorResponse","A helper type for representing different types of message responses."],["Addr","The address of an actor."],["Arbiter","An Arbiter represents a thread that provides an asynchronous execution environment for futures and functions."],["ArbiterHandle","A handle for sending spawn and stop messages to an [Arbiter]."],["AtomicResponse","A specialized actor future holder for atomic asynchronous message handling."],["Context","An actor execution context."],["MessageResult","A helper type that implements the [`MessageResponse`] trait."],["Recipient","The [`Recipient`] type allows to send one specific message to an actor."],["Response","Helper type for representing different type of message responses"],["SpawnHandle","A handle to a spawned future."],["Supervisor","Actor supervisor"],["System","A manager for a per-thread distributed async runtime."],["SystemRunner","Runner that keeps a [System]’s event loop alive until stop message is received."]],"trait":[["Actor","Actors are objects which encapsulate state and behavior."],["ActorContext","Actor execution context."],["AsyncContext","Asynchronous execution context."],["ContextFutureSpawner","Helper trait which can spawn a future into the actor’s context."],["Handler","Describes how to handle messages of a specific type."],["Message","Represent message that can be handled by an actor."],["Stream","A stream of values produced asynchronously."],["StreamHandler","Stream handling for Actors."],["Supervised","Actors with the ability to restart after failure."]],"type":[["RecipientRequest",""],["Request",""],["ResponseActFuture","A specialized actor future for asynchronous message handling."],["ResponseFuture","A specialized future for asynchronous message handling."]]};