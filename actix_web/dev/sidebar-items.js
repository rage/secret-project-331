initSidebarItems({"enum":[["Body","Represents various types of HTTP message body."],["BodySize","Body size hint."],["JsonBody","Future that resolves to some `T` when parsed from a JSON payload."],["Payload","Type represent streaming payload"],["ResponseBody",""]],"struct":[["AppConfig","Application connection config."],["AppService","Application configuration"],["ConnectionInfo","`HttpRequest` connection information"],["Decompress",""],["Extensions","A type map for request extensions."],["HttpResponseBuilder","An HTTP response builder."],["Path","Resource path match information"],["Readlines","Stream that reads request line by line."],["RequestHead",""],["ResourceDef","ResourceDef describes an entry in resources table"],["ResourceMap",""],["ResponseHead",""],["Server",""],["ServiceRequest","An service http request"],["ServiceResponse",""],["SizedStream","Known sized streaming response wrapper."],["Url",""],["UrlEncoded","Future that resolves to some `T` when parsed from a URL encoded payload."],["WebService",""]],"trait":[["BodyEncoding","Helper trait that allows to set specific encoding for response."],["HttpServiceFactory",""],["MessageBody","Type that implement this trait can be streamed to a peer."],["ResourcePath",""],["Service","An asynchronous operation from `Request` to a `Response`."],["Transform","The `Transform` trait defines the interface of a service factory that wraps inner service during construction."]],"type":[["PayloadStream","Type represent boxed payload"]]});