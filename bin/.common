#!/bin/bash

set -euo pipefail

export BLUE='\033[0;34m'
export RED='\033[0;31m'
export BOLD='\e[1m'
export RESET_EVERYTHING='\e[0m'

function run_command() {
  command=$1
  shift
  args=("$@")
  echo "> $command" "$(printf "%q " "${args[@]}" )"
  "$command" "${args[@]}"
}

function eval_command() {
  command=$1
  arguments=$2
  echo "> $command" "$(printf "%s " "$arguments")"
  eval "$command $arguments"
}

function ensure_program_in_path() {
  PROGRAM="$1"
  if ! command -v "$PROGRAM" &> /dev/null; then
      echo "$PROGRAM is not installed or it is not in your \$PATH. Aborting."
      exit 1
  fi
}

function ensure_common_programs_in_path() {
  ensure_program_in_path bc
  ensure_program_in_path jq
  ensure_program_in_path find
  ensure_program_in_path sponge
}

function enforce_inotify_watches_limit_sufficient() {
  if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    INOTIFY_WATCHES=$(cat /proc/sys/fs/inotify/max_user_watches)
    MIN_INOTIFY_WATCHES=500000
    if [ "$MIN_INOTIFY_WATCHES" -gt "$INOTIFY_WATCHES" ]; then
      echo "You need to increase your inotify watches limit. The limit need to be at least $MIN_INOTIFY_WATCHES and your current limit is $INOTIFY_WATCHES. Aborting."
      echo ""
      echo "See https://github.com/guard/listen/blob/master/README.md#increasing-the-amount-of-inotify-watchers for instructions."
      exit 255
    fi
  fi
}

function check_minikube_version() {
  # just to be sure
  ensure_program_in_path minikube
  MINIKUBE_VERSION_STRING=$(minikube version | grep -oP '\d+\.\d+\.\d+')
  MINIKUBE_VERSION_MAJOR=$(echo "$MINIKUBE_VERSION_STRING" | cut -d . -f 1)
  MINIKUBE_VERSION_MINOR=$(echo "$MINIKUBE_VERSION_STRING" | cut -d . -f 2)
  MINIKUBE_VERSION_PATCH=$(echo "$MINIKUBE_VERSION_STRING" | cut -d . -f 3)
  if [ "$MINIKUBE_VERSION_MAJOR" -lt "1" ]; then
    fail_minikube_version
  fi
  if [ "$MINIKUBE_VERSION_MAJOR" -lt "2" ] && [ "$MINIKUBE_VERSION_MINOR" -lt "23" ]; then
    fail_minikube_version
  fi
  if [ "$MINIKUBE_VERSION_MAJOR" -lt "2" ] && [ "$MINIKUBE_VERSION_MINOR" -lt "24" ] && [ "$MINIKUBE_VERSION_PATCH" -lt "2" ]; then
    fail_minikube_version
  fi
}

function fail_minikube_version() {
  echo "Please run bin/minikube-delete and after that upgrade minikube to its latest version."
  exit 255
}
