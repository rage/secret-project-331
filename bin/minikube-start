#!/bin/bash
set -euo pipefail
source "$(dirname "$0")/.common"

ensure_program_in_path "minikube"
check_minikube_version

COMMAND="minikube"
CORES=$(nproc)
# This is rounded to the nearest integer e.g. 32.8 gb will show up as 33. This is fine for the calculations we're going to do.
TOTAL_MEM_GB=$(free --giga | grep Mem | sed 's/  */ /g' | cut -d ' ' -f 2)
# By default, use 1/2 of the hosts memory for minikube
AMOUNT_OF_MEMORY_TO_USE_GB=$((TOTAL_MEM_GB/2))
if [ "$AMOUNT_OF_MEMORY_TO_USE_GB" -lt "9" ]; then
  # However, if we got less memory than 9GB, use 3/4 of the total memory. (We divide by 1 to convert to whole number)
  AMOUNT_OF_MEMORY_TO_USE_GB=$(echo "$TOTAL_MEM_GB * 0.75 / 1" | bc)
fi
# This if statement depends on the modification that the previous if statement makes to AMOUNT_OF_MEMORY_TO_USE_GB
if [ "$AMOUNT_OF_MEMORY_TO_USE_GB" -lt "5" ]; then
  # If running on a machine that is a literal potato, tell minikube to use max ram
  echo -e "${RED}Warning: Your computer has so little available RAM that you might encounter problems running the project.$RESET_EVERYTHING"
  AMOUNT_OF_MEMORY_TO_USE_GB="max"
fi

if [ "$AMOUNT_OF_MEMORY_TO_USE_GB" = "max" ]; then
  MEMORY_TO_USE="max"
else
  MEMORY_TO_USE="${AMOUNT_OF_MEMORY_TO_USE_GB}g"
fi

echo -e "${BLUE}Hint: you can append options to the command by giving this script extra arguments."
echo -e "Example:${BOLD} bin/minikube-start --disk-size 30g ${RESET_EVERYTHING}${BLUE}"
echo "Appending new options overrides preceding ones."
echo -e "$RESET_EVERYTHING"

if [[ "$OSTYPE" == "cygwin" || "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
  echo "🪟  Detected Windows with $CORES available cores and ${TOTAL_MEM_GB}GB of total memory."
  ARGUMENTS=(start --vm-driver=virtualbox --addons ingress --cpus "$CORES" --disk-size 100g --memory "$MEMORY_TO_USE" "$@")
elif [[ "$OSTYPE" == "darwin"* ]]; then
  echo "🍎 Detected macOS with $CORES available cores and ${TOTAL_MEM_GB}GB of total memory."
  ARGUMENTS=(start --addons ingress --cpus "$CORES" --disk-size 100g --memory "$MEMORY_TO_USE" "$@")
else
  echo "🐧 Detected Linux with $CORES available cores and ${TOTAL_MEM_GB}GB of total memory."
  ARGUMENTS=(start --addons ingress --cpus "$CORES" --disk-size 100g --memory "$MEMORY_TO_USE" "$@")
fi

echo "> $COMMAND" "$(printf "%q " "${ARGUMENTS[@]}")"
exec "$COMMAND" "${ARGUMENTS[@]}"
