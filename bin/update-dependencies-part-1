#!/usr/bin/env python3

import os
import subprocess
from pathlib import Path

basedir = Path(__file__).parent
folder_path = basedir / '..'
relative_path = folder_path.resolve().relative_to(Path.cwd())


def run_command(command):
    print(f"Running command: {command}")
    subprocess.check_call(command, shell=True)

def update_node_deps(folder, target_name):
    print(f"cd {folder} ({target_name})")
    os.chdir(folder)

    try:
        run_command('npx npm-check --update')
    except subprocess.CalledProcessError:
        print(f"Updating dependencies for {target_name} failed. Please do the dependency update manually.")
        print("Press enter when you're ready. The script will then commit your changes.")
        input()

    if subprocess.run('git status --porcelain', shell=True, capture_output=True).stdout:
        run_command('git add package.json package-lock.json')
        run_command(f'git commit -m "Update dependencies for {target_name} " --no-verify')

    try:
        run_command('npm audit fix')
        run_command('npm audit fix')
        run_command('npm audit fix')
    except subprocess.CalledProcessError:
        pass

    if subprocess.run('git status --porcelain', shell=True, capture_output=True).stdout:
        run_command('git add package-lock.json')
        run_command(f'git commit -am "npm audit for {target_name}" --no-verify')

    os.chdir(folder_path)


os.chdir(relative_path)

if subprocess.run('git status --porcelain', shell=True, capture_output=True).stdout:
    print("You have uncommitted changes. Please commit them before running this script.")
    exit(1)

run_command('npm ci')
run_command('bin/npm-ci-all')

update_node_deps(relative_path, "repo root")
update_node_deps(relative_path / 'system-tests', "system-tests")
update_node_deps(relative_path / 'services/cms', "cms")
update_node_deps(relative_path / 'services/course-material', "course-material")
update_node_deps(relative_path / 'services/example-exercise', "example-exercise")
update_node_deps(relative_path / 'services/main-frontend', "main-frontend")
update_node_deps(relative_path / 'services/quizzes', "quizzes")
update_node_deps(relative_path / 'services/tmc', "tmc")
update_node_deps(relative_path / 'shared-module', "shared-module")

os.chdir('services/headless-lms')
run_command('cargo upgrade --incompatible allow --pinned allow --recursive true')

if subprocess.run('git status --porcelain', shell=True, capture_output=True).stdout:
    run_command('git add .')
    run_command('git commit -m "Cargo upgrade" --no-verify')

run_command('cargo update --recursive')

if subprocess.run('git status --porcelain', shell=True, capture_output=True).stdout:
    run_command('git add .')
