initSidebarItems({"macro":[["bitarr","Constructs a `BitArray` wrapper out of a literal array in source code, like `bits!`"],["bitbox","Constructs a `BitBox` out of a literal array in source code, like `bitvec!`."],["bits","Constructs a `BitSlice` handle out of a literal array in source code, like `vec!`."],["bitvec","Constructs a `BitVec` out of a literal array in source code, like `vec!`."]],"mod":[["array","A fixed-size region viewed as individual bits, corresponding to `[bool]`."],["boxed","A dynamically-allocated, fixed-size, buffer containing a `BitSlice` region."],["domain","Representation of the `BitSlice` region memory model"],["field","Parallel bitfield access."],["index","Typed metadata of registers."],["macros","Constructor macros for the crateâ€™s collection types."],["mem","Descriptions of integer types"],["order","Ordering of bits within register elements."],["prelude","`bitvec` symbol export"],["slice","A dynamically-sized view into individual bits of a memory region."],["store","Memory modeling."],["vec","A dynamically-allocated buffer containing a `BitSlice<O, T>` region."],["view","View constructors for memory regions."]]});