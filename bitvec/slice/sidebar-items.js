initSidebarItems({"fn":[["bits_from_raw_parts","Constructs a `&BitSlice` reference from its component data."],["bits_from_raw_parts_mut","Constructs a `&mut BitSlice` reference from its component data."],["from_mut","Converts a reference to `T` into a bitslice over one element."],["from_raw_parts","Forms a bitslice from a pointer and a length."],["from_raw_parts_mut","Performs the same functionality as `from_raw_parts`, except that a mutable bitslice is returned."],["from_ref","Converts a reference to `T` into a bitslice over one element."]],"struct":[["BitMut","Proxy reference type, equivalent to `&mut bool`."],["BitSlice","A slice of individual bits, anywhere in memory."],["Chunks","An iterator over a bit slice in (non-overlapping) chunks (`chunk_size` bits at a time), starting at the beginning of the slice."],["ChunksExact","An iterator over a bit slice in (non-overlapping) chunks (`chunk_size` bits at a time), starting at the beginning of the slice."],["ChunksExactMut","An iterator over a bit slice in (non-overlapping) mutable chunks (`chunk_size` bits at a time), starting at the beginning of the slice."],["ChunksMut","An iterator over a bit slice in (non-overlapping) mutable chunks (`chunk_size` bits at a time), starting at the beginning of the slice."],["Iter","Immutable slice iterator"],["IterMut","Mutable bit slice iterator."],["RChunks","An iterator over a bit slice in (non-overlapping) chunks (`chunk_size` bits at a time), starting at the end of the slice."],["RChunksExact","An iterator over a bit slice in (non-overlapping) chunks (`chunk_size` bits at a time), starting at the end of the slice."],["RChunksExactMut","An iterator over a bit slice in (non-overlapping) mutable chunks (`chunk_size` bits at a time), starting at the end of the slice."],["RChunksMut","An iterator over a slice in (non-overlapping) mutable chunks (`chunk_size` bits at a time), starting at the end of the slice."],["RSplit","An iterator over subslices separated by bits that match a predicate function, starting from the end of the slice."],["RSplitMut","An iterator over subslices separated by bits that match a predicate function, starting from the end of the slice."],["RSplitN","An iterator over subslices separated by bits that match a predicate function, limited to a given number of splits, starting from the end of the slice."],["RSplitNMut","An iterator over subslices separated by bits that match a predicate function, limited to a given number of splits, starting from the end of the slice."],["Split","An iterator over subslices separated by bits that match a predicate function."],["SplitMut","An iterator over the mutable subslices of the slice which are separated by bits that match `pred`."],["SplitN","An iterator over subslices separated by bits that match a predicate function, limited to a given number of splits."],["SplitNMut","An iterator over subslices separated by bits that match a predicate function, limited to a given number of splits."],["Windows","An iterator over overlapping subslices of length `size`."]],"trait":[["BitSliceIndex","A helper trait used for indexing operations."]]});