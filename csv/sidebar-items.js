initSidebarItems({"enum":[["DeserializeErrorKind","The type of a Serde deserialization error."],["ErrorKind","The specific type of an error."],["QuoteStyle","The quoting style to use when writing CSV data."],["Terminator","A record terminator."],["Trim","The whitespace preservation behaviour when reading CSV data."]],"fn":[["invalid_option","A custom Serde deserializer for possibly invalid `Option<T>` fields."]],"mod":[["cookbook","A cookbook of examples for CSV reading and writing."],["tutorial","A tutorial for handling CSV data in Rust."]],"struct":[["ByteRecord","A single CSV record stored as raw bytes."],["ByteRecordIter","A double-ended iterator over the fields in a byte record."],["ByteRecordsIntoIter","An owned iterator over records as raw bytes."],["ByteRecordsIter","A borrowed iterator over records as raw bytes."],["DeserializeError","An Serde deserialization error."],["DeserializeRecordsIntoIter","An owned iterator over deserialized records."],["DeserializeRecordsIter","A borrowed iterator over deserialized records."],["Error","An error that can occur when processing CSV data."],["FromUtf8Error","A UTF-8 validation error during record conversion."],["IntoInnerError","`IntoInnerError` occurs when consuming a `Writer` fails."],["Position","A position in CSV data."],["Reader","A already configured CSV reader."],["ReaderBuilder","Builds a CSV reader with various configuration knobs."],["StringRecord","A single CSV record stored as valid UTF-8 bytes."],["StringRecordIter","An iterator over the fields in a string record."],["StringRecordsIntoIter","An owned iterator over records as strings."],["StringRecordsIter","A borrowed iterator over records as strings."],["Utf8Error","A UTF-8 validation error."],["Writer","A already configured CSV writer."],["WriterBuilder","Builds a CSV writer with various configuration knobs."]],"type":[["Result","A type alias for `Result<T, csv::Error>`."]]});