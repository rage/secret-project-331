(function() {var implementors = {};
implementors["actix_service"] = [];
implementors["actix_web"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"actix_service/trait.IntoServiceFactory.html\" title=\"trait actix_service::IntoServiceFactory\">IntoServiceFactory</a>&lt;T&gt; for <a class=\"struct\" href=\"actix_web/struct.Resource.html\" title=\"struct actix_web::Resource\">Resource</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"actix_service/trait.ServiceFactory.html\" title=\"trait actix_service::ServiceFactory\">ServiceFactory</a>&lt;Config = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Request = <a class=\"struct\" href=\"actix_web/dev/struct.ServiceRequest.html\" title=\"struct actix_web::dev::ServiceRequest\">ServiceRequest</a>, Response = <a class=\"struct\" href=\"actix_web/dev/struct.ServiceResponse.html\" title=\"struct actix_web::dev::ServiceResponse\">ServiceResponse</a>, Error = <a class=\"struct\" href=\"actix_web/struct.Error.html\" title=\"struct actix_web::Error\">Error</a>, InitError = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,&nbsp;</span>","synthetic":false,"types":["actix_web::resource::Resource"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()