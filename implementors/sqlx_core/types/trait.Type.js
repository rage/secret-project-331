(function() {var implementors = {
"headless_lms_models":[["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/course_background_questions/enum.CourseBackgroundQuestionType.html\" title=\"enum headless_lms_models::course_background_questions::CourseBackgroundQuestionType\">CourseBackgroundQuestionType</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/exercise_repositories/enum.ExerciseRepositoryStatus.html\" title=\"enum headless_lms_models::exercise_repositories::ExerciseRepositoryStatus\">ExerciseRepositoryStatus</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/exercise_task_gradings/enum.UserPointsUpdateStrategy.html\" title=\"enum headless_lms_models::exercise_task_gradings::UserPointsUpdateStrategy\">UserPointsUpdateStrategy</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/exercises/enum.ActivityProgress.html\" title=\"enum headless_lms_models::exercises::ActivityProgress\">ActivityProgress</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/exercises/enum.GradingProgress.html\" title=\"enum headless_lms_models::exercises::GradingProgress\">GradingProgress</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/page_history/enum.HistoryChangeReason.html\" title=\"enum headless_lms_models::page_history::HistoryChangeReason\">HistoryChangeReason</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/peer_review_configs/enum.PeerReviewAcceptingStrategy.html\" title=\"enum headless_lms_models::peer_review_configs::PeerReviewAcceptingStrategy\">PeerReviewAcceptingStrategy</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/peer_review_questions/enum.PeerReviewQuestionType.html\" title=\"enum headless_lms_models::peer_review_questions::PeerReviewQuestionType\">PeerReviewQuestionType</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/proposed_block_edits/enum.ProposalStatus.html\" title=\"enum headless_lms_models::proposed_block_edits::ProposalStatus\">ProposalStatus</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/roles/enum.UserRole.html\" title=\"enum headless_lms_models::roles::UserRole\">UserRole</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/teacher_grading_decisions/enum.TeacherDecisionType.html\" title=\"enum headless_lms_models::teacher_grading_decisions::TeacherDecisionType\">TeacherDecisionType</a>"],["impl <a class=\"trait\" href=\"headless_lms_models/prelude/trait.Type.html\" title=\"trait headless_lms_models::prelude::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx_core/postgres/database/struct.Postgres.html\" title=\"struct sqlx_core::postgres::database::Postgres\">Postgres</a>&gt; for <a class=\"enum\" href=\"headless_lms_models/user_exercise_states/enum.ReviewingStage.html\" title=\"enum headless_lms_models::user_exercise_states::ReviewingStage\">ReviewingStage</a>"]],
"headless_lms_server":[],
"sqlx":[],
"sqlx_core":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()