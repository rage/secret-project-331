apiVersion: v1
kind: Service
metadata:
  name: headless-lms
  labels:
    app: headless-lms
spec:
  clusterIP: None
  ports:
    - port: 3001
      name: headless-lms
  selector:
    app: headless-lms
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: headless-lms
  labels:
    app: headless-lms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: headless-lms
  template:
    metadata:
      labels:
        app: headless-lms
    spec:
      containers:
        - name: headless-lms
          image: headless-lms
          ports:
            - containerPort: 3001
              name: headless-lms
          resources:
            limits:
              memory: 500Mi
              cpu: 500m
            requests:
              memory: 200Mi
              cpu: 200m
          envFrom:
            - configMapRef:
                name: postgres-configuration
          env:
            - name: POSTGRES_HOST
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: DATABASE_URL
              value: "postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres/$(POSTGRES_DB)"
---
# Migrations
apiVersion: batch/v1
kind: Job
metadata:
  name: headless-lms-run-migrations
spec:
  backoffLimit: 10
  template:
    spec:
      containers:
        - name: headless-lms-run-migrations
          image: headless-lms
          command:
            - bash
            - "-c"
            - |
              echo Waiting for postgres to be available
              wait-for-it --timeout=120 postgres:5432
              echo Running migrations
              cargo sqlx migrate run
              echo Migrations complete
          resources:
            requests:
              memory: 200Mi
              cpu: 200m
          envFrom:
            - configMapRef:
                name: postgres-configuration
          env:
            - name: POSTGRES_HOST
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: DATABASE_URL
              value: "postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres/$(POSTGRES_DB)"
      restartPolicy: Never
