# The test environment is supposed to match the production environment as much as possible.
# The only difference is that it's supposed to run on local machines and on continous integration servers.
# Thats why we add PostgreSQL and ease the resource limitations a bit.

resources:
  - ../production
  # Test mode uses the same db server as dev so that the dev db is availabe for type checking while the test environment is running. The test environment uses a different databases ('headless_lms_test') in the same postgres.
  - ./postgres-dev.yml
  - redis-dev.yml
  - headless-lms/env.yml
  - access-ingress-internally.yml
  - tmc-service-account.yml
patches:
  - path: patch-ingress.yml
    target:
      version: v1
      kind: Ingress
      name: project-331-ingress
  - path: patch-ingress-other-domains.yml
    target:
      version: v1
      kind: Ingress
      name: project-331-other-domains
  # Remove cpu and memory resource without initContainer defined
  - path: patch-without-init-container.yml
    target:
      version: v1
      labelSelector: "deploymentType=without-init-container"
  # Remove cpu and memory resource with initContainer defined
  - path: patch-with-init-container.yml
    target:
      version: v1
      labelSelector: "deploymentType=with-init-container"
  # Remove cpu and memory resource with initContainer defined for cronjobs
  - path: patch-with-init-container-cronjob.yml
    target:
      version: v1
      labelSelector: "deploymentType=with-init-container-cronjob"
  - path: main-frontend/patch-env.yml
  - path: headless-lms/env-local-patch.secret.yml

# Patch replicas
replicas:
  - name: course-material
    count: 1
  - name: quizzes
    count: 1
  - name: tmc
    count: 1
  - name: example-exercise
    count: 1
  - name: main-frontend
    count: 1
  - name: cms
    count: 1
  - name: headless-lms
    count: 1
