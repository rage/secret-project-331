initSidebarItems({"fn":[["get_text_map_propagator","Executes a closure with a reference to the current global [`TextMapPropagator`] propagator."],["handle_error","Handle error using the globally configured error handler."],["set_error_handler","Set global error handler."],["set_text_map_propagator","Sets the given [`TextMapPropagator`] propagator as the current global propagator."],["set_tracer_provider","Sets the given `TracerProvider` instance as the current global provider."],["shutdown_tracer_provider","Shut down the current tracer provider. This will invoke the shutdown method on all span processors. span processors should export remaining spans before return"],["tracer","Creates a named instance of `Tracer` via the configured [`GlobalTracerProvider`]."],["tracer_provider","Returns an instance of the currently configured global `TracerProvider` through `GlobalTracerProvider`."],["tracer_with_version","Creates a named instance of `Tracer` with version info via the configured [`GlobalTracerProvider`]"]],"struct":[["BoxedSpan","Wraps the [`BoxedTracer`]’s `Span` so it can be used generically by applications without knowing the underlying type."],["BoxedTracer","Wraps the `GlobalTracerProvider`’s `Tracer` so it can be used generically by applications without knowing the underlying type."],["GlobalTracerProvider","Represents the globally configured `TracerProvider` instance for this application. This allows generic tracing through the returned [`BoxedTracer`] instances."]],"trait":[["GenericTracer","Allows a specific `Tracer` to be used generically by [`BoxedTracer`] instances by mirroring the interface and boxing the return types."],["GenericTracerProvider","Allows a specific `TracerProvider` to be used generically by the `GlobalTracerProvider` by mirroring the interface and boxing the return types."]]});