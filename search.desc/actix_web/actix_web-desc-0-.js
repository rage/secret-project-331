searchState.loadedDescShard("actix_web", 0, "Actix Web is a powerful, pragmatic, and extremely fast web …\nThe top-level builder for an Actix Web application.\nAllows overriding status code and headers (including …\nCombines two extractor or responder types into a single …\nContains the error value\nThe associated error which can be returned.\nA type that implements <code>FromRequest</code> is called an <strong>extractor</strong> …\nFuture that resolves to a <code>Self</code>.\nThe interface for request handlers.\nTrait that implements general purpose operations on HTTP …\nAn incoming request.\nAn outgoing response.\nAn HTTP response builder.\nAn HTTP Server.\nA value of type <code>L</code>.\nContains the success value\nA collection of <code>Route</code>s that respond to the same path …\nTrait implemented by types that can be converted to an …\nA convenience <code>Result</code> for Actix Web operations.\nA value of type <code>R</code>.\nA request handler with guards.\nA collection of <code>Route</code>s, <code>Resource</code>s, or other services that …\nType of message payload stream\nAppends a <code>cookie</code> to the final response.\nAdd a cookie to this response.\nAdd a “removal” cookie to the response that matches …\nReturns addresses of bound sockets.\nReturns addresses of bound sockets and the scheme for it.\nReturns a reference to the application’s connection …\nSet application (root level) data.\nAdd resource data.\nAdd scope data.\nRetrieves a piece of application state.\nAppend a header, keeping any that were set with an …\nAppend header to the final response.\nSets the maximum number of pending connections.\nResolves socket address(es) and binds server to created …\nResolves socket address(es) and binds server to created …\nOpens Unix Domain Socket (UDS) from <code>uds</code> path and binds …\nTraits and structures to aid consuming and writing HTTP …\nSet a body and build the <code>HttpResponse</code>.\nReturns a reference to this response’s body.\nConstructs a response builder with specific HTTP status.\nCheck if request has chunked transfer encoding.\nSets server connection shutdown timeout.\nSets server client timeout for first request.\nRun external configuration as part of the application …\nRun external configuration as part of the scope building …\nReturns a reference a piece of connection data set in an …\nCreates route handler with <code>actix_web::guard::Connect</code>.\nReturns connection info for the current request.\nRead the request content type. If request did not contain …\nSet response content type.\nAdd a cookie to the response.\nReturn request cookie.\nGet an iterator for the cookies set by this response.\nLoad request cookies.\nWraps responder to allow alteration of its response.\nWraps responder to allow alteration of its response.\nAdd application (root) data after wrapping in <code>Data&lt;T&gt;</code>.\nAdd resource data after wrapping in <code>Data&lt;T&gt;</code>.\nAdd scope data after wrapping in <code>Data&lt;T&gt;</code>.\nAdd application data factory that resolves asynchronously.\nDefault service that is invoked when no matching resource …\nSets the default service to be used if no matching route …\nDefault service to be used if no matching resource could …\nRemove all cookies with the given name from this response.\nAdds a DELETE route.\nCreates route handler with <code>actix_web::guard::Delete</code>.\nLower-level types and re-exports.\nDisables signal handling.\nDrops body and returns new response.\nGet content type encoding.\nError and Result module\nThe source <code>error</code> for this response\nReturns a reference to the request-local data/extensions …\nReturns a reference to the response-local data/extensions …\nReturns reference to the response-local data/extensions …\nReturns a mutable reference to the request-local …\nReturns a mutable reference to the response-local …\nReturns reference to the response-local data/extensions …\nRegister an external resource.\nCreate a <code>Self</code> from request head asynchronously.\nCreate a <code>Self</code> from request head asynchronously.\nSet an empty body and build the <code>HttpResponse</code>.\nForce close connection, even if it is marked as keep-alive\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an error response.\nCreate a <code>Self</code> from request parts asynchronously.\nReturns request’s original full URL.\nAdds a GET route.\nCreates route handler with <code>actix_web::guard::Get</code>.\nRoute guards.\nAdd match guard to a resource.\nAdd guard to the route.\nAdd match guard to a scope.\nAdds a HEAD route.\nReturns a reference to response head.\nThis method returns reference to the request head\nCreates route handler with <code>actix_web::guard::Head</code>.\nReturns a mutable reference to response head.\nRead the message headers.\nGet the headers from the response\nReturns request’s headers.\nGet a mutable reference to the headers\nVarious HTTP related types.\nInsert a header, replacing any that were set with an …\nInsert (override) header in the final response.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the response body, dropping all other parts.\nReturns split head and body.\nSet a JSON body and build the <code>HttpResponse</code>.\nSet connection type to KeepAlive\nKeep-alive status for this connection\nSets server keep-alive preference.\nBinds to existing listener for accepting incoming …\nBinds to existing listener for accepting incoming …\nBinds to existing Unix Domain Socket (UDS) listener.\nMarks async main function as the Actix Web system …\nMap the current body type to another using a closure, …\nMap the current body to a type-erased <code>BoxBody</code>.\nMap the current body type <code>B</code> to <code>EitherBody::Left(B)</code>.\nMap the current body type <code>B</code> to <code>EitherBody::Right(B)</code>.\nReturns a reference to the URL parameters container.\nThe resource name that matched the path. Useful for …\nThe resource definition pattern that matched the path. …\nSets the per-worker maximum concurrent TLS connection …\nSets the per-worker maximum number of concurrent …\nSet a body and build the <code>HttpResponse</code>.\nAdd method guard to the route.\nRead the Request method.\nA collection of common middleware.\nConvert the request content type to a known mime type.\nSet resource name.\nCreate application builder. Application can be configured …\nConstructs new resource that matches a <code>path</code> pattern.\nCreate response builder\nConstructs a response.\nCreate new route which matches any request.\nCreate a new scope\nCreate new HTTP server with application factory\nDisable chunked transfer encoding for HTTP/1.1 streaming …\nSets function that will be called once before each …\nCreates route handler with <code>actix_web::guard::Options</code>.\nAdds a PATCH route.\nCreates route handler with <code>actix_web::guard::Patch</code>.\nThe target path of this request.\nReturns peer socket address.\nAdds a POST route.\nCreates route handler with <code>actix_web::guard::Post</code>.\nAdds a PUT route.\nCreates route handler with <code>actix_web::guard::Put</code>.\nThe query string in the URL.\nSet the custom reason for the response.\nGet a reference to a <code>ResourceMap</code> of current application.\nConvert self to <code>HttpResponse</code>.\nConfigure route for a specific path.\nRegister a new route.\nConfigure route for a specific path.\nCreates resource handler, allowing multiple HTTP method …\nCreates resource handler, allowing multiple HTTP methods …\nA selection of re-exports from <code>tokio</code> and <code>actix-rt</code>.\nStart listening for incoming connections.\nPrepends a path prefix to all handlers using routing …\nSets server host name.\nRegister HTTP service.\nSet raw service to be constructed and called as the …\nRegister HTTP service.\nMacro to help register different types of services at the …\nSets new body.\nSets timeout for graceful worker shutdown of workers.\nSet HTTP status code of this response.\nGet the response status code\nSet the <code>StatusCode</code> for this response\nSet a streaming body and build the <code>HttpResponse</code>.\nFlags the <code>System</code> to exit after server shutdown.\nThis method construct new <code>HttpResponseBuilder</code>\nMessage payload stream\nVarious helpers for Actix applications to use during …\nMarks async test functions to use the Actix Web system …\nRegister a new route and add handler. This route matches …\nSet handler function, use request extractors for …\nAdds a TRACE route.\nCreates route handler with <code>actix_web::guard::Trace</code>.\nSet connection type to Upgrade\nConnection upgrade status\nRequest’s uri.\nGenerates URL for a named resource.\nGenerate URL for named resource\nRead the Request Version.\nEssentials helper functions and types for application …\nConstructs a response with body\nOverride a status code for the Responder’s response.\nSets max number of threads for each worker’s blocking …\nSets number of workers to start (per bind address).\nRegisters an app-wide middleware.\nRegisters a resource middleware.\nRegisters a route middleware.\nRegisters a scope-wide middleware.\nRegisters an app-wide function middleware.\nRegisters a resource function middleware.\nRegisters a scope-wide function middleware.\nError type returned from <code>to_bytes_limited</code> when body …\nBody size hint.\nStreaming response wrapper.\nA boxed message body with boxed errors.\nAn “either” type specialized for body types.\nThe type of error that will be returned if streaming body …\nA body of type <code>L</code>.\nAn interface for types that can be used as a response body.\nBody type for responses that forbid payloads.\nImplicitly empty body.\nA body of type <code>R</code>.\nKnown size body.\nKnown sized streaming response wrapper.\nUnknown size body.\nEquivalent to <code>BodySize::Sized(0)</code>;\nReturns a mutable pinned reference to the inner message …\nWraps this body into a <code>BoxBody</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if size hint indicates omitted or empty body.\nCreates new <code>EitherBody</code> using left variant.\nBoxes body type, erasing type information.\nCreates new <code>EitherBody</code> left variant with a boxed right …\nConstructs new “none” body.\nAttempt to pull out the next chunk of body bytes.\nAttempts to pull out the next value of the underlying …\nAttempts to pull out the next value of the underlying …\nCreates new <code>EitherBody</code> using right variant.\nBody size hint.\nCollects all the bytes produced by <code>body</code>.\nCollects the bytes produced by <code>body</code>, up to <code>limit</code> bytes.\nTry to convert into the complete chunk of body bytes.\nRepresentation of an HTTP cookie.\nStructure that follows the builder pattern for building …\nA collection of cookies that tracks its modifications.\nExpiration for a “permanent” cookie at a specific …\nIterator over the changes to a cookie jar.\nWrapper around <code>Cookie</code> whose <code>Display</code> implementation either …\nThe cookie’s name was empty.\nA cookie’s expiration: either session or a date-time.\nIterator over all of the cookies in a jar.\nA cryptographic master key for use with <code>Signed</code> and/or …\nAn error indicating an issue with generating or …\nThe “Lax” <code>SameSite</code> attribute.\nThe cookie did not contain a name/value pair.\nThe “None” <code>SameSite</code> attribute.\nEnum corresponding to a parsing error.\nA child cookie jar that provides authenticated encryption …\nThe <code>SameSite</code> cookie attribute.\nExpiration for a “session” cookie. Browsers define the …\nA child cookie jar that authenticates its cookies.\nThe “Strict” <code>SameSite</code> attribute.\nToo few bytes (<code>.0</code>) were provided to generate a key.\nDecoding the cookie’s name or value resulted in invalid …\nAdds <code>cookie</code> to the parent jar. The cookie’s value is …\nAdds <code>cookie</code> to the parent jar. The cookie’s value is …\nAdds <code>cookie</code> to this jar. If a cookie with the same name …\nAdds an “original” <code>cookie</code> to parent jar. The cookie’…\nAdds an “original” <code>cookie</code> to this jar. The cookie’s …\nAdds an “original” <code>cookie</code> to this jar. If an original …\nReturns a description of this error as a string\nCreates a new <code>CookieBuilder</code> instance from the given key …\nReturns the inner <code>OffsetDateTime</code> if <code>self</code> is a <code>DateTime</code>.\nAuthenticates and decrypts <code>cookie</code>, returning the plaintext …\nReturns an iterator over cookies that represent the …\nDerives new signing/encryption keys from a master key.\nSets the <code>domain</code> field in the cookie being built.\nReturns the <code>Domain</code> of the cookie if one was specified.\nReturns the <code>Domain</code> of <code>self</code> as a string slice of the raw …\nPercent-encode the name and value pair.\nWraps <code>self</code> in an encoded <code>Display</code>: a cost-free wrapper …\nReturns the raw bytes of a key suitable for encrypting …\nSets the <code>expires</code> field in the cookie being built.\nReturns the <code>Expiration</code> of the cookie if one was specified.\nReturns the expiration date-time of the cookie if one was …\nFinishes building and returns the built <code>Cookie</code>.\nFormats the cookie <code>self</code> as a <code>Set-Cookie</code> header value.\nRemoves <code>cookie</code> from this jar completely. This method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Key</code> from a 512-bit cryptographically random …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates signing/encryption keys from a secure, random …\nReturns a reference to the <code>Cookie</code> inside this jar with the …\nReturns a reference to the <code>Cookie</code> inside this jar with the …\nReturns a reference to the <code>Cookie</code> inside this jar with the …\nSets the <code>http_only</code> field in the cookie being built.\nReturns whether this cookie was marked <code>HttpOnly</code> or not. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>self</code> into a <code>Cookie</code> with a static lifetime with as …\nReturns <code>true</code> if <code>self</code> is an <code>Expiration::DateTime</code>.\nReturns <code>true</code> if <code>self</code> is <code>SameSite::Lax</code> and <code>false</code> otherwise.\nReturns <code>true</code> if <code>self</code> is <code>SameSite::None</code> and <code>false</code> otherwise.\nReturns <code>true</code> if <code>self</code> is an <code>Expiration::Session</code>.\nReturns <code>true</code> if <code>self</code> is <code>SameSite::Strict</code> and <code>false</code> …\nReturns an iterator over all of the cookies present in …\nMakes <code>self</code> a “permanent” cookie by extending its …\nMake <code>self</code> a “removal” cookie by clearing its value, …\nApplied <code>f</code> to the inner <code>OffsetDateTime</code> if <code>self</code> is a <code>DateTime</code>…\nReturns the raw bytes of the master key. Guaranteed to be …\nSets the <code>max_age</code> field in the cookie being built.\nReturns the specified max-age of the cookie if one was …\nReturns the name of <code>self</code>.\nReturns the name of <code>self</code> as a string slice of the raw …\nReturns the name and value of <code>self</code> as a tuple of …\nCreates a new <code>Cookie</code> with the given name and an empty …\nCreates a new <code>CookieBuilder</code> instance from the given name …\nCreates an empty cookie jar.\nCreates a new <code>Cookie</code> with the given name and value.\nParses a <code>Cookie</code> from the given HTTP cookie header value …\nParses a <code>Cookie</code> from the given HTTP cookie header value …\nSets the <code>path</code> field in the cookie being built.\nReturns the <code>Path</code> of the cookie if one was specified.\nReturns the <code>Path</code> of <code>self</code> as a string slice of the raw …\nMakes the cookie being built ‘permanent’ by extending …\nReturns a read-only <code>PrivateJar</code> with <code>self</code> as its parent jar …\nReturns a read/write <code>PrivateJar</code> with <code>self</code> as its parent …\nRemoves <code>cookie</code> from the parent jar.\nRemoves <code>cookie</code> from the parent jar.\nRemoves <code>cookie</code> from this jar. If an <em>original</em> cookie with …\nRemoves all delta cookies, i.e. all cookies not added via …\nSets the <code>same_site</code> field in the cookie being built.\nReturns the <code>SameSite</code> attribute of this cookie if one was …\nSets the <code>secure</code> field in the cookie being built.\nReturns whether this cookie was marked <code>Secure</code> or not. …\nSets the <code>domain</code> of <code>self</code> to <code>domain</code>.\nSets the expires field of <code>self</code> to <code>time</code>. If <code>time</code> is <code>None</code>, an\nSets the value of <code>http_only</code> in <code>self</code> to <code>value</code>.  If <code>value</code> is …\nSets the value of <code>max_age</code> in <code>self</code> to <code>value</code>. If <code>value</code> is …\nSets the name of <code>self</code> to <code>name</code>.\nSets the <code>path</code> of <code>self</code> to <code>path</code>.\nSets the value of <code>same_site</code> in <code>self</code> to <code>value</code>. If <code>value</code> is …\nSets the value of <code>secure</code> in <code>self</code> to <code>value</code>. If <code>value</code> is <code>None</code>…\nSets the value of <code>self</code> to <code>value</code>.\nReturns a read-only <code>SignedJar</code> with <code>self</code> as its parent jar …\nReturns a read/write <code>SignedJar</code> with <code>self</code> as its parent jar …\nReturns the raw bytes of a key suitable for signing …\nOnly display the name and value.\nWraps <code>self</code> in a stripped <code>Display</code>]: a cost-free wrapper …\nA fallible version of <code>Key::from()</code>.\nAttempts to generate signing/encryption keys from a …\nUnsets the <code>domain</code> of <code>self</code>.\nUnsets the <code>expires</code> of <code>self</code>.\nUnsets the <code>path</code> of <code>self</code>.\nReturns the value of <code>self</code>.\nReturns the value of <code>self</code> as a string slice of the raw …\nVerifies the authenticity and integrity of <code>cookie</code>, …\nEquivalent to <code>1.days()</code>.\nDate in the proleptic Gregorian calendar.\nA span of time with nanosecond precision.\nContains the error value\nA unified error type for anything returned by a method in …\nEquivalent to <code>1.hours()</code>.\nA measurement of a monotonically non-decreasing clock. …\nThe maximum valid <code>Date</code>.\nThe maximum possible duration. Adding any positive …\nThe largest value that can be represented by …\nEquivalent to <code>1.microseconds()</code>.\nCreate a <code>Time</code> that is exactly midnight.\nEquivalent to <code>1.milliseconds()</code>.\nThe minimum valid <code>Date</code>.\nThe minimum possible duration. Adding any negative …\nThe smallest value that can be represented by …\nEquivalent to <code>1.minutes()</code>.\nMonths of the year.\nEquivalent to <code>1.nanoseconds()</code>.\nA <code>PrimitiveDateTime</code> with a <code>UtcOffset</code>.\nContains the success value\nCombined date and time.\nAn alias for <code>std::result::Result</code> with a generic error from …\nEquivalent to <code>1.seconds()</code>.\nThe clock time within a given date. Nanosecond precision.\nMidnight, 1 January, 1970 (UTC).\nA <code>UtcOffset</code> that is UTC.\nAn offset from UTC.\nEquivalent to <code>1.weeks()</code>.\nDays of the week.\nEquivalent to <code>0.seconds()</code>.\nGet the absolute value of the duration.\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nAdd the sub-day time of the <code>std::time::Duration</code> to the <code>Time</code>…\nAdd the sub-day time of the <code>Duration</code> to the <code>Time</code>. Wraps on …\nPanics\nPanics\nPanics\nPanics\nGet the clock hour, minute, and second.\nGet the clock hour, minute, and second.\nObtain the UTC offset as its hours, minutes, and seconds. …\nGet the clock hour, minute, second, and microsecond.\nGet the clock hour, minute, second, and microsecond.\nGet the clock hour, minute, second, and millisecond.\nGet the clock hour, minute, second, and millisecond.\nGet the clock hour, minute, second, and nanosecond.\nGet the clock hour, minute, second, and nanosecond.\nGet the number of fractional seconds in the duration.\nGet the number of fractional seconds in the duration.\nAssuming that the existing <code>PrimitiveDateTime</code> represents a …\nAssuming that the existing <code>PrimitiveDateTime</code> represents a …\nComputes <code>self + duration</code>, returning <code>None</code> if an overflow …\nComputes <code>self + rhs</code>, returning <code>None</code> if an overflow …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nComputes <code>self + duration</code>, returning <code>None</code> if an overflow …\nComputes <code>self + duration</code>, returning <code>None</code> if an overflow …\nComputes <code>self + duration</code>, returning <code>None</code> if an overflow …\nComputes <code>self / rhs</code>, returning <code>None</code> if <code>rhs == 0</code> or if the …\nComputes <code>self * rhs</code>, returning <code>None</code> if an overflow …\nComputes <code>-self</code>, returning <code>None</code> if the result would …\nCreates a new <code>Duration</code> from the specified number of seconds\nCreates a new <code>Duration</code> from the specified number of seconds\nComputes <code>self - duration</code>, returning <code>None</code> if an overflow …\nComputes <code>self - rhs</code>, returning <code>None</code> if an overflow …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nComputes <code>self - duration</code>, returning <code>None</code> if an overflow …\nComputes <code>self - duration</code>, returning <code>None</code> if an overflow …\nComputes <code>self - duration</code>, returning <code>None</code> if an overflow …\nConvert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to …\nConversion between units of time.\nGet the <code>Date</code> in the stored offset.\nGet the <code>Date</code> component of the <code>PrimitiveDateTime</code>.\nGet the day of the month.\nGet the day of the date in the stored offset.\nGet the day of the date.\nCreate a new <code>Duration</code> with the given number of days. …\nReturns the amount of time elapsed since this instant was …\nVarious error types returned by methods in the time crate.\nExtension traits.\nFormat the <code>Date</code> using the provided format description.\nFormat the <code>OffsetDateTime</code> using the provided format …\nFormat the <code>PrimitiveDateTime</code> using the provided format …\nFormat the <code>Time</code> using the provided format description.\nFormat the <code>UtcOffset</code> using the provided format description.\nDescription of how types should be formatted and parsed.\nFormat the <code>Date</code> using the provided format description.\nFormat the <code>OffsetDateTime</code> using the provided format …\nFormat the <code>PrimitiveDateTime</code> using the provided format …\nFormat the <code>Time</code> using the provided format description.\nFormat the <code>UtcOffset</code> using the provided format description.\nFormatting for various types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to create a <code>Date</code> from the year, month, and day.\nAttempt to create a <code>Time</code> from the hour, minute, and second.\nCreate a <code>UtcOffset</code> representing an offset by the number of …\nAttempt to create a <code>Time</code> from the hour, minute, second, …\nAttempt to create a <code>Time</code> from the hour, minute, second, …\nAttempt to create a <code>Time</code> from the hour, minute, second, …\nAttempt to create a <code>Date</code> from the ISO year, week, and …\nCreate a <code>Date</code> from the Julian day.\nAttempt to create a <code>Date</code> from the year and ordinal day …\nCreate an <code>OffsetDateTime</code> from the provided Unix timestamp. …\nConstruct an <code>OffsetDateTime</code> from the provided Unix …\nCreate a <code>UtcOffset</code> representing an offset by the number of …\nGet the clock hour in the stored offset.\nGet the clock hour.\nGet the clock hour.\nCreate a new <code>Duration</code> with the given number of hours. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObtain the inner <code>std::time::Instant</code>.\nCheck if a duration is negative.\nCheck if the offset is negative, or west of UTC.\nCheck if a duration is positive.\nCheck if the offset is positive, or east of UTC.\nCheck if the offset is exactly UTC.\nCheck if a duration is exactly zero.\nGet the ISO week number.\nGet the ISO week number of the date in the stored offset.\nGet the ISO week number.\nMacros to construct statically known values.\nGet the microseconds within the second in the stored …\nGet the microseconds within the second.\nGet the microseconds within the second.\nCreate a new <code>Duration</code> with the given number of …\nCreate a <code>PrimitiveDateTime</code> using the existing date. The …\nGet the milliseconds within the second in the stored …\nGet the milliseconds within the second.\nGet the milliseconds within the second.\nCreate a new <code>Duration</code> with the given number of …\nGet the minute within the hour in the stored offset.\nGet the minute within the hour.\nGet the minute within the hour.\nCreate a new <code>Duration</code> with the given number of minutes. …\nObtain the number of minutes past the hour the offset is …\nGet the week number where week 1 begins on the first …\nGet the week number where week 1 begins on the first …\nGet the week number where week 1 begins on the first …\nGet the month.\nGet the month of the date in the stored offset.\nGet the month of the date.\nGet the nanoseconds within the second in the stored offset.\nGet the nanoseconds within the second.\nGet the nanoseconds within the second.\nCreate a new <code>Duration</code> with the given number of nanoseconds.\nCreate a new <code>Duration</code> with the provided seconds and …\nCreate a new <code>PrimitiveDateTime</code> from the provided <code>Date</code> and …\nCreate a new <code>OffsetDateTime</code> with the given <code>Date</code>, <code>Time</code>, and …\nCreate a new <code>OffsetDateTime</code> with the given <code>Date</code> and <code>Time</code> …\nGet the next month.\nGet the next weekday.\nGet the next calendar date.\nCalculates the first occurrence of a weekday that is …\nReturns an <code>Instant</code> corresponding to “now”.\nCreate a new <code>OffsetDateTime</code> with the current date and time …\nGet n-th next month.\nGet n-th next day.\nCalculates the <code>n</code>th occurrence of a weekday that is …\nGet n-th previous month.\nGet n-th previous day.\nCalculates the <code>n</code>th occurrence of a weekday that is …\nGet the zero-indexed number of days from Monday.\nGet the zero-indexed number of days from Sunday.\nGet the one-indexed number of days from Monday.\nGet the one-indexed number of days from Sunday.\nGet the <code>UtcOffset</code>.\nGet the day of the year.\nGet the day of the year of the date in the stored offset.\nGet the day of the year.\nParse a <code>Date</code> from the input using the provided format …\nParse an <code>OffsetDateTime</code> from the input using the provided …\nParse a <code>PrimitiveDateTime</code> from the input using the …\nParse a <code>Time</code> from the input using the provided format …\nParse a <code>UtcOffset</code> from the input using the provided format …\nParsing for various types.\nCalculates the first occurrence of a weekday that is …\nGet the previous month.\nGet the previous weekday.\nGet the previous calendar date.\nReplace the date, which is assumed to be in the stored …\nReplace the date, preserving the time.\nReplace the date and time, which are assumed to be in the …\nReplace the day of the month.\nReplace the day of the month.\nReplace the day of the month.\nReplace the clock hour.\nReplace the clock hour.\nReplace the clock hour.\nReplace the microseconds within the second.\nReplace the microseconds within the second.\nReplace the microseconds within the second.\nReplace the milliseconds within the second.\nReplace the milliseconds within the second.\nReplace the milliseconds within the second.\nReplace the minutes within the hour.\nReplace the minutes within the hour.\nReplace the minutes within the hour.\nReplace the month of the year.\nReplace the month of the year.\nReplace the month of the year.\nReplace the nanoseconds within the second.\nReplace the nanoseconds within the second.\nReplace the nanoseconds within the second.\nReplace the offset. The date and time components remain …\nReplace the day of the year.\nReplace the day of the year.\nReplace the day of the year.\nReplace the seconds within the minute.\nReplace the seconds within the minute.\nReplace the seconds within the minute.\nReplace the time, which is assumed to be in the stored …\nReplace the time, preserving the date.\nReplace the year. The month and day will be unchanged.\nReplace the year. The month and day will be unchanged.\nReplace the year. The month and day will be unchanged.\nComputes <code>self + duration</code>, saturating value on overflow.\nComputes <code>self + rhs</code>, saturating if an overflow occurred.\nComputes <code>self + duration</code>, saturating value on overflow.\nComputes <code>self + duration</code>, saturating value on overflow.\nComputes <code>self * rhs</code>, saturating if an overflow occurred.\nCreates a new <code>Duration</code> from the specified number of seconds\nCreates a new <code>Duration</code> from the specified number of seconds\nComputes <code>self - duration</code>, saturating value on overflow.\nComputes <code>self - rhs</code>, saturating if an overflow occurred.\nComputes <code>self - duration</code>, saturating value on overflow.\nComputes <code>self - duration</code>, saturating value on overflow.\nGet the second within the minute in the stored offset.\nGet the second within the minute.\nGet the second within the minute.\nCreate a new <code>Duration</code> with the given number of seconds.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nObtain the number of seconds past the minute the offset is …\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nPanics\nSubtract two <code>Time</code>s, returning the <code>Duration</code> between. This …\nSubtract the sub-day time of the <code>Duration</code> from the <code>Time</code>. …\nSubtract the sub-day time of the <code>std::time::Duration</code> from …\nPanics\nPanics\nPanics\nPanics\nGet the number of microseconds past the number of whole …\nGet the number of milliseconds past the number of whole …\nGet the number of nanoseconds past the number of whole …\nGet the week number where week 1 begins on the first …\nGet the week number where week 1 begins on the first …\nGet the week number where week 1 begins on the first …\nGet the <code>Time</code> in the stored offset.\nGet the <code>Time</code> component of the <code>PrimitiveDateTime</code>.\nRuns a closure, returning the duration of time it took to …\nGet the year, month, and day.\nGet the year, month, and day.\nGet the year, month, and day.\nGet the clock hour, minute, and second.\nGet the clock hour, minute, second, and microsecond.\nGet the clock hour, minute, second, and millisecond.\nGet the clock hour, minute, second, and nanosecond.\nGet the ISO 8601 year, week number, and weekday.\nGet the ISO 8601 year, week number, and weekday.\nGet the ISO 8601 year, week number, and weekday.\nGet the Julian day for the date.\nGet the Julian day for the date. The time is not taken …\nGet the Julian day for the date. The time is not taken …\nConvert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to …\nGet the year and ordinal day number.\nGet the year and ordinal day number.\nGet the year and ordinal day number.\nGet the Unix timestamp.\nGet the Unix timestamp in nanoseconds.\nConvert the existing <code>Duration</code> to a <code>std::time::Duration</code> and …\nUtility functions.\nGet the weekday.\nGet the weekday of the date in the stored offset.\nGet the weekday.\nCreate a new <code>Duration</code> with the given number of weeks. …\nGet the number of whole days in the duration.\nGet the number of whole hours in the duration.\nObtain the number of whole hours the offset is from UTC. A …\nGet the number of whole microseconds in the duration.\nGet the number of whole milliseconds in the duration.\nGet the number of whole minutes in the duration.\nObtain the number of whole minutes the offset is from UTC. …\nGet the number of nanoseconds in the duration.\nGet the number of whole seconds in the duration.\nObtain the number of whole seconds the offset is from UTC. …\nGet the number of whole weeks in the duration.\nAttempt to create a <code>PrimitiveDateTime</code> using the existing …\nAttempt to create a <code>PrimitiveDateTime</code> using the existing …\nAttempt to create a <code>PrimitiveDateTime</code> using the existing …\nAttempt to create a <code>PrimitiveDateTime</code> using the existing …\nCreate a <code>PrimitiveDateTime</code> using the existing date and the …\nGet the year of the date.\nGet the year of the date in the stored offset.\nGet the year of the date.\nA unit of time representing exactly one day.\nA unit of time representing exactly one hour.\nA unit of time representing exactly one microsecond.\nA unit of time representing exactly one millisecond.\nA unit of time representing exactly one minute.\nA unit of time representing exactly one nanosecond.\nA unit of time representing exactly one second.\nA unit of time representing exactly one week.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObtain the number of times <code>Nanosecond</code> can fit into <code>T</code>. If <code>T</code> …\nObtain the number of times <code>Microsecond</code> can fit into <code>T</code>. If <code>T</code>…\nObtain the number of times <code>Millisecond</code> can fit into <code>T</code>. If <code>T</code>…\nObtain the number of times <code>Second</code> can fit into <code>T</code>. If <code>T</code> is …\nObtain the number of times <code>Minute</code> can fit into <code>T</code>. If <code>T</code> is …\nObtain the number of times <code>Hour</code> can fit into <code>T</code>. If <code>T</code> is …\nObtain the number of times <code>Day</code> can fit into <code>T</code>. If <code>T</code> is …\nObtain the number of times <code>Week</code> can fit into <code>T</code>. If <code>T</code> is …\nAn error type indicating that a component provided to a …\nSome component contained an invalid value for the type.\nAn error type indicating that a conversion failed because …\nAn error type indicating that a <code>TryFrom</code> call failed …\nA unified error type for anything returned by a method in …\nSomething was expected, but not found.\nAn error occurred when formatting.\nThe <code>Parsed</code> did not include enough information to construct …\nThe type being formatted does not contain sufficient …\nThe component named has a value that cannot be formatted …\nA dynamic component was not valid.\nA component name is not valid.\nThe format description provided was not valid.\nA string literal was not what was expected.\nA modifier is not valid.\nAn error type indicating that a <code>FromStr</code> call failed …\nA component name is missing.\nA required modifier is missing.\nCertain behavior is not supported in the given context.\nAn error that occurred at some stage of parsing.\nAn error that occurred while parsing the input into a …\nA value of <code>std::io::Error</code> was returned internally.\nAn error that occurred when converting a <code>Parsed</code> to another …\nThere was a bracket pair that was opened but not closed.\nThe input should have ended, but there were characters …\nThe input was expected to have ended, but there are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the value’s permitted range is conditional, i.e. …\nObtain the name of the component whose value was out of …\nThe context in which the behavior is not supported.\nThe zero-based index of the opening bracket.\nThe zero-based index the component name starts at.\nThe zero-based index the modifier starts at.\nThe zero-based index where the component name should start.\nThe zero-based index of the component.\nThe zero-based index the item was expected to be found at.\nThe zero-based index the error occurred at.\nThe name of the invalid component name.\nThe name of the modifier that is missing.\nThe value of the invalid modifier.\nWhat was expected to be present, but wasn’t.\nThe behavior that is not supported.\nAn extension trait for <code>std::time::Instant</code> that adds …\nCreate <code>Duration</code>s from numeric literals.\nCreate <code>std::time::Duration</code>s from numeric literals.\nPanics\nReturns <code>Some(t)</code> where <code>t</code> is the time …\nReturns <code>Some(t)</code> where <code>t</code> is the time …\nCreate a <code>Duration</code> from the number of days.\nCreate a <code>Duration</code> from the number of hours.\nCreate a <code>Duration</code> from the number of microseconds.\nCreate a <code>Duration</code> from the number of milliseconds.\nCreate a <code>Duration</code> from the number of minutes.\nCreate a <code>Duration</code> from the number of nanoseconds.\nCreate a <code>Duration</code> from the number of seconds.\nReturns the amount of time elapsed from another instant to …\nCreate a <code>std::time::Duration</code> from the number of days.\nCreate a <code>std::time::Duration</code> from the number of hours.\nCreate a <code>std::time::Duration</code> from the number of …\nCreate a <code>std::time::Duration</code> from the number of …\nCreate a <code>std::time::Duration</code> from the number of minutes.\nCreate a <code>std::time::Duration</code> from the number of …\nCreate a <code>std::time::Duration</code> from the number of seconds.\nCreate a <code>std::time::Duration</code> from the number of weeks.\nPanics\nCreate a <code>Duration</code> from the number of weeks.\nA complete description of how to format and parse a type.\nA component of a larger format description.\nA minimal representation of a single non-literal item.\nA minimal representation of a single non-literal item.\nA minimal representation of a single non-literal item.\nA series of literals or components that collectively form …\nA series of literals or components that collectively form …\nA series of literals or components that collectively form …\nDay of the month.\nThe end of input. Parsing this component will fail if …\nA series of <code>FormatItem</code>s where, when parsing, the first …\nA series of <code>FormatItem</code>s where, when parsing, the first …\nA series of <code>FormatItem</code>s where, when parsing, the first …\nA complete description of how to format and parse a type.\nHour of the day.\nA number of bytes to ignore when parsing. This has no …\nBytes that are formatted as-is.\nBytes that are formatted as-is.\nBytes that are formatted as-is.\nMinute within the hour.\nMonth of the year.\nHour of the UTC offset.\nMinute within the hour of the UTC offset.\nSecond within the minute of the UTC offset.\nA <code>FormatItem</code> that may or may not be present when parsing. …\nA <code>FormatItem</code> that may or may not be present when parsing. …\nA <code>FormatItem</code> that may or may not be present when parsing. …\nOrdinal day of the year.\nA complete description of how to format and parse a type.\nAM/PM part of the time.\nSecond within the minute.\nSubsecond within the second.\nA Unix timestamp.\nWeek within the year.\nDay of the week.\nYear of the date.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVarious modifiers for components.\nParse a sequence of items from the format description.\nParse a sequence of items from the format description.\nParse a sequence of items from the format description.\nWell-known formats, typically standards.\nDay of the month.\nExactly eight digits.\nThe end of input.\nExactly five digits.\nExactly four digits.\nThe full value of the year.\nHour of the day.\nIgnore some number of bytes.\nWeek 1 is the week that contains January 4.\nOnly the last two digits of the year.\nThe long form of the month name (e.g. “January”).\nThe long form of the weekday (e.g. “Monday”).\nMicroseconds since the Unix epoch.\nMilliseconds since the Unix epoch.\nMinute within the hour.\nA numerical representation using Monday as the first day …\nWeek 1 begins on the first Monday of the calendar year.\nMonth of the year.\nThe representation of a month.\nNanoseconds since the Unix epoch.\nExactly nine digits.\nThere is no padding. This can result in a width below the …\nThe number of the month (January is 1, December is 12).\nHour of the UTC offset.\nMinute within the hour of the UTC offset.\nSecond within the minute of the UTC offset.\nExactly one digit.\nAny number of digits (up to nine) that is at least one. …\nOrdinal day of the year.\nType of padding to ensure a minimum width.\nAM/PM part of the time.\nSecond within the minute.\nSeconds since the Unix epoch.\nExactly seven digits.\nThe short form of the month name (e.g. “Jan”).\nThe short form of the weekday (e.g. “Mon”).\nExactly six digits.\nA space character (<code> </code>) should be used as padding.\nSubsecond within the second.\nThe number of digits present in a subsecond representation.\nA numerical representation using Sunday as the first day …\nWeek 1 begins on the first Sunday of the calendar year.\nExactly three digits.\nExactly two digits.\nA Unix timestamp.\nThe precision of a Unix timestamp.\nWeek within the year.\nThe representation used for the week number.\nDay of the week.\nThe representation used for the day of the week.\nYear of the date.\nThe representation used for a year value.\nA zero character (<code>0</code>) should be used as padding.\nIs the value case sensitive when parsing?\nIs the value case sensitive when parsing?\nIs the value case sensitive when parsing?\nCreate an instance of <code>Ignore</code> with the provided number of …\nThe number of bytes to ignore.\nCreates a modifier that indicates the value is padded with …\nCreates an instance of this type that indicates the value …\nCreates a modifier that indicates the value is padded with …\nCreates a modifier that indicates the value uses the <code>Long</code> …\nCreates a modifier that indicates that the value is padded …\nCreates a modifier that indicates the value uses the <code>Full</code> …\nCreates a modifier that indicates the value is padded with …\nCreates a modifier that indicates the value is padded with …\nCreates a modifier that indicates the value uses the …\nCreates a modifier that indicates the value is padded with …\nCreates a modifier that indicates the stringified value …\nCreates a modifier that indicates the value only uses a …\nCreates a modifier that indicates the value is padded with …\nCreates a modifier that indicates the value is padded with …\nCreates a modifier that indicates the value represents the …\nCreates a modifier used to represent the end of input.\nHow many digits are present in the component?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the hour displayed using a 12 or 24-hour clock?\nIs the period uppercase or lowercase?\nWhether the value is based on the ISO week number or the …\nWhen using a numerical representation, should it be zero …\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe padding to obtain the minimum width.\nThe precision of the timestamp.\nWhat form of representation should be used?\nWhat form of representation should be used?\nWhat kind of representation should be used?\nWhat kind of representation should be used?\nWhether the <code>+</code> sign is present when a positive year …\nWhether the <code>+</code> sign is present on positive values.\nWhether the <code>+</code> sign must be present for a non-negative …\nAn <code>Iso8601</code> that handles only the date, but is otherwise …\nAn <code>Iso8601</code> that handles the date and time, but is …\nAn <code>Iso8601</code> that handles the date, time, and UTC offset. …\nAn <code>Iso8601</code> with the default configuration.\nThe format described in ISO 8601.\nAn <code>Iso8601</code> that handles only the UTC offset, but is …\nAn <code>Iso8601</code> that can only be used for parsing. Using this …\nThe format described in RFC 2822.\nThe format described in RFC 3339.\nAn <code>Iso8601</code> that handles only the time, but is otherwise …\nAn <code>Iso8601</code> that handles the time and UTC offset, but is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe format described in ISO 8601.\nUse the year-month-day format.\nConfiguration for <code>Iso8601</code>.\nA configuration for the <code>Iso8601</code> format.\nFormat only the date.\nWhich format to use for the date.\nFormat the date and time.\nFormat the date, time, and UTC offset.\nAn encoded <code>Config</code> that can be used as a const parameter to …\nWhich components to format.\nFormat the hour only. Minutes, seconds, and nanoseconds …\nFormat only the offset hour. Requires the offset minute to …\nThe format described in ISO 8601.\nFormat the hour and minute. Seconds and nanoseconds will …\nFormat both the offset hour and minute.\nThe configuration can only be used for parsing. Using this …\nFormat only the UTC offset.\nThe precision for the UTC offset.\nUse the week-ordinal format.\nFormat the hour, minute, and second. Nanoseconds will be …\nFormat only the time.\nFormat the time and UTC offset.\nThe precision and number of decimal digits present for the …\nUse the year-week-weekday format.\nEncode the configuration, permitting it to be used as a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the format used for the date.\nSet whether the format the date, time, and/or UTC offset.\nSet the precision for the UTC offset.\nSet the precision and number of decimal digits present for …\nSet whether the format contains separators (such as <code>-</code> or <code>:</code>…\nSet whether the year is six digits.\nA type that describes a format.\nA type that can be parsed.\nAll information parsed.\nObtain the <code>day</code> component.\nReturns the argument unchanged.\nObtain the <code>hour_12</code> component.\nObtain the <code>hour_12_is_pm</code> component.\nObtain the <code>hour_24</code> component.\nCalls <code>U::from(self)</code>.\nObtain the <code>iso_week_number</code> component.\nObtain the <code>iso_year</code> component.\nObtain the <code>iso_year_last_two</code> component.\nObtain the <code>minute</code> component.\nObtain the <code>monday_week_number</code> component.\nObtain the <code>month</code> component.\nCreate a new instance of <code>Parsed</code> with no information known.\nObtain the <code>offset_hour</code> component.\nObtain the <code>offset_minute</code> component.\nObtain the <code>offset_second</code> component.\nObtain the <code>ordinal</code> component.\nParse a single component, mutating the struct. The …\nParse a single <code>BorrowedFormatItem</code> or <code>OwnedFormatItem</code>, …\nParse a sequence of <code>BorrowedFormatItem</code>s or <code>OwnedFormatItem</code>…\nParse a literal byte sequence. The remaining input is …\nObtain the <code>second</code> component.\nSet the <code>set_day</code> component.\nSet the <code>set_hour_12</code> component.\nSet the <code>set_hour_12_is_pm</code> component.\nSet the <code>set_hour_24</code> component.\nSet the <code>set_iso_week_number</code> component.\nSet the <code>set_iso_year</code> component.\nSet the <code>set_iso_year_last_two</code> component.\nSet the <code>set_minute</code> component.\nSet the <code>set_monday_week_number</code> component.\nSet the <code>set_month</code> component.\nSet the <code>set_offset_hour</code> component.\nSet the <code>set_offset_minute_signed</code> component.\nSet the <code>set_offset_second_signed</code> component.\nSet the <code>set_ordinal</code> component.\nSet the <code>set_second</code> component.\nSet the <code>set_subsecond</code> component.\nSet the <code>set_sunday_week_number</code> component.\nSet the <code>set_unix_timestamp_nanos</code> component.\nSet the <code>set_weekday</code> component.\nSet the <code>set_year</code> component.\nSet the <code>set_year_last_two</code> component.\nObtain the <code>subsecond</code> component.\nObtain the <code>sunday_week_number</code> component.\nObtain the <code>unix_timestamp_nanos</code> component.\nObtain the <code>weekday</code> component.\nSet the <code>day</code> component and return <code>self</code>.\nSet the <code>hour_12</code> component and return <code>self</code>.\nSet the <code>hour_12_is_pm</code> component and return <code>self</code>.\nSet the <code>hour_24</code> component and return <code>self</code>.\nSet the <code>iso_week_number</code> component and return <code>self</code>.\nSet the <code>iso_year</code> component and return <code>self</code>.\nSet the <code>iso_year_last_two</code> component and return <code>self</code>.\nSet the <code>minute</code> component and return <code>self</code>.\nSet the <code>monday_week_number</code> component and return <code>self</code>.\nSet the <code>month</code> component and return <code>self</code>.\nSet the <code>offset_hour</code> component and return <code>self</code>.\nSet the <code>offset_minute</code> component and return <code>self</code>.\nSet the <code>offset_second</code> component and return <code>self</code>.\nSet the <code>ordinal</code> component and return <code>self</code>.\nSet the <code>second</code> component and return <code>self</code>.\nSet the <code>subsecond</code> component and return <code>self</code>.\nSet the <code>sunday_week_number</code> component and return <code>self</code>.\nSet the <code>unix_timestamp_nanos</code> component and return <code>self</code>.\nSet the <code>weekday</code> component and return <code>self</code>.\nSet the <code>year</code> component and return <code>self</code>.\nSet the <code>year_last_two</code> component and return <code>self</code>.\nObtain the <code>year</code> component.\nObtain the <code>year_last_two</code> component.\nGet the number of calendar days in a given year.\nGet the number of days in the month of a given year.\nReturns if the provided year is a leap year in the …\nGet the number of weeks in the ISO year.\nApplication connection config.\nApplication configuration\nService factory configuration.\nHTTP connection information.\nErrors produced by the service.\nErrors produced by the service when polling readiness or …\nErrors produced by the created services.\nA type map for request extensions.\nThe future response value.\nThe future response value.\nThe future of the <code>Service</code> instance.g\nErrors produced while building a transform service.\nErrors potentially raised while building a service.\nFuture that resolves to some <code>T</code> when parsed from a JSON …\nResource path match information.\nA streaming payload.\nExtractor for peer’s socket address.\nStream that reads request line by line.\nDescribes the set of paths that match to a resource.\nAn HTTP response.\nResponses produced by the service.\nResponses given by the service.\nResponses given by the created services.\nGeneral purpose TCP server that runs services receiving …\nServer handle.\nAn asynchronous operation from <code>Request</code> to a <code>Response</code>.\nThe kind of <code>Service</code> created by this factory.\nFactory for creating <code>Service</code>s.\nA service level request wrapper.\nA service level response wrapper.\nDefines the interface of a service factory that wraps …\nThe <code>TransformService</code> value created by this factory\nFuture that resolves to some <code>T</code> when parsed from a URL …\nAdds a (possibly nested) resource.\nAdd data container to request’s resolution set.\nAn implementation of <code>poll_ready</code> that always signals …\nCounterpart to <code>HttpRequest::app_config</code>.\nCounterpart to <code>HttpRequest::app_data</code>.\nReturns full path as a string.\nConstructs a new response with status 400 Bad Request.\nReturns a reference to the body of this response.\nCreate server build.\nConstructs a new response builder.\nProcess the request and return the response asynchronously.\nIs to uppercase headers with Camel-Case. Default is <code>false</code>\nCollects dynamic segment values into <code>resource</code>.\nCollects dynamic segment values into <code>resource</code> after …\nGet response body chunking state\nGet response body chunking state\nClear the <code>Extensions</code> of all inserted extensions.\nReturns reference to configuration.\nCounterpart to <code>HttpRequest::conn_data</code>.\nReturns a reference to connection info.\nConnection type\nCheck if map contains an item of a given type.\nReturn request cookie.\nReturn request cookies.\nReturns the default AppConfig. Note: The included socket …\nReturns default handler factory.\nDrops body and returns new response.\nCreate <code>ServiceResponse</code> from this request and given error.\nCreate service response for error\nRequest contains <code>EXPECT</code> header.\nExtends self with the items from another <code>Extensions</code>.\nReturns a reference to the request-local data/extensions …\nReturns a mutable reference to the request-local …\nDerives a type from this request using an extractor.\nTries to match <code>path</code> to this resource, returning the …\nSet a service factory implementation and generate web …\nCreate <code>ServiceFactory</code> for function that can produce …\nCreate <code>ServiceFactory</code> for function that can act as a …\nAn implementation of <code>poll_ready</code> that forwards readiness …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate service response from the error\nConstruct decoder based on headers.\nConstruct request from parts.\nConstruct <code>ServiceRequest</code> with no payload from given …\nGet matched parameter by name without type conversion\nGet a reference to an item of a given type.\nReturns mutable reference to inner path instance.\nGet a mutable reference to an item of a given type.\nReturns reference to inner path instance.\nAdd match guard to a web service.\nCreates a context object for use with a routing guard.\nGet a <code>Server</code> handle that can be used issue commands and …\nReturns true if there is a resource that would match <code>path</code>.\nReturns a reference to the head of this response.\nReturns a reference to the request head.\nReturns a mutable reference to the head of this response.\nReturns a mutable reference to the request head.\nReturns a reference to response headers.\nReturns a reference to request headers.\nReturns response’s headers.\nRead the message headers.\nRead the message headers.\nReturns a mutable reference to response headers.\nReturns a mutable reference to request headers.\nReturns mutable response’s headers.\nMutable reference to the message headers.\nMutable reference to the message headers.\nServer host name.\nHostname of the request.\nReturns a numeric resource ID.\nInsert an item into the map.\nConstructs a new response with status 500 Internal Server …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the response body, dropping all other parts.\nConsumes the response and returns its body.\nUnwrap into inner <code>SocketAddr</code> value.\nReturns split head and body.\nDeconstruct <code>ServiceRequest</code> into inner parts.\nDestructures <code>ServiceResponse</code> into request and response …\nCreate <code>ServiceResponse</code> from this request and given …\nCreate service response\nCheck if there are any matched patterns.\nReturns <code>true</code> if <code>path</code> matches this resource.\nReturns <code>true</code> if pattern type is prefix.\nCheck if root is being configured\nReturn iterator to items in parameter container.\nJoins two resources.\nReturns true if keep-alive is enabled.\nCheck if keep-alive is enabled\nSet maximum accepted payload size. The default limit is …\nSet maximum accepted payload size. The default limit is …\nSet maximum accepted payload size. The default limit is …\nDeserializes matching parameters to a specified type <code>U</code>.\nReturns the socket address of the local half of this TCP …\nMap the current body type to another using a closure, …\nMap the current body type to another using a closure. …\nMap the current body to a type-erased <code>BoxBody</code>.\nCounterpart to <code>HttpRequest::match_info</code>.\nReturns a mutable reference to the path match information.\nCounterpart to <code>HttpRequest::match_name</code>.\nReturns the name of the route that matches the given path …\nCounterpart to <code>HttpRequest::match_pattern</code>.\nReturns the full resource pattern matched against a path …\nReturns the request method.\nReturns resource definition name, if set.\nSet service name.\nConstructs a new resource definition from patterns.\nConstructs a new response with default body.\nCreate service response instance\nCreate new <code>WebService</code> instance.\nCreate a new future to decode a URL encoded request …\nConstruct a decoder.\nCreate a new future to decode a JSON request payload.\nCreates an empty <code>Extensions</code>.\nCreate a new stream to read request line by line.\nCreate new instance of <code>ResponseHead</code> type\nCreates a <em>container</em> node in the <code>ResourceMap</code> tree.\nCreate and return a new service asynchronously.\nCreates and returns a new Transform component, …\nSet no chunking for payload\nConstructs a new response with status 404 Not Found.\nConstructs a new response with status 200 OK.\nReturns immutable accessors to inner parts.\nReturns mutable accessors to inner parts.\nReturns path.\nReturns request path.\nReturns the pattern string that generated the resource …\nReturns iterator of pattern strings that generated the …\nPause accepting incoming connections.\nReturns peer’s socket address.\nReturns serialized IP address of the peer connection.\nWill only be None when called in unit tests unless set …\nReturns <code>Ready</code> when the service is able to process requests.\nConstructs a new resource definition using a pattern that …\nReturns matched parameter by name.\nCounterpart to <code>HttpRequest::query_string</code>.\nReal IP (remote address) of client that initiated request.\nGet custom reason for the response\nRegister HTTP service.\nRemove an item from the map of a given type.\nReturns immutable accessor to inner <code>HttpRequest</code>.\nReturns reference to original request.\nReset state.\nReturns a reference to the application’s resource map. …\nAssembles full resource path from iterator of dynamic …\nAssembles resource path from map of dynamic segment values.\nReturns reference to response.\nReturns mutable reference to response.\nResume accepting incoming connections.\nConstructs a new resource definition using a string …\nScheme of the request.\nReturns true if connection is secure (i.e., running over …\nReturns number of interpolated segments.\nSet new path.\nSets new body.\nSet <code>true</code> to send headers which are formatted as Camel-Case.\nSets the flag that controls whether to send headers …\nSet connection type of the message\nSet connection type of the message\nSet numeric resource ID.\nAssigns a new name to the resource.\nSet request payload.\nSkip first <code>n</code> chars in path.\nReturns the status code of this response.\nReturns response status code.\nReturns a mutable reference the status code of this …\nStop incoming connection processing, stop all workers and …\nTakes current payload and replaces it with <code>None</code> value\nReturns unprocessed part of the path.\nReturns true if connection upgrade is enabled.\nConnection upgrade status\nCheck upgrade status of this message\nReturns URI.\nReturns the request URI.\nGenerate URL for named resource.\nReturns the request version.\nConstructs a new response with given body.\nLength as reported by <code>Content-Length</code> header, if present.\nAn error representing a problem running a blocking task on …\nBody streaming error.\nCan not decode chunked transfer encoding.\nContent type error.\nContent type error\nA set of error that can occur during parsing content type.\nContentType error.\nDeserialize error\nDeserialize error\nQuery deserialize error.\nDisconnect timeout. Makes sense for TLS streams.\nA set of errors that can occur during dispatching HTTP …\nEncoding error.\nContent encoding stream corruption.\nPayload size is bigger than allowed. (default: 256kB)\nContains the error value\nGeneral purpose Actix Web error.\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a <code>GONE</code> …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a <code>LOCKED</code>…\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHelper function that wraps any error and generates a …\nHTTP/2 error.\nHandler dropped payload before reading EOF.\nAn invalid <code>Header</code>.\nHTTP/2 payload error.\nA generic “error” for HTTP connections\nA message reached EOF, but is not complete.\nA payload reached EOF, but is not complete.\nWraps errors to alter the generated response status code.\nInternal error.\nAn I/O error that occurred while trying to read or write …\nGeneric I/O error.\nAn <code>io::Error</code> that occurred while trying to read or write …\nA set of errors that can occur during parsing json payloads\nLine limit exceeded.\nAn invalid <code>Method</code>, such as <code>GE.T</code>.\nNot all URL parameters covered.\nContains the success value\nPayload reached size limit.\nPayload size is larger than allowed. (default limit: …\nPayload size is bigger than allowed but no content length …\nPayload size is bigger than allowed &amp; content length …\nRequest parse error.\nParse error.\nA set of errors that can occur during parsing HTTP streams.\nCan not parse content type.\nURL parse error.\nA set of errors that can occur during parsing request paths\nPayload error.\nPayload error\nPayload error.\nA set of errors that can occur during payload parsing.\nA set of errors that can occur during parsing query …\nError type returned when reading body as lines.\nResource not found.\nErrors that can generate responses.\nA convenience <code>Result</code> for Actix Web operations.\nSerialize error.\nSerialize error\nService error.\nThe first request did not complete within the specified …\nAn invalid <code>Status</code>, such as <code>1337 ELITE</code>.\nA timeout occurred waiting for an IO event.\nA message head is too large to be reasonable.\nUnknown content encoding.\nPayload length is unknown.\nPayload size is now known.\nUpgrade service error.\nAn invalid <code>Uri</code>, such as <code>exam ple.domain</code>.\nErrors which can occur when attempting to generate …\nA set of errors that can occur during parsing urlencoded …\nParsing a field as string failed.\nAn invalid <code>HttpVersion</code>, such as <code>HTP/1.1</code>\nSimilar to <code>as_response_error</code> but downcasts.\nReturns the reference to the underlying <code>ResponseError</code>.\nDowncasts a generic body to a mutable specific type.\nDowncasts generic body to a specific type.\nShortcut for creating an <code>HttpResponse</code>.\nCreates full response for error.\nCreates full response for error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an <code>InternalError</code> with pre-defined response.\nReturn a reference to the lower level, inner error.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if the underlying error has the same type as T.\nConstructs an <code>InternalError</code> with given status code.\nReturns appropriate status code for error.\nReturns appropriate status code for error.\nA guard that verifies that an <code>Accept</code> header is present and …\nCreates a guard that matches if all added guards match.\nA collection of guards that match if the conjunction of …\nCreates a guard that matches if any added guards match.\nA collection of guards that match if the disjunction of …\nCreates a guard that matches the <code>CONNECT</code> request method.\nCreates a guard that matches the <code>DELETE</code> request method.\nCreates a guard that matches the <code>GET</code> request method.\nInterface for routing guards.\nProvides access to request parts that are useful during …\nCreates a guard that matches the <code>HEAD</code> request method.\nCreates a guard that matches if request contains given …\nCreates a guard that matches requests targeting a specific …\nCreates a guard that matches a specified HTTP method.\nWraps a guard and inverts the outcome of its <code>Guard</code> …\nCreates a guard that matches the <code>OPTIONS</code> request method.\nCreates a guard that matches the <code>PATCH</code> request method.\nCreates a guard that matches the <code>POST</code> request method.\nCreates a guard that matches the <code>PUT</code> request method.\nCreates a guard that matches the <code>TRACE</code> request method.\nAdds new guard to the collection of guards to check.\nCounterpart to HttpRequest::app_data.\nReturns true if predicate condition is met for a given …\nCreates a guard using the given function.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns reference to the request head.\nExtracts a typed header from the request.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllows <code>*/*</code> in the <code>Accept</code> header to pass the guard check.\nConstructs new <code>Acceptable</code> guard with the given <code>mime</code> …\nAdds new guard to the collection of guards to check.\nReturns reference to the request-local data/extensions …\nReturns mutable reference to the request-local …\n202 Accepted [RFC7231, Section 6.3.3]\n208 Already Reported [RFC5842]\n502 Bad Gateway [RFC7231, Section 6.6.3]\n400 Bad Request [RFC7231, Section 6.5.1]\n409 Conflict [RFC7231, Section 6.5.8]\nCONNECT\n100 Continue [RFC7231, Section 6.2.1]\n201 Created [RFC7231, Section 6.3.2]\nClose connection after response.\nRepresents various types of connection\nDELETE\nKeep-alive is disabled.\n417 Expectation Failed [RFC7231, Section 6.5.14]\n424 Failed Dependency [RFC4918]\n403 Forbidden [RFC7231, Section 6.5.3]\n302 Found [RFC7231, Section 6.4.3]\n504 Gateway Timeout [RFC7231, Section 6.6.5]\nGET\n410 Gone [RFC7231, Section 6.5.9]\nHEAD\n<code>HTTP/0.9</code>\n<code>HTTP/1.0</code>\n<code>HTTP/1.1</code>\n<code>HTTP/2.0</code>\n<code>HTTP/3.0</code>\n505 HTTP Version Not Supported [RFC7231, Section 6.6.6]\n418 I’m a teapot [curiously not registered by IANA but …\n226 IM Used [RFC3229]\n507 Insufficient Storage [RFC4918]\n500 Internal Server Error [RFC7231, Section 6.6.1]\nConnection keep-alive config.\nKeep connection alive after response.\n411 Length Required [RFC7231, Section 6.5.10]\n423 Locked [RFC4918]\n508 Loop Detected [RFC5842]\n405 Method Not Allowed [RFC7231, Section 6.5.5]\n421 Misdirected Request RFC7540, Section 9.1.2\n301 Moved Permanently [RFC7231, Section 6.4.2]\n300 Multiple Choices [RFC7231, Section 6.4.1]\n207 Multi-Status [RFC4918]\nThe Request Method (VERB)\n511 Network Authentication Required [RFC6585]\n203 Non-Authoritative Information [RFC7231, Section 6.3.4]\n406 Not Acceptable [RFC7231, Section 6.5.6]\n510 Not Extended [RFC2774]\n404 Not Found [RFC7231, Section 6.5.4]\n501 Not Implemented [RFC7231, Section 6.6.2]\n304 Not Modified [RFC7232, Section 4.1]\n204 No Content [RFC7231, Section 6.3.5]\n200 OK [RFC7231, Section 6.3.1]\nOPTIONS\nRely on OS to shutdown TCP connection.\n206 Partial Content [RFC7233, Section 4.1]\nPATCH\n413 Payload Too Large [RFC7231, Section 6.5.11]\n402 Payment Required [RFC7231, Section 6.5.2]\n308 Permanent Redirect [RFC7238]\nPOST\n412 Precondition Failed [RFC7232, Section 4.2]\n428 Precondition Required [RFC6585]\n102 Processing [RFC2518]\n407 Proxy Authentication Required [RFC7235, Section 3.2]\nPUT\n416 Range Not Satisfiable [RFC7233, Section 4.4]\n431 Request Header Fields Too Large [RFC6585]\n408 Request Timeout [RFC7231, Section 6.5.7]\n205 Reset Content [RFC7231, Section 6.3.6]\n303 See Other [RFC7231, Section 6.4.4]\n503 Service Unavailable [RFC7231, Section 6.6.4]\n101 Switching Protocols [RFC7231, Section 6.2.2]\nAn HTTP status code (<code>status-code</code> in RFC 7230 et al.).\n307 Temporary Redirect [RFC7231, Section 6.4.7]\n429 Too Many Requests [RFC6585]\nTRACE\nKeep-alive duration.\n401 Unauthorized [RFC7235, Section 3.1]\n451 Unavailable For Legal Reasons [RFC7725]\n422 Unprocessable Entity [RFC4918]\n415 Unsupported Media Type [RFC7231, Section 6.5.13]\n426 Upgrade Required [RFC7231, Section 6.5.15]\n414 URI Too Long [RFC7231, Section 6.5.12]\n305 Use Proxy [RFC7231, Section 6.4.5]\nConnection is upgraded to different type.\nThe URI component of a request.\n506 Variant Also Negotiates [RFC2295]\nRepresents a version of the HTTP spec.\nReturn a &amp;str representation of the HTTP method\nReturns a &amp;str representation of the <code>StatusCode</code>\nReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.\nGet the authority of this <code>Uri</code>.\nCreates a new builder-style object to manufacture a <code>Uri</code>.\nGet the standardised <code>reason-phrase</code> for this status code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP method.\nConverts a &amp;u8 to a status code\nAttempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.\nAttempt to convert a <code>Parts</code> into a <code>Uri</code>.\nConvert a <code>Uri</code> from a static string.\nConverts a u16 to a status code.\nA Collection of Header implementations for common HTTP …\nGet the host of this <code>Uri</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a <code>Uri</code> into <code>Parts</code>.\nCheck if status is within 400-499.\nWhether a method is considered “idempotent”, meaning …\nCheck if status is within 100-199.\nCheck if status is within 300-399.\nWhether a method is considered “safe”, meaning the …\nCheck if status is within 500-599.\nCheck if status is within 200-299.\nGet the path of this <code>Uri</code>.\nReturns the path &amp; query components of the Uri\nGet the port part of this <code>Uri</code>.\nGet the port of this <code>Uri</code> as a <code>u16</code>.\nGet the query string of this <code>Uri</code>, starting after the <code>?</code>.\nGet the scheme of this <code>Uri</code>.\nGet the scheme of this <code>Uri</code> as a <code>&amp;str</code>.\nURI component of request and response lines\nAdvertises which content types the client is able to …\nAdvertises which character set the client is able to …\nAdvertises which content encoding the client is able to …\nAdvertises which languages the client is able to …\nMarker used by the server to advertise partial request …\nPreflight response indicating if the response to the …\nPreflight response indicating permitted HTTP headers.\nPreflight header response indicating permitted access …\nIndicates whether the response can be shared with …\nIndicates which headers can be exposed as part of the …\nIndicates how long the results of a preflight request can …\nInforms the server which HTTP headers will be used when an …\nInforms the server know which HTTP method will be used …\nIndicates the time in seconds the object has been in a …\nLists the set of methods support by a resource.\nAdvertises the availability of alternate services to …\nContains the credentials to authenticate a user agent with …\n<code>Accept</code> header, defined in RFC 7231 §5.3.2.\n<code>Accept-Charset</code> header, defined in RFC 7231 §5.3.3.\n<code>Accept-Encoding</code> header, defined in RFC 7231\n<code>Accept-Language</code> header, defined in RFC 7231 §5.3.5\n<code>Allow</code> header, defined in RFC 7231 §7.4.1\nAny value is a match\nAny value is a match\nA wildcard value.\nSealed trait implemented for types that can be effectively …\nAttachment implies that the recipient should prompt the …\nBig5\nA format using the Brotli algorithm.\nA range of bytes to fetch.\nByte range\nByte range.\nSpecifies directives for caching mechanisms in both …\nResponse header field that indicates how caches have …\nResponse header field that allows origin servers to …\nControls whether or not the network connection stays open …\nIndicates if the content is expected to be displayed …\nUsed to compress the media-type.\nUsed to describe the languages intended for the audience.\nIndicates the size of the entity-body.\nIndicates an alternate location for the returned data.\nIndicates where in a full body message a partial message …\nAllows controlling resources the user agent is allowed to …\nAllows experimenting with policies by monitoring their …\nUsed to indicate the media type of the resource.\nContains stored HTTP cookies previously sent by the server …\nResponse header that prevents a document from loading any …\nResponse header that allows you to ensure a top-level …\nResponse header that conveys a desire that the browser …\n<code>Cache-Control</code> header, defined in RFC 7234 §5.2.\n<code>CacheControl</code> contains a list of these directives.\nA MIME character set.\nA <em>Content-Disposition</em> header. It is compatible to be used …\nRepresents a supported content encoding.\n<code>Content-Language</code> header, defined in RFC 7231 §3.1.3.2\n<code>Content-Length</code> header, defined in RFC 9110 §8.6.\n<code>Content-Range</code> header, defined in RFC 7233 §4.2\nContent-Range header, defined in RFC 7233 §4.2\n<code>Content-Type</code> header, defined in RFC 9110 §8.3.\nContains the date and time at which the message was …\nIndicates the client’s tracking preference.\n<code>Date</code> header, defined in RFC 7231 §7.1.1.2\nThe date when the client retrieved the resource.\nA format using the zlib structure with deflate algorithm.\nParameter in <code>ContentDisposition</code>.\nThe implied disposition of the content of the HTTP body.\nIdentifier for a specific version of a resource.\n<code>ETag</code> header, defined in RFC 7232 §2.3\nIndicates expectations that need to be fulfilled by the …\nContains the date/time after which the response is …\nA value to represent an encoding used in the …\nAn entity tag, defined in [RFC 7232 §2.3].\nThe entity-tag the client has of the resource.\nThe type returned in the event of a conversion error.\nEUC-JP\nEUC-KR\n<code>Expires</code> header, defined in RFC 7234 §5.3\nAn arbitrary charset specified as a string\nExtension type. Should be handled by recipients the same …\nThe value part of an extended parameter consisting of …\nExtension directives. Optionally include an argument.\nContains information from the client-facing side of proxy …\nContains an Internet email address for a human user who …\nA plain file name.\nAn extended file name. It must not exist for …\nUsed in <em>multipart/form-data</em> as defined in RFC 7578 to …\nAll bytes starting from <code>x</code>, inclusive.\nAll bytes from <code>x</code> to <code>y</code>, inclusive.\nGB2312\nGzip algorithm.\nSpecifies the domain name of the server and (optionally) …\nAn interface for types that already represent a valid …\nA multi-map of HTTP headers.\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\nA timestamp with HTTP-style formatting and parsing.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on the modification date.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on range.\nMakes the request conditional based on the last …\nIndicates the no-op identity encoding.\n<code>If-Match</code> header, defined in RFC 7232 §3.1\n<code>If-Modified-Since</code> header, defined in RFC 7232 §3.3\n<code>If-None-Match</code> header, defined in RFC 7232 §3.2\n<code>If-Range</code> header, defined in RFC 7233 §3.2\n<code>If-Unmodified-Since</code> header, defined in RFC 7232 §3.4\nInline implies default processing.\nA possible error when converting a <code>HeaderName</code> from another …\nA possible error when converting a <code>HeaderValue</code> from a …\nISO-2022-JP\nISO-2022-JP-2\nISO-2022-KR\nISO-8859-1\nISO-8859-10\nISO-8859-2\nISO-8859-3\nISO-8859-4\nISO-8859-5\nISO-8859-6\nISO-8859-6-E\nISO-8859-6-I\nISO-8859-7\nISO-8859-8\nISO-8859-8-E\nISO-8859-8-I\nISO-8859-9\nOnly the listed items are a match\nOnly the listed items are a match\nA supported content encoding. See <code>ContentEncoding</code> for …\nKOI8-R\nContent-Types that are acceptable for the response.\nAllows the server to point an interested client to another …\nIndicates the URL to redirect a page to.\nA language tag as described in RFC 5646.\nThe last <code>y</code> bytes, inclusive.\n<code>Last-Modified</code> header, defined in RFC 7232 §2.2\nThe maximum quality value, equivalent to <code>q=1.0</code>.\nIndicates the max number of intermediaries the request …\nThe minimum, non-zero quality value, equivalent to <code>q=0.001</code>.\n“max-age=delta”\n“max-stale=delta”\n“min-fresh=delta”\n“must-revalidate”\nFor <code>DispositionType::FormData</code> (i.e. <em>multipart/form-data</em>), …\n“no-cache”\n“no-store”\n“no-transform”\nIndicates where a fetch originates from.\n“only-if-cached”\nResponse header that provides a mechanism to allow and …\nHTTP/1.0 header usually used for backwards compatibility.\nDefines the authentication method that should be used to …\nContains the credentials to authenticate a user agent to a …\nAssociates a specific cryptographic public key with a …\nSends reports of pinning violation to the report-uri …\nA wrapper for types used in header values where wildcard (<code>*</code>…\n“private”\n“proxy-revalidate”\n“public”\nRepresents a quality used in q-factor values.\nRepresents an item with a quality value as defined in RFC …\nIndicates the part of a document that the server should …\nContains the address of the previous web page from which a …\nGoverns which referrer information should be included with …\nInforms the web browser that the current page or frame …\nThe Retry-After response HTTP header indicates how long …\n<code>Range</code> header, defined in RFC 7233 §3.1\nThe |Sec-WebSocket-Accept| header field is used in the …\nThe |Sec-WebSocket-Extensions| header field is used in the …\nThe |Sec-WebSocket-Key| header field is used in the …\nThe |Sec-WebSocket-Protocol| header field is used in the …\nThe |Sec-WebSocket-Version| header field is used in the …\nContains information about the software used by the origin …\nUsed to send cookies from the server to the user agent.\n“s-maxage=delta”\nTells the client to communicate with HTTPS instead of …\nShift_JIS\nA valid <code>T</code>.\nInforms the server of transfer encodings willing to be …\nAllows the sender to include additional fields at the end …\nSpecifies the form of encoding used to safely transfer the …\nA possible error when converting a <code>HeaderValue</code> to a string …\nAn interface for types that can be converted into a …\nAn interface for types that can be converted into a …\nUsed as part of the exchange to upgrade the protocol.\nSends a signal to the server expressing the client’s …\nContains a string that allows identifying the requesting …\nAn unrecognized regular parameter as defined in RFC 5987 …\nSome other encoding that is less common, can be any string.\nAn unrecognized extended parameter as defined in RFC 5987 …\nCustom range, with unit not registered at IANA\nCustom range, with unit not registered at IANA.\nUS ASCII\nDetermines how to match future requests with cached …\nAdded by proxies to track routing.\nGeneral HTTP header contains information about possible …\nDefines the authentication method that should be used to …\nMarker used by the server to indicate that the MIME types …\nControls DNS prefetching.\nRequest header (de-facto standard) for identifying the …\nRequest header (de-facto standard) for identifying the …\nRequest header (de-facto standard) for identifying the …\nIndicates whether or not a browser should be allowed to …\nStop pages from loading when an XSS attack is detected.\nThe zero quality value, equivalent to <code>q=0.0</code>.\nZstd algorithm.\nAppends a name-value pair to the map.\nConverts a <code>HeaderValue</code> to a byte slice.\nReturns the filename if applicable.\nReturns the filename* if applicable.\nReturns the name if applicable.\nReturn the serialization of this language tag.\nReturns a <code>str</code> representation of the header.\nConvert content encoding to string.\nReturns the value of the unrecognized regular parameter if …\nReturns the value of the unrecognized extended parameter …\nConstructs a Content-Disposition header suitable for …\nConstructs a common byte range header.\nConstructs a byte range header with multiple subranges.\nReturns the canonical version of the language tag following\nReturns the number of single-value headers the map can …\nThe character set that is used to encode the <code>value</code> to a …\nClears the map, removing all name-value pairs.\nReturns <code>true</code> if the map contains a value for the specified …\nThe disposition type\nClears the map, returning all name-value sets as an …\nPerforms a case-insensitive comparison of the string …\nPerforms a case-insensitive comparison of the string …\nReturn the extended language subtags.\nIterate on the extended language subtags.\nReturn the extension subtags.\nIterate on the extension subtags.\nFormat an array into a comma-delimited string.\nConstructs a <code>Content-Type: application/www-form-url-encoded</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nReads a comma-delimited raw header into a Vec.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nReads a single string when parsing a header.\nParse a raw Content-Disposition header value.\nConverts a static string to a HTTP header name.\nConvert a static string to a <code>HeaderValue</code>.\nAttempt to convert a string to a <code>HeaderValue</code>.\nReturn the primary language subtag and its extended …\nReturns a reference to the <em>first</em> value associated with a …\nReturns an iterator over all values associated with a …\nReturn the value of <em>filename</em> if exists.\nReturn the value of <em>filename*</em> if exists.\nReturns a mutable reference to the <em>first</em> value associated …\nReturn the value of <em>name</em> if exists.\nReturn the value of the parameter which the <code>name</code> matches.\nReturn the value of the extended parameter which the <code>name</code> …\nConstruct <code>Accept: text/html</code>.\nConstructs a <code>Content-Type: text/html; charset=utf-8</code> header.\nPercent encode a sequence of bytes with a character set …\nConstruct <code>Accept: image/*</code>.\nInserts (overrides) a name-value pair in the map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns Content-Length value.\nConsumes the container, returning the value in the <code>Specific</code>…\nReturn the serialization of this language tag.\nReturns true if preference is the any/wildcard (<code>*</code>) value.\nReturns <code>true</code> if type is <code>Attachment</code>.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nReturns true if the map contains no elements.\nReturns <code>true</code> if type is <code>Ext</code> and the <code>disp_type</code> matches.\nReturns <code>true</code> if the parameter is <code>Filename</code>.\nReturns <code>true</code> if the parameter is <code>FilenameExt</code>.\nReturns <code>true</code> if type is <code>FormData</code>.\nReturns <code>true</code> if type is <code>Inline</code>.\nChecks if it is a language range, meaning that there are …\nReturns <code>true</code> if the parameter is <code>Name</code>.\nReturns <code>true</code> if the value represents sensitive data.\nReturns true if preference is the specific item (<code>T</code>) …\nReturns <code>true</code> if the parameter is <code>Unknown</code> and the <code>name</code> …\nReturns <code>true</code> if the parameter is <code>UnknownExt</code> and the <code>name</code> …\nCheck if the language tag is valid according to RFC 5646.\nReturns reference to value in <code>Specific</code> variant, if it is …\nThe wrapped contents of the field.\nAn iterator over all name-value pairs.\nConstructs a <code>Content-Type: image/jpeg</code> header.\nConstruct <code>Accept: application/json</code>.\nConstructs a <code>Content-Type: application/json</code> header.\nAn iterator over all contained header names.\nThe human language details of the <code>value</code>, if available.\nReturns the length of <code>self</code>.\nReturns the number of values stored in the map.\nReturns the number of <em>keys</em> stored in the map.\nA multi-value <code>HeaderMap</code> and its iterators.\nMatches language tags. The first language acts as a …\nConstructs a new <code>QualityItem</code> from an item, using the …\nConstructs a new <code>QualityItem</code> from an item, using the …\nReturns the name of the header field.\nSelects the most acceptable encoding according to client …\nCreate an empty <code>HeaderMap</code>.\nConstructs a new <code>QualityItem</code> from an item and a quality …\nConstructs a new <code>EntityTag</code>.\nConstructs a new strong EntityTag.\nConstructs a new weak EntityTag.\nCreate a date instance set to the current system time\nConstructs a <code>Content-Type: application/octet-stream</code> header.\nDisposition parameters\nParse the header from a HTTP message.\nCreate a <code>LanguageTag</code> from its serialization.\nParses extended header parameter values (<code>ext-value</code>), as …\nConstructs a <code>Content-Type: text/plain; charset=utf-8</code> …\nConstructs a <code>Content-Type: image/png</code> header.\nExtracts the most preferable mime type, accounting for …\nExtracts the most preferable encoding, accounting for …\nExtracts the most preferable language, accounting for …\nReturn the primary language subtag.\nReturn the private use subtags.\nIterate on the private use subtags.\nConvenience function to create a <code>Quality</code> from an <code>f32</code> …\nThe quality (client or server preference) for the value.\nReturns a sorted list of mime types from highest to lowest …\nReturns a sorted list of encodings from highest to lowest …\nReturns a sorted list of languages from highest to lowest …\nReturn the region subtag.\nRemoves all headers for a particular header name from the …\nReserves capacity for at least <code>additional</code> more headers to …\nRetains only the headers specified by the predicate.\nReturn the script subtag.\nMark that the header value represents sensitive …\nSets tag.\nConstruct <code>Accept: */*</code>.\nFor strong comparison two entity-tags are equivalent if …\nReturns the inverse of <code>strong_eq()</code>.\nReturns tag.\nConstruct <code>Accept: text/*</code>.\nConvert content encoding to header value.\nGiven the full length of the entity, attempt to normalize …\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nTry to convert value to a HeaderValue.\nCheck if the language tag is “valid” according to RFC …\nThe parameter value, as expressed in octets.\nReturn the variant subtags.\nIterate on the variant subtags.\nWeakness indicator for the tag\nFor weak comparison two entity-tags are equivalent if …\nReturns inverse of <code>weak_eq()</code>.\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nConstructs a <code>Content-Type: text/xml</code> header.\nConstructs a new <code>QualityItem</code> from an item, using zero …\nTotal length of the instance, can be omitted if unknown\nFirst and last bytes of the range, omitted if request …\nother-range-resp\nother-range-unit\nIterator over drained name-value pairs.\nA multi-map of HTTP headers.\nIterator over owned name-value pairs.\nIterator over borrowed name-value pairs.\nIterator over all names in the map.\nIterator over removed, owned values with the same …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if iterator contains no elements, without …\nRepresents the authority component of a URI.\nA builder for <code>Uri</code>s.\nHTTP protocol scheme\nHTTP protocol over TLS.\nAn error resulting from a failed attempt to construct a …\nAn error resulting from a failed attempt to construct a …\nThe various parts of a URI.\nRepresents the path component of a URI\nThe port component of a URI.\nRepresents the scheme component of a URI\nThe URI component of a request.\nReturns the port number as a <code>str</code>.\nReturn a str representation of the authority\nReturns the path and query as a string component.\nReturn a str representation of the scheme\nReturns the port number as a <code>u16</code>.\nSet the <code>Authority</code> for this URI.\nThe authority component of a URI\nConsumes this builder, and tries to construct a valid <code>Uri</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Authority</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>PathAndQuery</code>.\nAttempt to convert an <code>Authority</code> from a static string.\nConvert a <code>PathAndQuery</code> from a static string.\nGet the host of this <code>Authority</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new default instance of <code>Builder</code> to construct a …\nReturns the path component\nSet the <code>PathAndQuery</code> for this URI.\nThe origin-form component of a URI\nGet the port part of this <code>Authority</code>.\nGet the port of this <code>Authority</code> as a <code>u16</code>.\nReturns the query string component\nSet the <code>Scheme</code> for this URI.\nThe scheme component of a URI\nAlways add a trailing slash to the end of the path.\nMiddleware for enabling any middleware to be used in …\nMiddleware for compressing response payloads.\nMiddleware for conditionally enabling other middleware.\nMiddleware for setting default response headers.\nReturn type for <code>ErrorHandlers</code> custom handlers.\nMiddleware for registering custom status code based error …\nA future that resolves to an HTTP response.\nA no-op middleware that passes through request and …\nMiddleware for logging request and response summaries to …\nOnly merge any present multiple trailing slashes.\nWraps the “next” service in the middleware chain.\nMiddleware for normalizing a request’s path so that …\nImmediate HTTP response.\nDetermines the behavior of the <code>NormalizePath</code> middleware.\nTrim trailing slashes from the end of the path.\nAdds a header to the default set.\nAdds a default <em>Content-Type</em> header if response does not …\nEquivalent to <code>Service::call(self, req)</code>.\nRegister a function that receives a ServiceRequest and …\nRegister a function that receives a <code>ServiceResponse</code> and …\nCreate <code>Logger</code> middleware with format:\nRegister a default error handler.\nRegister a handler on which to fall back for client error …\nRegister a handler on which to fall back for server error …\nIgnore and do not log access info for specified path.\nIgnore and do not log access info for paths that match …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWraps an async function to be used as a middleware.\nRegister error handler for specified status code.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the logging target to <code>target</code>.\nWrap a middleware to give it broader compatibility.\nConstruct new <code>ErrorHandlers</code> instance.\nConstructs an empty <code>DefaultHeaders</code> middleware.\nCreate <code>Logger</code> middleware with the specified <code>format</code>.\nCreate new <code>NormalizePath</code> middleware with the specified …\nConstructs a new <code>NormalizePath</code> middleware with trim …\nA Tokio-based runtime proxy.\nA manager for a per-thread distributed async runtime.\nRunner that keeps a System’s event loop alive until stop …\nGet handle to a the System’s initial Arbiter.\nRuns the provided future, blocking the current thread …\nRuns the provided future, blocking the current thread …\nGet current running system.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNumeric system identifier.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if there is a System registered on the current …\nTCP/UDP/Unix bindings (mostly Tokio re-exports).\nReturns a new runtime initialized with default …\nCreate a new system.\nPins a value on the stack.\nStarts event loop and will return once System is stopped.\nRuns the event loop until stopped, returning the exit code.\nRetrieves a reference to the underlying Actix runtime …\nAsynchronous signal handling (Tokio re-exports).\nSpawns a future on the current thread as a new task.\nOffload a future onto the single-threaded runtime.\nStop the system (with code 0).\nStop the system with a given exit code.\nTask management (Tokio re-exports).\nUtilities for tracking time (Tokio re-exports).\nRetrieves a reference to the underlying Tokio runtime …\nTry to get current running system.\nCreate a new System using the Tokio Runtime returned from …\nReturns a <code>Ready</code> representing readiness for all operations.\nReturns the empty <code>Ready</code> set.\nReturns a <code>Ready</code> representing error readiness.\nReturns a <code>Ready</code> representing priority readiness.\nReturns a <code>Ready</code> representing readable readiness.\nReturns a <code>Ready</code> representing read closed readiness.\nDescribes the readiness state of an I/O resources.\nA TCP socket server, listening for connections.\nA TCP socket that has not yet been converted to a <code>TcpStream</code>…\nA TCP stream between a local and a remote socket.\nA UDP socket.\nAn I/O object representing a Unix datagram socket.\nA Unix socket which can accept connections from other Unix …\nA structure representing a connected Unix socket.\nReturns a <code>Ready</code> representing writable readiness.\nReturns a <code>Ready</code> representing write closed readiness.\nAccepts a new incoming connection from this listener.\nAccepts a new incoming connection to this listener.\nReads or writes from the socket using a user-provided IO …\nReads or writes from the socket using a user-provided IO …\nReads or writes from the socket using a user-provided IO …\nReads or writes from the socket using a user-provided IO …\nCreates a new <code>TcpListener</code>, which will be bound to the …\nBinds the socket to the given address.\nThis function will create a new UDP socket and attempt to …\nCreates a new <code>UnixDatagram</code> bound to the specified path.\nCreates a new <code>UnixListener</code> bound to the specified path.\nSets the value for the <code>SO_BINDTODEVICE</code> option on this …\nSets the value for the <code>SO_BINDTODEVICE</code> option on this …\nGets the value of the <code>SO_BROADCAST</code> option for this socket.\nEstablishes a TCP connection with a peer at the specified …\nOpens a TCP connection to a remote host.\nConnects the UDP socket setting the default destination …\nConnects the socket to the specified address.\nConnects to the socket named by <code>path</code>.\nGets the value for the <code>SO_BINDTODEVICE</code> option on this …\nGets the value for the <code>SO_BINDTODEVICE</code> option on this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>RawFd</code> to a <code>TcpSocket</code>.\nCreates new <code>TcpListener</code> from a <code>std::net::TcpListener</code>.\nCreates new <code>TcpStream</code> from a <code>std::net::TcpStream</code>.\nCreates new <code>UdpSocket</code> from a previously bound …\nCreates new <code>UnixDatagram</code> from a …\nCreates new <code>UnixListener</code> from a …\nCreates new <code>UnixStream</code> from a …\nConverts a <code>std::net::TcpStream</code> into a <code>TcpSocket</code>. The …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSplits a <code>TcpStream</code> into a read half and a write half, …\nSplits a <code>UnixStream</code> into a read half and a write half, …\nTurns a <code>tokio::net::TcpListener</code> into a …\nTurns a <code>tokio::net::TcpStream</code> into a <code>std::net::TcpStream</code>.\nTurns a <code>tokio::net::UdpSocket</code> into a <code>std::net::UdpSocket</code>.\nTurns a <code>tokio::net::UnixDatagram</code> into a …\nTurns a <code>tokio::net::UnixListener</code> into a …\nTurns a <code>tokio::net::UnixStream</code> into a …\nReturns true if <code>Ready</code> is the empty set.\nReturns <code>true</code> if the value includes error <code>readiness</code>.\nReturns <code>true</code> if the value includes priority <code>readiness</code>.\nReturns <code>true</code> if the value includes read-closed <code>readiness</code>.\nReturns <code>true</code> if the value includes <code>readable</code>.\nReturns <code>true</code> if the value includes writable <code>readiness</code>.\nReturns <code>true</code> if the value includes write-closed <code>readiness</code>.\nExecutes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.\nGets the value of the <code>SO_KEEPALIVE</code> option on this socket.\nExecutes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.\nReads the linger duration for this socket by getting the …\nReads the linger duration for this socket by getting the …\nConverts the socket into a <code>TcpListener</code>.\nReturns the local address that this listener is bound to.\nGets the local address of this socket.\nReturns the local address that this stream is bound to.\nReturns the local address that this socket is bound to.\nReturns the local address that this socket is bound to.\nReturns the local socket address of this listener.\nReturns the socket address of the local half of this …\nGets the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nGets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nGets the value of the <code>IP_MULTICAST_TTL</code> option for this …\nCreates a new socket configured for IPv4.\nCreates a new socket configured for IPv6.\nGets the value of the <code>TCP_NODELAY</code> option on this socket.\nGets the value of the <code>TCP_NODELAY</code> option on this socket.\nCreates an unnamed pair of connected sockets.\nCreates an unnamed pair of connected sockets.\nReceives data on the socket from the remote address to …\nReceives data from the socket, without removing it from …\nRetrieve the sender of the data at the head of the input …\nReturns the remote address that this stream is connected …\nReturns the socket address of the remote peer this socket …\nReturns the address of this socket’s peer.\nReturns the socket address of the remote half of this …\nReturns effective credentials of the process which called …\nPolls to accept a new incoming connection to this listener.\nPolls to accept a new incoming connection to this listener.\nAttempts to receive data on the socket, without removing …\nReceives data from the socket, without removing it from …\nRetrieve the sender of the data at the head of the input …\nPolls for read readiness.\nPolls for read readiness.\nAttempts to receive a single datagram message on the …\nAttempts to receive a single datagram message on the …\nAttempts to receive a single datagram on the socket.\nAttempts to receive a single datagram on the specified …\nPolls for read/receive readiness.\nPolls for read/receive readiness.\nAttempts to send data on the socket to the remote address …\nAttempts to send data on the socket to the remote address …\nPolls for write/send readiness.\nPolls for write/send readiness.\nAttempts to send data on the socket to a given address.\nAttempts to send data to the specified address.\nPolls for write readiness.\nPolls for write readiness.\nWaits for the socket to become readable.\nWaits for the socket to become readable.\nWaits for the socket to become readable.\nWaits for the socket to become readable.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nReceives a single datagram message on the socket from the …\nReceives data from the socket.\nReceives a single datagram message on the socket from the …\nReceives data from the socket from the address to which it …\nReceives a single datagram message on the socket, …\nReceives from the socket, advances the buffer’s internal …\nReturns the size of the TCP receive buffer for this socket.\nReceives a single datagram message on the socket. On …\nReceives data from the socket.\nRetrieves the value set for <code>SO_REUSEADDR</code> on this socket.\nAllows the socket to bind to an in-use port. Only …\nSends data on the socket to the remote address that the …\nSends data on the socket to the socket’s peer.\nReturns the size of the TCP send buffer for this socket.\nSends data on the socket to the given address. On success, …\nSends data on the socket to the specified address.\nSets the value of the <code>SO_BROADCAST</code> option for this socket.\nSets value for the <code>SO_KEEPALIVE</code> option on this socket.\nSets the linger duration of this socket by setting the …\nSets the linger duration of this socket by setting the …\nSets the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nSets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nSets the value of the <code>IP_MULTICAST_TTL</code> option for this …\nSets the value of the <code>TCP_NODELAY</code> option on this socket.\nSets the value of the <code>TCP_NODELAY</code> option on this socket.\nSets the size of the TCP receive buffer on this socket.\nAllows the socket to bind to an in-use address.\nAllows the socket to bind to an in-use port. Only …\nSets the size of the TCP send buffer on this socket.\nSets the value for the <code>IP_TOS</code> option on this socket.\nSets the value for the <code>IP_TOS</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nShuts down the read, write, or both halves of this …\nSplits a <code>TcpStream</code> into a read half and a write half, …\nSplits a <code>UnixStream</code> into a read half and a write half, …\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nGets the value of the <code>IP_TOS</code> option for this socket.\nGets the value of the <code>IP_TOS</code> option for this socket.\nConsumes stream, returning the tokio I/O object.\nConsumes stream, returning the tokio I/O object.\nConsumes stream, returning the tokio I/O object.\nConsumes stream, returning the Tokio I/O object.\nConsumes stream, returning the tokio I/O object.\nConsumes stream, returning the tokio I/O object.\nTries to read or write from the socket using a …\nTries to read or write from the socket using a …\nTries to read or write from the socket using a …\nTries to read or write from the socket using a …\nTries to receive data on the socket without removing it …\nTry to retrieve the sender of the data at the head of the …\nTries to read data from the stream into the provided …\nTry to read data from the stream into the provided buffer, …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to receive a single datagram message on the socket …\nTries to receive a datagram from the peer without waiting.\nTries to receive data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to receive a single datagram message on the socket. …\nTries to receive data from the socket without waiting.\nTries to receive a single datagram message on the socket. …\nTries to receive data from the socket without waiting.\nTries to send data on the socket to the remote address to …\nTries to send a datagram to the peer without waiting.\nTries to send data on the socket to the given address, but …\nTries to send a datagram to the peer without waiting.\nTry to write a buffer to the stream, returning how many …\nTries to write a buffer to the stream, returning how many …\nTries to write several buffers to the stream, returning …\nTries to write several buffers to the stream, returning …\nGets the value of the <code>IP_TTL</code> option for this socket.\nGets the value of the <code>IP_TTL</code> option for this socket.\nGets the value of the <code>IP_TTL</code> option for this socket.\nCreates a new <code>UnixDatagram</code> which is not bound to any …\nWaits for the socket to become writable.\nWaits for the socket to become writable.\nWaits for the socket to become writable.\nWaits for the socket to become writable.\nCompletes when a “ctrl-c” notification is sent to the …\nUnix specific signals (Tokio re-exports).\nAn listener for receiving a particular type of OS signal.\nRepresents the specific kind of signal to listen for.\nRepresents the <code>SIGALRM</code> signal.\nGet the signal’s numeric value.\nRepresents the <code>SIGCHLD</code> signal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAllows for listening to any valid OS signal.\nRepresents the <code>SIGHUP</code> signal.\nRepresents the <code>SIGINT</code> signal.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents the <code>SIGIO</code> signal.\nRepresents the <code>SIGPIPE</code> signal.\nPolls to receive the next signal notification event, …\nRepresents the <code>SIGQUIT</code> signal.\nReceives the next signal notification event.\nCreates a new listener which will receive notifications …\nRepresents the <code>SIGTERM</code> signal.\nRepresents the <code>SIGUSR1</code> signal.\nRepresents the <code>SIGUSR2</code> signal.\nRepresents the <code>SIGWINCH</code> signal.\nTask failed to execute to completion.\nAn owned permission to join on a task (await its …\nAbort the task associated with the handle.\nReturns a new <code>AbortHandle</code> that can be used to remotely …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the join error, returning the object with which …\nReturns true if the error was caused by the task being …\nChecks if the task associated with this <code>JoinHandle</code> has …\nReturns true if the error was caused by the task panicking.\nRuns the provided closure on a thread where blocking is …\nConsumes the join error, returning the object with which …\nYields execution back to the Tokio runtime.\nA measurement of a monotonically nondecreasing clock. …\nInterval returned by <code>interval</code> and <code>interval_at</code>.\nFuture returned by <code>sleep</code> and <code>sleep_until</code>.\nFuture returned by <code>timeout</code> and <code>timeout_at</code>.\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns the amount of time elapsed from another instant to …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns the instant at which the future will complete.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant was …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.\nGets a mutable reference to the underlying value in this …\nGets a reference to the underlying value in this timeout.\nCreates new <code>Interval</code> that yields with interval of <code>period</code>. …\nCreates new <code>Interval</code> that yields with interval of <code>period</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this timeout, returning the underlying value.\nConvert the value into a <code>std::time::Instant</code>.\nReturns <code>true</code> if <code>Sleep</code> has elapsed.\nReturns the <code>MissedTickBehavior</code> strategy currently being …\nReturns an instant corresponding to “now”.\nReturns the period of the interval.\nPolls for the next instant in the interval to be reached.\nResets the interval to complete one period after the …\nResets the <code>Sleep</code> instance to a new deadline.\nResets the interval after the specified <code>std::time::Duration</code>…\nResets the interval to a <code>crate::time::Instant</code> deadline.\nResets the interval immediately.\nReturns the amount of time elapsed from another instant to …\nSets the <code>MissedTickBehavior</code> strategy that should be used.\nWaits until <code>duration</code> has elapsed.\nWaits until <code>deadline</code> is reached.\nCompletes when the next instant in the interval has been …\nRequires a <code>Future</code> to complete before the specified …\nAsync I/O test buffer.\nTest <code>Request</code> builder.\nInserts application data.\nAppends a header, keeping any that were set with an …\nHelper function that returns a response body of a …\nHelper function that returns a deserialized response body …\nCalls service and waits for response future completion.\nSets cookie for this request.\nConstructs test request with DELETE method.\nCreate new empty <code>TestBuffer</code> instance.\nAdd data to read buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs test request with GET method.\nInitialize service from application builder instance.\nInserts a header, replacing any that were set with an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets method of this request.\nCreate new <code>TestBuffer</code> instance with initial read buffer.\nCreates service that always responds with <code>200 OK</code> and no …\nSets request path pattern parameter.\nConstructs test request with PATCH method.\nSets peer address.\nConstructs test request with POST method.\nConstructs test request with PUT method.\nHelper function that returns a response body of a …\nHelper function that returns a deserialized response body …\nFinalizes request creation, calls service, and waits for …\nSerializes <code>data</code> to a URL encoded form and set it as the …\nSerializes <code>data</code> to JSON and set it as the request payload.\nSets request payload.\nCreates service that always responds with given status …\nFinalizes request creation and returns <code>HttpRequest</code> and …\nFinalizes request creation and returns <code>HttpRequest</code> …\nFinalizes request creation and returns <code>Request</code> instance.\nFinalizes request creation and returns <code>ServiceRequest</code> …\nFinalizes request creation and returns <code>ServiceResponse</code> …\nFallible version of <code>call_and_read_body_json</code> that allows …\nFallible version of <code>call_service</code> that allows testing …\nFallible version of <code>read_body</code> that allows testing …\nFallible version of <code>read_body_json</code> that allows testing …\nSets URI of this request.\nSets HTTP version of this request.\nConstructs test request and sets request URI.\nRead bytes from a buffer.\nA trait for values that provide sequential write access to …\nA cheaply cloneable and sliceable chunk of contiguous …\nA unique reference to a contiguous slice of memory.\nApplication data wrapper and extractor.\nCombines two extractor or responder types into a single …\nURL encoded payload extractor and responder.\n<code>Form</code> extractor configuration.\nExtract typed headers from the request.\nSemantic HTML responder.\nJSON extractor and responder.\nFuture that resolves to some <code>T</code> when parsed from a JSON …\n<code>Json</code> extractor configuration.\nA value of type <code>L</code>.\nExtract typed data from request path segments.\nPath extractor configuration\nExtract a request’s raw payload stream.\nConfiguration for request payloads.\nExtract typed information from the request’s query.\nQuery extractor configuration.\nStream that reads request line by line.\nAn HTTP service for redirecting one path to another path …\nRequest-local data extractor.\nA value of type <code>R</code>.\nEnables parts of app configuration to be declared …\nApplication data wrapper and extractor for cheaply-cloned …\nFuture that resolves to some <code>T</code> when parsed from a URL …\nAdvance the internal cursor of the Buf\nAdvance the internal cursor of the BufMut\nAdd arbitrary app data item.\nExecutes blocking function on a thread pool, returns …\nReturns the number of bytes the <code>BytesMut</code> can hold without …\nCreates an adaptor which will chain this buffer with …\nCreates an adapter which will chain this buffer with …\nReturns a slice starting at the current position and of …\nReturns a mutable slice starting at the current BufMut …\nFills <code>dst</code> with potentially multiple slices starting at <code>self</code>…\nClears the buffer, removing all data.\nClears the buffer, removing all data. Existing capacity is …\nRun external configuration as part of the application …\nSet predicate for allowed content types.\nSets whether or not the request must have a <code>Content-Type</code> …\nCreates <code>Bytes</code> instance from slice, by copying it.\nConsumes <code>len</code> bytes inside self and returns new instance of …\nCopies bytes from <code>self</code> into <code>dst</code>.\nAdd shared app data item.\nDefault service to be used if no matching resource could …\nCreates a new route with <code>DELETE</code> method guard.\nSet custom error handler\nSet custom error handler.\nSet custom error handler.\nSet custom error handler\nAppends given bytes to this <code>BytesMut</code>.\nRegister an external resource.\nConverts <code>self</code> into an immutable <code>Bytes</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert self into <code>BytesMut</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize a <code>T</code> from the URL encoded query parameter …\nCreates a new <code>Bytes</code> from a static slice.\nCreates a new route with <code>GET</code> method guard.\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets a signed 128 bit integer from <code>self</code> in big-endian byte …\nGets a signed 128 bit integer from <code>self</code> in little-endian …\nGets a signed 128 bit integer from <code>self</code> in native-endian …\nGets a signed 16 bit integer from <code>self</code> in big-endian byte …")