searchState.loadedDescShard("actix_web", 1, "Creates new <code>Interval</code> that yields with interval of <code>period</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this timeout, returning the underlying value.\nConvert the value into a <code>std::time::Instant</code>.\nReturns <code>true</code> if <code>Sleep</code> has elapsed.\nReturns the <code>MissedTickBehavior</code> strategy currently being …\nReturns an instant corresponding to “now”.\nReturns the period of the interval.\nPolls for the next instant in the interval to be reached.\nResets the interval to complete one period after the …\nResets the <code>Sleep</code> instance to a new deadline.\nResets the interval after the specified <code>std::time::Duration</code>…\nResets the interval to a <code>crate::time::Instant</code> deadline.\nResets the interval immediately.\nReturns the amount of time elapsed from another instant to …\nSets the <code>MissedTickBehavior</code> strategy that should be used.\nWaits until <code>duration</code> has elapsed.\nWaits until <code>deadline</code> is reached.\nCompletes when the next instant in the interval has been …\nRequires a <code>Future</code> to complete before the specified …\nAsync I/O test buffer.\nTest <code>Request</code> builder.\nInserts application data.\nAppends a header, keeping any that were set with an …\nHelper function that returns a response body of a …\nHelper function that returns a deserialized response body …\nCalls service and waits for response future completion.\nSets cookie for this request.\nConstructs test request with DELETE method.\nCreate new empty <code>TestBuffer</code> instance.\nAdd data to read buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs test request with GET method.\nInitialize service from application builder instance.\nInserts a header, replacing any that were set with an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets method of this request.\nCreate new <code>TestBuffer</code> instance with initial read buffer.\nCreates service that always responds with <code>200 OK</code> and no …\nSets request path pattern parameter.\nConstructs test request with PATCH method.\nSets peer address.\nConstructs test request with POST method.\nConstructs test request with PUT method.\nHelper function that returns a response body of a …\nHelper function that returns a deserialized response body …\nFinalizes request creation, calls service, and waits for …\nSerializes <code>data</code> to a URL encoded form and set it as the …\nSerializes <code>data</code> to JSON and set it as the request payload.\nSets request payload.\nCreates service that always responds with given status …\nFinalizes request creation and returns <code>HttpRequest</code> and …\nFinalizes request creation and returns <code>HttpRequest</code> …\nFinalizes request creation and returns <code>Request</code> instance.\nFinalizes request creation and returns <code>ServiceRequest</code> …\nFinalizes request creation and returns <code>ServiceResponse</code> …\nFallible version of <code>call_and_read_body_json</code> that allows …\nFallible version of <code>call_service</code> that allows testing …\nFallible version of <code>read_body</code> that allows testing …\nFallible version of <code>read_body_json</code> that allows testing …\nSets URI of this request.\nSets HTTP version of this request.\nConstructs test request and sets request URI.\nRead bytes from a buffer.\nA trait for values that provide sequential write access to …\nA cheaply cloneable and sliceable chunk of contiguous …\nA unique reference to a contiguous slice of memory.\nApplication data wrapper and extractor.\nCombines two extractor or responder types into a single …\nURL encoded payload extractor and responder.\n<code>Form</code> extractor configuration.\nExtract typed headers from the request.\nSemantic HTML responder.\nJSON extractor and responder.\nFuture that resolves to some <code>T</code> when parsed from a JSON …\n<code>Json</code> extractor configuration.\nA value of type <code>L</code>.\nExtract typed data from request path segments.\nPath extractor configuration\nExtract a request’s raw payload stream.\nConfiguration for request payloads.\nExtract typed information from the request’s query.\nQuery extractor configuration.\nStream that reads request line by line.\nAn HTTP service for redirecting one path to another path …\nRequest-local data extractor.\nA value of type <code>R</code>.\nEnables parts of app configuration to be declared …\nApplication data wrapper and extractor for cheaply-cloned …\nFuture that resolves to some <code>T</code> when parsed from a URL …\nAdvance the internal cursor of the Buf\nAdvance the internal cursor of the BufMut\nAdd arbitrary app data item.\nExecutes blocking function on a thread pool, returns …\nReturns the number of bytes the <code>BytesMut</code> can hold without …\nCreates an adaptor which will chain this buffer with …\nCreates an adapter which will chain this buffer with …\nReturns a slice starting at the current position and of …\nReturns a mutable slice starting at the current BufMut …\nFills <code>dst</code> with potentially multiple slices starting at <code>self</code>…\nClears the buffer, removing all data.\nClears the buffer, removing all data. Existing capacity is …\nRun external configuration as part of the application …\nSet predicate for allowed content types.\nSets whether or not the request must have a <code>Content-Type</code> …\nCreates <code>Bytes</code> instance from slice, by copying it.\nConsumes <code>len</code> bytes inside self and returns new instance of …\nCopies bytes from <code>self</code> into <code>dst</code>.\nAdd shared app data item.\nDefault service to be used if no matching resource could …\nCreates a new route with <code>DELETE</code> method guard.\nSet custom error handler\nSet custom error handler.\nSet custom error handler.\nSet custom error handler\nAppends given bytes to this <code>BytesMut</code>.\nRegister an external resource.\nConverts <code>self</code> into an immutable <code>Bytes</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert self into <code>BytesMut</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate Bytes with a buffer whose lifetime is controlled …\nDeserialize a <code>T</code> from the URL encoded query parameter …\nCreates a new <code>Bytes</code> from a static slice.\nCreates a new route with <code>GET</code> method guard.\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets a signed 128 bit integer from <code>self</code> in big-endian byte …\nGets a signed 128 bit integer from <code>self</code> in little-endian …\nGets a signed 128 bit integer from <code>self</code> in native-endian …\nGets a signed 16 bit integer from <code>self</code> in big-endian byte …\nGets a signed 16 bit integer from <code>self</code> in little-endian …\nGets a signed 16 bit integer from <code>self</code> in native-endian …\nGets a signed 32 bit integer from <code>self</code> in big-endian byte …\nGets a signed 32 bit integer from <code>self</code> in little-endian …\nGets a signed 32 bit integer from <code>self</code> in native-endian …\nGets a signed 64 bit integer from <code>self</code> in big-endian byte …\nGets a signed 64 bit integer from <code>self</code> in little-endian …\nGets a signed 64 bit integer from <code>self</code> in native-endian …\nGets a signed 8 bit integer from <code>self</code>.\nGets a signed n-byte integer from <code>self</code> in big-endian byte …\nGets a signed n-byte integer from <code>self</code> in little-endian …\nGets a signed n-byte integer from <code>self</code> in native-endian …\nReturns reference to inner <code>T</code>.\nGets an unsigned 128 bit integer from <code>self</code> in big-endian …\nGets an unsigned 128 bit integer from <code>self</code> in …\nGets an unsigned 128 bit integer from <code>self</code> in …\nGets an unsigned 16 bit integer from <code>self</code> in big-endian …\nGets an unsigned 16 bit integer from <code>self</code> in little-endian …\nGets an unsigned 16 bit integer from <code>self</code> in native-endian …\nGets an unsigned 32 bit integer from <code>self</code> in the …\nGets an unsigned 32 bit integer from <code>self</code> in the …\nGets an unsigned 32 bit integer from <code>self</code> in native-endian …\nGets an unsigned 64 bit integer from <code>self</code> in big-endian …\nGets an unsigned 64 bit integer from <code>self</code> in little-endian …\nGets an unsigned 64 bit integer from <code>self</code> in native-endian …\nGets an unsigned 8 bit integer from <code>self</code>.\nGets an unsigned n-byte integer from <code>self</code> in big-endian …\nGets an unsigned n-byte integer from <code>self</code> in little-endian …\nGets an unsigned n-byte integer from <code>self</code> in native-endian …\nReturns true if there are any more bytes to consume\nReturns true if there is space in <code>self</code> for more bytes.\nCreates a new route with <code>HEAD</code> method guard.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwrap to inner Payload type.\nUnwraps to the internal <code>Arc&lt;T&gt;</code>\nConsumes the <code>ReqData</code>, returning its wrapped data.\nUnwrap into inner <code>T</code> value.\nUnwrap into the inner <code>T</code> value.\nUnwrap into inner <code>T</code> value.\nUnwrap into inner <code>T</code> value.\nUnwrap into inner <code>T</code> value.\nReturns true if the <code>Bytes</code> has a length of 0.\nReturns true if the <code>BytesMut</code> has a length of 0.\nReturns true if this is the only reference to the data and …\nReturns the number of bytes contained in this <code>Bytes</code>.\nReturns the number of bytes contained in this <code>BytesMut</code>.\nCreates an adaptor which can write at most <code>limit</code> bytes to …\nSet maximum accepted payload size. By default this limit …\nSet maximum accepted payload size. By default this limit …\nSet maximum accepted payload size in bytes. The default …\nCreates a new route with specified method guard.\nSet required mime type of the request. By default mime …\nCreates a new empty <code>Bytes</code>.\nCreates a new <code>BytesMut</code> with default capacity.\nCreate new <code>Data</code> instance.\nConstruct a new <code>Redirect</code> service that matches a path.\nConstructs a new <code>Html</code> responder.\nCreate new instance with a size limit (in bytes) and no …\nCreates a new route with <code>PATCH</code> method guard.\nUse the “308 Permanent Redirect” status when …\nCreates a new route with <code>POST</code> method guard.\nCreates a new route with <code>PUT</code> method guard.\nTransfer bytes into <code>self</code> from <code>src</code> and advance the cursor …\nPut <code>cnt</code> bytes <code>val</code> into <code>self</code>.\nWrites an IEEE754 single-precision (4 bytes) floating …\nWrites an IEEE754 single-precision (4 bytes) floating …\nWrites an IEEE754 single-precision (4 bytes) floating …\nWrites an IEEE754 double-precision (8 bytes) floating …\nWrites an IEEE754 double-precision (8 bytes) floating …\nWrites an IEEE754 double-precision (8 bytes) floating …\nWrites a signed 128 bit integer to <code>self</code> in the big-endian …\nWrites a signed 128 bit integer to <code>self</code> in little-endian …\nWrites a signed 128 bit integer to <code>self</code> in native-endian …\nWrites a signed 16 bit integer to <code>self</code> in big-endian byte …\nWrites a signed 16 bit integer to <code>self</code> in little-endian …\nWrites a signed 16 bit integer to <code>self</code> in native-endian …\nWrites a signed 32 bit integer to <code>self</code> in big-endian byte …\nWrites a signed 32 bit integer to <code>self</code> in little-endian …\nWrites a signed 32 bit integer to <code>self</code> in native-endian …\nWrites a signed 64 bit integer to <code>self</code> in the big-endian …\nWrites a signed 64 bit integer to <code>self</code> in little-endian …\nWrites a signed 64 bit integer to <code>self</code> in native-endian …\nWrites a signed 8 bit integer to <code>self</code>.\nWrites low <code>nbytes</code> of a signed integer to <code>self</code> in …\nWrites low <code>nbytes</code> of a signed integer to <code>self</code> in …\nWrites low <code>nbytes</code> of a signed integer to <code>self</code> in …\nTransfer bytes into <code>self</code> from <code>src</code> and advance the cursor …\nWrites an unsigned 128 bit integer to <code>self</code> in the …\nWrites an unsigned 128 bit integer to <code>self</code> in …\nWrites an unsigned 128 bit integer to <code>self</code> in …\nWrites an unsigned 16 bit integer to <code>self</code> in big-endian …\nWrites an unsigned 16 bit integer to <code>self</code> in little-endian …\nWrites an unsigned 16 bit integer to <code>self</code> in native-endian …\nWrites an unsigned 32 bit integer to <code>self</code> in big-endian …\nWrites an unsigned 32 bit integer to <code>self</code> in little-endian …\nWrites an unsigned 32 bit integer to <code>self</code> in native-endian …\nWrites an unsigned 64 bit integer to <code>self</code> in the …\nWrites an unsigned 64 bit integer to <code>self</code> in little-endian …\nWrites an unsigned 64 bit integer to <code>self</code> in native-endian …\nWrites an unsigned 8 bit integer to <code>self</code>.\nWrites an unsigned n-byte integer to <code>self</code> in big-endian …\nWrites an unsigned n-byte integer to <code>self</code> in the …\nWrites an unsigned n-byte integer to <code>self</code> in the …\nCreates an adaptor which implements the <code>Read</code> trait for <code>self</code>…\nCreate a relative or absolute redirect.\nReturns the number of bytes between the current position …\nReturns the number of bytes that can be written from the …\nReserves capacity for at least <code>additional</code> more bytes to be …\nResizes the buffer so that <code>len</code> is equal to <code>new_len</code>.\nCreates a new resource for a specific path.\nCreates a new un-configured route.\nConfigure route for a specific path.\nCreates scope for common path prefix.\nUse the “303 See Other” status when responding.\nCreates a raw service for a specific path.\nRegister HTTP service factory.\nSets the length of the buffer.\nReturns a slice of self for the provided range.\nReturns a slice of self that is equivalent to the given …\nReturns the remaining spare capacity of the buffer as a …\nRemoves the bytes from the current view, returning them in …\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nSplits the buffer into two at the given index.\nCreates an adaptor which will read at most <code>limit</code> bytes …\nUse the “307 Temporary Redirect” status when …\nCreates a new any-method route with handler.\nConstruct a new <code>Redirect</code> to use as a responder.\nBuffers entire payload from request.\nBuffers payload from request up to <code>limit</code> bytes.\nCreates a new route with <code>TRACE</code> method guard.\nShortens the buffer, keeping the first <code>len</code> bytes and …\nShortens the buffer, keeping the first <code>len</code> bytes and …\nCopies bytes from <code>self</code> into <code>dst</code>.\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 single-precision (4 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets an IEEE754 double-precision (8 bytes) floating point …\nGets a signed 128 bit integer from <code>self</code> in big-endian byte …\nGets a signed 128 bit integer from <code>self</code> in little-endian …\nGets a signed 128 bit integer from <code>self</code> in native-endian …\nGets a signed 16 bit integer from <code>self</code> in big-endian byte …\nGets an signed 16 bit integer from <code>self</code> in little-endian …\nGets a signed 16 bit integer from <code>self</code> in native-endian …\nGets a signed 32 bit integer from <code>self</code> in big-endian byte …\nGets a signed 32 bit integer from <code>self</code> in little-endian …\nGets a signed 32 bit integer from <code>self</code> in native-endian …\nGets a signed 64 bit integer from <code>self</code> in big-endian byte …\nGets a signed 64 bit integer from <code>self</code> in little-endian …\nGets a signed 64 bit integer from <code>self</code> in native-endian …\nGets a signed 8 bit integer from <code>self</code>.\nGets a signed n-byte integer from <code>self</code> in big-endian byte …\nGets a signed n-byte integer from <code>self</code> in little-endian …\nGets a signed n-byte integer from <code>self</code> in native-endian …\nGets an unsigned 128 bit integer from <code>self</code> in big-endian …\nGets an unsigned 128 bit integer from <code>self</code> in …\nGets an unsigned 128 bit integer from <code>self</code> in …\nGets an unsigned 16 bit integer from <code>self</code> in big-endian …\nGets an unsigned 16 bit integer from <code>self</code> in little-endian …\nGets an unsigned 16 bit integer from <code>self</code> in native-endian …\nGets an unsigned 32 bit integer from <code>self</code> in big-endian …\nGets an unsigned 32 bit integer from <code>self</code> in little-endian …\nGets an unsigned 32 bit integer from <code>self</code> in native-endian …\nGets an unsigned 64 bit integer from <code>self</code> in big-endian …\nGets an unsigned 64 bit integer from <code>self</code> in little-endian …\nGets an unsigned 64 bit integer from <code>self</code> in native-endian …\nGets an unsigned 8 bit integer from <code>self</code>.\nGets an unsigned n-byte integer from <code>self</code> in big-endian …\nGets an unsigned n-byte integer from <code>self</code> in little-endian …\nGets an unsigned n-byte integer from <code>self</code> in native-endian …\nTry to convert self into <code>BytesMut</code>.\nAttempts to cheaply reclaim already allocated capacity for …\nAbsorbs a <code>BytesMut</code> that was previously split off.\nAllows the use of custom status codes for less common …\nCreates a new <code>BytesMut</code> with the specified capacity.\nCreates an adaptor which implements the <code>Write</code> trait for …\nCreates a new <code>BytesMut</code> containing <code>len</code> zeros.\nLength as reported by <code>Content-Length</code> header, if present.")