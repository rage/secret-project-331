searchState.loadedDescShard("csv_core", 0, "<code>csv-core</code> provides a fast CSV reader and writer for use in …\nThis puts quotes around every field. Always.\nParses the byte given as a record terminator.\nParses <code>\\r</code>, <code>\\n</code> or <code>\\r\\n</code> as a single record terminator.\nAll CSV data has been read.\nAll CSV data has been read.\nAll CSV data has been read.\nAll CSV data has been read.\nThe end of a field was found.\nThe end of a field was found.\nThe caller provided input was exhausted before the end of …\nThe caller provided input was exhausted before the end of …\nThe caller provided input was exhausted before the end of …\nThe caller provided input was exhausted before the end of …\nThis result occurs when all of the bytes from the given …\nThis puts quotes around fields only when necessary.\nThis <em>never</em> writes quotes, even if it would produce invalid …\nThis puts quotes around all fields that are non-numeric. …\nThe caller provided output buffer of field end poisitions …\nThe caller provided output buffer was filled before an …\nThe caller provided output buffer was filled before an …\nThis result occurs when the output buffer was too small to …\nThe quoting style to use when writing CSV data.\nThe result of parsing at most one field from CSV data …\nThe result of parsing at most one field from CSV data.\nThe result of parsing at most one record from CSV data …\nThe result of parsing at most one record from CSV data.\nA pull based CSV reader.\nBuilds a CSV reader with various configuration knobs.\nThe end of a record was found.\nThe end of a record was found.\nA record terminator.\nThe result of writing CSV data.\nA writer for CSV data.\nA builder for configuring a CSV writer.\nA convenience method for specifying a configuration to …\nBuild a CSV parser from this configuration.\nBuilder a CSV writer from this configuration.\nThe comment character to use when parsing CSV.\nThe comment character that will be used when later reading …\nWrite the configured field delimiter to <code>output</code>.\nThe field delimiter to use when parsing CSV.\nThe field delimiter to use when writing CSV.\nEnable double quote escapes.\nThe quoting escape mechanism to use when writing CSV.\nThe escape character to use when parsing CSV.\nThe escape character to use when writing CSV.\nWrite a single CSV field from <code>input</code> to <code>output</code> while …\nFinish writing CSV data to <code>output</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the delimiter used for this writer.\nReturn whether this writer doubles quotes or not. When the …\nReturn the escape character used for this writer.\nReturn the quote character used for this writer.\nReturn the quoting style used for this writer.\nReturn the terminator used for this writer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if and only if the given input is non-numeric.\nReturns true if and only if the given byte corresponds to …\nReturn the current line number as measured by the number …\nCreates a new CSV writer with the default configuration.\nCreate a new CSV reader with a default parser …\nCreate a new builder.\nCreate a new builder for configuring a CSV writer.\nEscape quotes <code>input</code> and writes the result to <code>output</code>.\nThe quote character to use when parsing CSV.\nThe quote character to use when writing CSV.\nThe quoting style to use when writing CSV.\nEnable or disable quoting.\nParse a single CSV field in <code>input</code> and copy field data to …\nParse a single CSV record in <code>input</code> and copy each field …\nReset the parser such that it behaves as if it had never …\nSet the line number.\nReturns true if and only if we should put the given field …\nWrite the configured record terminator to <code>output</code>.\nThe record terminator to use when parsing CSV.\nThe record terminator to use when writing CSV.\nWhether this was the last field in a record or not.\nWhether this was the last field in a record or not.")