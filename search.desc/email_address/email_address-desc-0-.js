searchState.loadedDescShard("email_address", 0, "A Rust crate providing an implementation of an …\nThe <code>domain</code> is an empty string.\nInvalid placement of the domain separator (character: ‘.…\nToo few <code>sub-domain</code>s in <code>domain</code>.\nThe <code>domain</code> is is too long.\nType representing a single email address. This is …\nError type used when parsing an address.\nAn invalid character was found in some component of the …\nA Comment within the either the <code>local-part</code>, or <code>domain</code>, was …\nAn IP address in a <code>domain-literal</code> was malformed.\nThe <code>local-part</code> is an empty string.\nThe <code>local-part</code> is is too long.\nDisplay name was not supplied, but email starts with ‘&lt;…\nAn email enclosed within &lt;…&gt; is missing the final ‘&gt;’…\nThe separator character between <code>local-part</code> and <code>domain</code> …\nStruct of options that can be configured when parsing with …\nThe <code>sub-domain</code> within the <code>domain</code> is empty.\nA <code>sub-domain</code> within the <code>domain</code> is is too long.\nThe quotes (character: ‘“’) around <code>local-part</code> are …\nDisplay name was supplied, but is unsupported by parser …\nA <code>domain-literal</code> was supplied, but is unsupported by …\nSpecified whether display text is allowed. Defaults to <code>true</code>…\nSpecifies if domain literals are allowed. Defaults to <code>true</code>.\nReturns the entire email address as a string reference.\nReturns the display part of the email address. This is …\nReturns the domain of the email address. This is borrowed …\nReturns the email part of the email address. This is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermine whether the <code>address</code> string is a valid email …\nDetermine whether the <code>part</code> string would be a valid <code>domain</code> …\nDetermine whether the <code>part</code> string would be a valid …\nReturns the local part of the email address. This is …\nSets the minimum number of domain segments that must exist …\nCreates an <code>EmailAddress</code> without checking if the email is …\nParses an EmailAddress with custom Options. Useful for …\nReturn a string formatted as a display email with the user …\nReturn this email address formatted as a URI. This will …\nSet the value of <code>allow_display_text</code> to <code>true</code>.\nSet the value of <code>allow_domain_literal</code> to <code>true</code>.\nSet the value of <code>minimum_sub_domains</code>.\nSet the value of <code>minimum_sub_domains</code> to zero.\nSet the value of <code>minimum_sub_domains</code> to two, this has the …\nSet the value of <code>allow_display_text</code> to <code>false</code>.\nSet the value of <code>allow_domain_literal</code> to <code>false</code>.")