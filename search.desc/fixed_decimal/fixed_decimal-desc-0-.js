searchState.loadedDescShard("fixed_decimal", 0, "<code>fixed_decimal</code> is a utility crate of the <code>ICU4X</code> project.\nShow a minus sign on negative numbers and a plus sign on …\nRender the sign according to locale preferences. In most …\nA struct containing a <code>FixedDecimal</code> significand together …\nShow a minus sign on negative numbers and a plus sign on …\nA struct containing decimal digits with efficient …\nAn error involving FixedDecimal operations or conversion.\nA <code>FixedInteger</code> is a <code>FixedDecimal</code> with no fractional part.\nThe magnitude or number of digits exceeds the limit of the …\nRound the last digit to any digit (0-9).\nRound the last digit to only multiples of two (0, 2, 4, 6, …\nRound the last two digits to only multiples of twenty-five …\nRound the last digit to only multiples of five (0, 5).\nA negative sign, e.g., -1729.\nShow a minus sign on strictly negative numbers. Do not …\nDo not display the sign. Positive and negative numbers are …\nNo sign (implicitly positive, e.g., 1729).\nAn explicit positive sign, e.g., +1729.\nIncrement used in a rounding operation.\nA struct containing a <code>FixedDecimal</code> significand together …\nA specification of the sign used when formatting a number.\nConfiguration for when to render the minus sign or plus …\nThe input of a string that is supposed to be converted to …\nSets the sign according to the given sign display strategy.\nTake the ceiling of the number at a particular position.\nTake the ceiling of the number at a particular position …\nTake the ceiling of the number at a particular position.\nTake the ceiling of the number at a particular position …\nConcatenate another <code>FixedDecimal</code> into the end of this …\nConcatenate another <code>FixedDecimal</code> into the end of this …\nReturns a <code>FixedDecimal</code> representing zero.\nGets the digit at the specified order of magnitude. …\nTake the expand of the number at a particular position.\nTake the expand of the number at a particular position and …\nTake the expand of the number at a particular position.\nTake the expand of the number at a particular position and …\nReturns the exponent of <code>self</code>.\nTake the floor of the number at a particular position.\nTake the floor of the number at a particular position and …\nTake the floor of the number at a particular position.\nTake the floor of the number at a particular position and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a <code>CompactDecimal</code> from its significand and …\nTake the half ceiling of the number at a particular …\nTake the half ceiling of the number at a particular …\nTake the half ceiling of the number at a particular …\nTake the half ceiling of the number at a particular …\nTake the half even of the number at a particular position.\nTake the half even of the number at a particular position …\nTake the half even of the number at a particular position.\nTake the half even of the number at a particular position …\nTake the half expand of the number at a particular …\nTake the half expand of the number at a particular …\nTake the half expand of the number at a particular …\nTake the half expand of the number at a particular …\nTake the half floor of the number at a particular position.\nTake the half floor of the number at a particular position …\nTake the half floor of the number at a particular position.\nTake the half floor of the number at a particular position …\nHalf Truncates the number on the right to a particular …\nHalf Truncates the number on the right to a particular …\nHalf Truncates the number on the right to a particular …\nHalf Truncates the number on the right to a particular …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the significand of <code>self</code>.\nReturns whether the number has a numeric value of zero.\nGets the visible range of digit magnitudes, in ascending …\nShift the digits by a power of 10, consuming self and …\nShift the digits by a power of 10, modifying self.\nGets the magnitude of the smallest nonzero digit. If the …\nGets the magnitude of the largest nonzero digit. If the …\nZero-pad the number on the right to a particular …\nZero-pad the number on the left to a particular position.\nZero-pad the number on the right to a particular …\nZero-pad the number on the left to a particular position, …\nTruncate the number on the left to a particular position, …\nChange the sign to the one given.\nReturns the sign.\nReturns a reference to the significand of <code>self</code>.\nRemove trailing zeroes, modifying self.\nRemove leading zeroes, modifying self.\nRemove trailing zeroes, consuming self and returning a new …\nRemove leading zeroes, consuming self and returning a new …\nTruncates the number on the right to a particular …\nTruncates the number on the right to a particular position …\nTruncate the number on the right to a particular position, …\nTruncates the number on the right to a particular position …\nTruncate the number on the left to a particular position, …\nChange the sign to the one given, consuming self and …\nSets the sign according to the given sign display …")