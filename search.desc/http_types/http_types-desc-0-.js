searchState.loadedDescShard("http_types", 0, "Common types for HTTP operations.\n202 Accepted\nThe ACL method modifies the access control list (which can …\n502 Bad Gateway\n400 Bad Request\nA collection can be placed under baseline control with a …\nThe BIND method modifies the collection identified by the …\nA streaming HTTP body.\nA CHECKIN request can be applied to a checked-out …\nA CHECKOUT request can be applied to a checked-in …\n409 Conflict\nThe CONNECT method requests that the recipient establish a …\n100 Continue\nThe COPY method creates a duplicate of the source resource …\n201 Created\nThe DELETE method requests that the origin server remove …\n103 Early Hints\nContains the error value\nThe error type for HTTP operations.\n417 Expectation Failed\nA type to store extra data inside <code>Request</code> and <code>Response</code>.\n424 Failed Dependency\n403 Forbidden\n302 Found\n504 Gateway Timeout\nThe GET method requests transfer of a current selected …\n410 Gone\nThe HEAD method is identical to GET except that the server …\nA collection of HTTP Headers.\nHTTP/0.9\nHTTP/1.0\nHTTP/1.1\nHTTP/2.0\nHTTP/3.0\n505 HTTP Version Not Supported\n418 I’m a teapot\n226 Im Used\n507 Insufficient Storage\n500 Internal Server Error\nA LABEL request can be applied to a version to modify the …\n411 Length Required\nThe LINK method establishes one or more Link relationships …\nThe LOCK method is used to take out a lock of any access …\n423 Locked\n508 Loop Detected\nThe MERGE method performs the logical merge of a specified …\nHTTP request methods.\n405 Method Not Allowed\nAn IANA media type.\n421 Misdirected Request\nA MKACTIVITY request creates a new activity resource.\nAn HTTP request using the MKCALENDAR method creates a new …\nMKCOL creates a new collection resource at the location …\nThe MKREDIRECTREF method requests the creation of a …\nA MKWORKSPACE request creates a new workspace resource.\nThe MOVE operation on a non-collection resource is the …\n301 Moved Permanently\n207 Multi-Status\n300 Multiple Choice\n511 Network Authentication Required\n204 No Content\n203 Non Authoritative Information\n406 Not Acceptable\n510 Not Extended\n404 Not Found\n501 Not Implemented\n304 Not Modified\nContains the success value\n200 Ok\nThe OPTIONS method requests information about the …\nThe ORDERPATCH method is used to change the ordering …\n206 Partial Content\nThe PATCH method requests that a set of changes described …\n413 Payload Too Large\n402 Payment Required\n308 Permanent Redirect\nThe POST method requests that the target resource process …\n412 Precondition Failed\n428 Precondition Required\nThis method is never used by an actual client. This method …\nThe PROPFIND method retrieves properties defined on the …\nThe PROPPATCH method processes instructions specified in …\n407 Proxy Authentication Required\nThe PUT method requests that the state of the target …\nThe REBIND method removes a binding to a resource from a …\nA REPORT request is an extensible mechanism for obtaining …\nAn HTTP request.\n431 Request Header Fields Too Large\n408 Request Timeout\n416 Requested Range Not Satisfiable\n205 Reset Content\nAn HTTP response.\nA specialized <code>Result</code> type for HTTP operations.\nThe client invokes the SEARCH method to initiate a …\n303 See Other\n503 Service Unavailable\nProvides the <code>status</code> method for <code>Result</code> and <code>Option</code>.\nHTTP response status codes.\n101 Switching Protocols\n307 Temporary Redirect\n425 Too Early\n429 Too Many Requests\nThe TRACE method requests a remote, application-level …\nA collection of trailing HTTP headers.\n401 Unauthorized\n451 Unavailable For Legal Reasons\nThe UNBIND method modifies the collection identified by …\nAn UNCHECKOUT request can be applied to a checked-out …\nThe UNLINK method removes one or more Link relationships …\nThe UNLOCK method removes the lock identified by the lock …\n422 Unprocessable Entity\n415 Unsupported Media Type\nThe UPDATE method modifies the content and dead properties …\nThe UPDATEREDIRECTREF method requests the update of a …\n426 Upgrade Required\n414 URI Too Long\nA parsed URL record.\n506 Variant Also Negotiates\nThe version of the HTTP protocol in use.\nA VERSION-CONTROL request can be used to create a …\nAppend a header to the headers.\nAppend a header to the headers.\nReturn the serialization of this URL.\nHTTP authentication and authorization.\nReturn the authority of this URL as an ASCII string.\nReturn early with an error.\nRead the body as bytes.\nRead the body as bytes.\nRead the body as <code>x-www-form-urlencoded</code>.\nRead the body as <code>x-www-form-urlencoded</code>.\nRead the body as JSON.\nRead the body as JSON.\nRead the body as a string.\nRead the body as a string.\nHTTP caching.\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nThe canonical reason for a given status code\nCreate a Body by chaining another Body after this one, …\nClear the <code>Extensions</code> of all inserted values.\nClone the request, resolving the body to <code>Body::empty()</code> and …\nClone the response, resolving the body to <code>Body::empty()</code> …\nHTTP conditional headers.\nCreate a <code>CONNECT</code> request.\nCheck if container contains value for type\nHTTP Content headers.\nGet the current content type\nGet the current content type\nTraits for conversions between types.\nCreate a <code>DELETE</code> request.\nSerialize with Serde using the internal representation of …\nIf this URL has a host and it is a domain name (not an IP …\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nCreate a new empty <code>Body</code>.\nReturn early with an error if a condition is not satisfied.\nReturn early with an error if two expressions are not …\nReturns a reference to the existing local state.\nReturns a reference to the existing local.\nReturns a mutuable reference to the existing local state.\nReturns a mutuable reference to the existing local state.\nConstruct an ad-hoc error from a string.\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>Body</code> from a Vec of bytes.\nConverts anything which implements <code>Debug</code> into an …\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nConverts anything which implements <code>Display</code> into an …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nCreates a <code>Body</code> from a type, serializing it using form …\nCreates a <code>Body</code> from a type, serializing it as JSON.\nCreate a <code>Body</code> from a reader with an optional length.\nCreate a new error object from static string.\nCreate a new <code>Mime</code>.\nCreate a <code>Body</code> from a String\nGet a reference to a value previously inserted on this …\nCreate a <code>GET</code> request.\nGet a mutable reference to a value previously inserted on …\nReturn whether the URL has an ‘authority’, which can …\nEquivalent to <code>url.host().is_some()</code>.\nReturns <code>true</code> if sending trailers is in progress.\nReturns <code>true</code> if sending trailers is in progress.\nReturns <code>true</code> if a protocol upgrade is in progress.\nCreate a <code>HEAD</code> request.\nGet an HTTP header.\nGet an HTTP header.\nGet a mutable reference to a header.\nGet a mutable reference to a header.\nAn iterator visiting all header names in arbitrary order.\nAn iterator visiting all header names in arbitrary order.\nAn iterator visiting all header values in arbitrary order.\nAn iterator visiting all header values in arbitrary order.\nHTTP headers.\nReturn the parsed representation of the host for this URL. …\nGet the destination host for this request.\nReturn the string representation of the host (domain or IP …\nReturns a reference to the value corresponding to the …\nReturns a reference to the value corresponding to the …\nReturns a reference to the value corresponding to the …\nReturns a reference to the value corresponding to the …\nReturns a reference to the value corresponding to the …\nReturns a reference to the value corresponding to the …\nInsert a value into this <code>Extensions</code>.\nSet an HTTP header.\nSet an HTTP header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParse the body into a <code>Vec&lt;u8&gt;</code>.\nParse the body from form encoding into a type.\nReturns the inner <code>anyhow::Error</code> Note: This will lose …\nReturns a iterator of references over the remaining items.\nReturns a iterator of references over the remaining items.\nParse the body as JSON, serializing it to a struct.\nGet the inner reader from the <code>Body</code>\nReturn the serialization of this URL.\nRead the body as a string\nReturns <code>true</code> if the status code is the <code>4xx</code> range.\nReturns <code>true</code> if the body has a length of zero, and <code>false</code> …\nReturns <code>true</code> if the request has a set body stream length …\nReturns <code>true</code> if the set length of the body stream is zero, …\nReturns <code>true</code> if the status code is <code>1xx</code> range.\nReturns <code>true</code> if the status code is the <code>3xx</code> range.\nWhether a method is considered “safe”, meaning the …\nReturns <code>true</code> if the status code is the <code>5xx</code> range.\nReturn whether the URL is special (has a special scheme)\nReturns <code>true</code> if the status code is the <code>2xx</code> range.\nAn iterator visiting all header pairs in arbitrary order.\nAn iterator visiting all header pairs in arbitrary order.\nAn iterator visiting all header pairs in arbitrary order, …\nAn iterator visiting all header pairs in arbitrary order, …\nParse a string as an URL, with this URL as the base URL.\nGet the length of the body in bytes.\nGet the length of the body stream, if it has been set.\nGet the length of the body stream, if it has been set.\nGet the local socket address for the underlying transport, …\nGet the local socket address for the underlying transport, …\nCreates a relative URL if possible, with this URL as the …\nGet the HTTP method\nIANA Media Types.\nReturns the mime type of this Body.\nCreate a new error object from any error type.\nCreate a new request.\nCreate a new response.\nReturn a default <code>ParseOptions</code> that can fully configure the …\nCreate a <code>OPTIONS</code> request.\nReturn the origin of this URL (…\nMiscellaneous HTTP headers.\nParse an absolute URL from a string.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nCreate a <code>PATCH</code> request.\nReturn the path for this URL, as a percent-encoded ASCII …\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nGet the peer socket address for the underlying transport, …\nGet the peer socket address for the underlying transport, …\nReturn the port number for this URL, if any.\nReturn the port number for this URL, or the default port …\nCreate a <code>POST</code> request.\nHeaders that are set by proxies\nCreate a <code>PUT</code> request.\nReturn this URL’s query string, if any, as a …\nGet the URL querystring.\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nReceive trailers from a sender.\nReceive trailers from a sender.\nReceive an upgraded connection from a sender.\nGet the remote address for this request.\nRemove a value from this <code>Extensions</code>.\nRemove a header.\nRemove a header.\nSwaps the value of the body with another body, without …\nReplace the response body with a new body, returning the …\nReturn the scheme of this URL, lower-cased, as an ASCII …\nHTTP Security Headers.\nSends trailers to the a receiver.\nSends trailers to the a receiver.\nSends an upgrade connection to the a receiver.\nSerialize with Serde using the internal representation of …\nHTTP Server Context headers.\nSet the request body.\nSet the body reader.\nSet the response MIME.\nSet the response MIME.\nChange this URL’s fragment identifier.\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nSets a string representation of the local address that this\nSets a string representation of the local address that this\nSet the HTTP method.\nSets the mime type of this Body.\nChange this URL’s password.\nChange this URL’s path.\nSets a string representation of the peer address of this …\nSets a string representation of the peer address that this …\nChange this URL’s port number.\nChange this URL’s query string. If <code>query</code> is <code>None</code>, this …\nSet the URL querystring.\nChange this URL’s scheme.\nSet the status code associated with this error.\nSet the status.\nChange this URL’s username.\nSet the HTTP version.\nSet the HTTP version.\nResolve a URL’s host and port number to <code>SocketAddr</code>.\nWrap the error value with an additional status code.\nGet the status code associated with this error.\nGet the status\nReplace the request body with a new body, and return the …\nSwaps the value of the body with another body, without …\nTake the request body, replacing it with an empty body.\nTake the response body, replacing it with an empty body.\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\nHTTP timings and traces.\nCreate a <code>TRACE</code> request.\nHTTP trailing headers.\nHTTP transfer headers.\nRetrieves a reference to the type name of the error, if …\nHTTP protocol upgrades.\nURL records.\nGet a reference to the url.\nGet a mutable reference to the url.\nReturn the username for this URL (typically the empty …\nGet the HTTP version, if one has been set.\nGet the HTTP version, if one has been set.\nWrap the error value with an additional status code that …\nHTTP Mutual Authentication Algorithms\nCredentials to authenticate a user agent with a server.\nRFC7617 Basic auth\nHTTP Basic authorization.\nRFC6750 Bearer auth\nRFC7616 Digest auth\nRFC7486 HTTP Origin-Bound Authentication (HOBA)\nRFC8120 Mutual auth\nRFC4559 Negotiate auth\nRFC5849 OAuth\nRFC7804 SCRAM SHA1 auth\nRFC7804 SCRAM SHA256 auth\nRFC8292 Vapid auth\nDefine the authentication method that should be used to …\nSets the header.\nSets the header.\nSets the header.\nGet the authorization credentials.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from the base64 encoded credentials.\nCreate a new instance from headers.\nCreate a new instance from headers.\nCreate a new instance from headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nCreate a new instance of <code>Authorization</code>.\nCreate a new instance of <code>BasicAuth</code>.\nCreate a new instance of <code>WwwAuthenticate</code>.\nGet the password.\nGet the authorization realm.\nGet the authorization scheme.\nGet the authorization scheme.\nSet the authorization credentials.\nSet the authorization realm.\nSet the authorization scheme.\nSet the authorization scheme.\nGet the username.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nHTTP <code>Age</code> header\nIndicates that the server wishes to remove locally cached …\nA Cache-Control header.\nAn HTTP <code>Cache-Control</code> directive.\nAn HTTP <code>Clear-Site-Data</code> directive.\nClear browsing data (cookies, storage, cache) associated …\nIndicates that the server wishes to remove all cookies for …\nIndicates that the server wishes to reload all browsing …\nHTTP <code>Expires</code> header\nThe response body will not change over time.\nThe maximum amount of time a resource is considered fresh.\nIndicates the client will accept a stale response.\nA response that will still be fresh for at least the …\nOnce a response is stale, a fresh response must be …\nThe response may be cached, but must always be revalidated …\nThe response may not be cached.\nAn intermediate cache or proxy should not edit the …\nDo not use the network for a response.\nThe response may be stored only by a browser’s cache, …\nLike must-revalidate, but only for shared caches (e.g., …\nThe response may be stored by any cache, even if the …\nOverrides max-age or the Expires header, but only for …\nThe client will accept a stale response if retrieving a …\nIndicates the client will accept a stale response, while …\nIndicates that the server wishes to remove all DOM storage …\nSets the <code>Server-Timing</code> header.\nSets the <code>If-Match</code> header.\nInsert a <code>HeaderName</code> + <code>HeaderValue</code> pair into a <code>Headers</code> …\nInsert a <code>HeaderName</code> + <code>HeaderValue</code> pair into a <code>Headers</code> …\nGet the formatted string.\nGet the duration from the header.\nGet the expiration time.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from headers.\nCreate a new instance from headers.\nCreate an instance of <code>Age</code> from a <code>Headers</code> instance.\nCreate an instance of <code>Expires</code> from a <code>Headers</code> instance.\nCreate a new instance of <code>Age</code> from secs.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all server entries.\nAn iterator visiting all server entries.\nAn iterator visiting all server entries.\nAn iterator visiting all server entries.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nCreate a new instance of <code>CacheControl</code>.\nCreate a new instance of <code>ClearSiteData</code>.\nCreate a new instance of <code>Age</code>.\nCreate a new instance of <code>Expires</code>.\nCreate a new instance of <code>Expires</code> from secs.\nPush a directive into the list of entries.\nPush a directive into the list of entries.\nSet the wildcard directive.\nCheck whether this directive is valid in an HTTP request.\nCheck whether this directive is valid in an HTTP response.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nReturns <code>true</code> if a wildcard directive was set.\nHTTP Entity Tags.\nApply the HTTP method if the ETag matches.\nApply the HTTP method if the entity has been modified …\nApply the HTTP method if the ETags do not match.\nApply the HTTP method if the entity has not been modified …\nThe last modification date of a resource.\nAn ETag using strong validation.\nApply the HTTP method if the ETag matches.\nAn ETag using weak validation.\nSets the <code>If-Match</code> header.\nSets the <code>ETag</code> header.\nInsert a <code>HeaderName</code> + <code>HeaderValue</code> pair into a <code>Headers</code> …\nInsert a <code>HeaderName</code> + <code>HeaderValue</code> pair into a <code>Headers</code> …\nInsert a <code>HeaderName</code> + <code>HeaderValue</code> pair into a <code>Headers</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from headers.\nCreate a new instance from headers.\nCreate an instance of <code>IfModifiedSince</code> from a <code>Headers</code> …\nCreate an instance of <code>IfUnmodifiedSince</code> from a <code>Headers</code> …\nCreate an instance of <code>LastModified</code> from a <code>Headers</code> instance.\nApply the HTTP method if the ETag matches.\nApply the HTTP method if the ETags do not match.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the ETag is a <code>Strong</code> value.\nReturns <code>true</code> if the ETag is a <code>Weak</code> value.\nAn iterator visiting all server entries.\nAn iterator visiting all server entries.\nReturns the last modification time listed.\nReturns the last modification time listed.\nReturns the last modification time listed.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nCreate a new instance of <code>Vary</code>.\nCreate a new ETag that uses strong validation.\nCreate a new instance of <code>IfModifiedSince</code>.\nCreate a new instance of <code>IfUnmodifiedSince</code>.\nCreate a new instance of <code>LastModified</code>.\nCreate a new ETag that uses weak validation.\nPush a directive into the list of entries.\nSet the wildcard directive.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nReturns <code>true</code> if a wildcard directive was set.\nApply the HTTP method if the ETag matches.\nA borrowing iterator over entries in <code>IfMatch</code>.\nA lending iterator over entries in <code>IfMatch</code>.\nA mutable iterator over entries in <code>IfMatch</code>.\nSets the <code>If-Match</code> header.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all server entries.\nAn iterator visiting all server entries.\nGet the <code>HeaderName</code>.\nCreate a new instance of <code>IfMatch</code>.\nPush a directive into the list of entries.\nSet the wildcard directive.\nGet the <code>HeaderValue</code>.\nReturns <code>true</code> if a wildcard directive was set.\nApply the HTTP method if the ETags do not match.\nA borrowing iterator over entries in <code>IfNoneMatch</code>.\nA lending iterator over entries in <code>IfNoneMatch</code>.\nA mutable iterator over entries in <code>IfNoneMatch</code>.\nSets the <code>If-None-Match</code> header.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all server entries.\nAn iterator visiting all server entries.\nGet the <code>HeaderName</code>.\nCreate a new instance of <code>IfNoneMatch</code>.\nPush a directive into the list of entries.\nSet the wildcard directive.\nGet the <code>HeaderValue</code>.\nReturns <code>true</code> if a wildcard directive was set.\nClient header advertising which media types the client is …\nClient header advertising available compression algorithms.\nThe Brotli encoding.\nSpecify the compression algorithm.\nThe size of the entity-body, in bytes, sent to the …\nIndicates an alternate location for the returned data.\nIndicate the media type of a resource’s content.\nThe Deflate encoding.\nAvailable compression algorithms.\nA proposed <code>Encoding</code> in <code>AcceptEncoding</code>.\nThe Gzip encoding.\nNo encoding.\nA proposed Media Type for the <code>Accept</code> header.\nThe Zstd encoding.\nClient header advertising which media types the client is …\nClient header advertising available compression algorithms.\nSets the header.\nSets the header.\nSets the header.\nSpecify the compression algorithm.\nGet the proposed encoding.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from headers.\nCreate a new instance from headers.\nCreate a new instance from headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the content length.\nGet the url.\nGet the proposed media_type.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nCreate a new instance.\nCreate a new instance of <code>Content-Location</code> header.\nCreate a new instance.\nCreate a new instance of <code>EncodingProposal</code>.\nCreate a new instance of <code>MediaTypeProposal</code>.\nSet the content length.\nSet the url.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the weight of the proposal.\nGet the weight of the proposal.\nClient header advertising which media types the client is …\nA borrowing iterator over entries in <code>Accept</code>.\nA lending iterator over entries in <code>Accept</code>.\nA mutable iterator over entries in <code>Accept</code>.\nSets the <code>Accept-Encoding</code> header.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an instance of <code>Accept</code> from a <code>Headers</code> instance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all entries.\nAn iterator visiting all entries.\nGet the <code>HeaderName</code>.\nDetermine the most suitable <code>Content-Type</code> encoding.\nCreate a new instance of <code>Accept</code>.\nPush a directive into the list of entries.\nSet the wildcard directive.\nSort the header directives by weight.\nGet the <code>HeaderValue</code>.\nReturns <code>true</code> if a wildcard directive was passed.\nClient header advertising available compression algorithms.\nA borrowing iterator over entries in <code>AcceptEncoding</code>.\nA lending iterator over entries in <code>AcceptEncoding</code>.\nA mutable iterator over entries in <code>AcceptEncoding</code>.\nSets the <code>Accept-Encoding</code> header.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an instance of <code>AcceptEncoding</code> from a <code>Headers</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all entries.\nAn iterator visiting all entries.\nGet the <code>HeaderName</code>.\nDetermine the most suitable <code>Content-Encoding</code> encoding.\nCreate a new instance of <code>AcceptEncoding</code>.\nPush a directive into the list of entries.\nSet the wildcard directive.\nSort the header directives by weight.\nGet the <code>HeaderValue</code>.\nReturns <code>true</code> if a wildcard directive was passed.\nSpecify the compression algorithm.\nSets the <code>Content-Encoding</code> header.\nAccess the encoding kind.\nCreate a new instance from headers.\nGet the <code>HeaderName</code>.\nCreate a new instance of <code>CacheControl</code>.\nGet the <code>HeaderValue</code>.\nA <strong>data structure</strong> that can be deserialized from any data …\nA data structure that can be deserialized without …\nA <strong>data structure</strong> that can be serialized into any data …\nDeserialize this value from the given Serde deserializer.\nConstruct a <code>serde_json::Value</code> from a JSON literal.\nSerialize this value into the given Serde serializer.\nThe <code>Accept</code> Header\nThe <code>Accept-Charset</code> Header\nThe <code>Accept-Encoding</code> Header\nThe <code>Accept-Language</code> Header\nThe <code>Accept-Ranges</code> Header\nThe <code>access-control-allow-credentials</code> Header\nThe <code>access-control-allow-headers</code> Header\nThe <code>access-control-allow-methods</code> Header\nThe <code>access-control-allow-origin</code> Header\nThe <code>access-control-expose-headers</code> Header\nThe <code>access-control-max-age</code> Header\nThe <code>access-control-request-headers</code> Header\nThe <code>access-control-request-method</code> Header\nThe <code>Age</code> Header\nThe <code>Allow</code> Header\nThe <code>Authorization</code> Header\nThe <code>Cache-Control</code> Header\nThe <code>Clear-Site-Data</code> Header\nThe <code>Connection</code> Header\nThe <code>Content-Encoding</code> Header\nThe <code>Content-Language</code> Header\nThe <code>Content-Length</code> Header\nThe <code>Content-Location</code> Header\nThe <code>Content-MD5</code> Header\nThe <code>Content-Range</code> Header\nThe <code>Content-Type</code> Header\nThe <code>Cookie</code> Header\nThe <code>Date</code> Header\nThe <code>ETag</code> Header\nThe <code>Expect</code> Header\nThe <code>Expires</code> Header\nThe <code>Forwarded</code> Header\nThe <code>From</code> Header\nThe <code>Host</code> Header\nA header name.\nA header value.\nA list of <code>HeaderValue</code>s.\nA collection of HTTP Headers.\nThe <code>If-Match</code> Header\nThe <code>If-Modified-Since</code> Header\nThe <code>If-None-Match</code> Header\nThe <code>If-Range</code> Header\nThe <code>If-Unmodified-Since</code> Header\nAn owning iterator over the entries of <code>Headers</code>.\nIterator over the headers.\nReturned iterator over header values which this type may …\nIterator over the headers.\nThe <code>Last-Modified</code> Header\nThe <code>Location</code> Header\nThe <code>Max-Forwards</code> Header\nIterator over the headers.\nThe <code>Origin</code> Header\nThe <code>Pragma</code> Header\nThe <code>Proxy-Authenticate</code> Header\nThe <code>Proxy-Authorization</code> Header\nThe <code>Proxy-Connection</code> Header\nThe <code>Referer</code> Header\nThe <code>Retry-After</code> Header\nThe <code>Server</code> Header\nThe <code>Server</code> Header\nThe <code>Set-Cookie</code> Header\nThe <code>SourceMap</code> Header\nThe <code>Te</code> Header\nThe <code>Timing-Allow-Origin</code> Header\nThe <code>Traceparent</code> Header\nThe <code>Trailer</code> Header\nThe <code>Transfer-Encoding</code> Header\nA trait for objects which can be converted or resolved to …\nThe <code>Upgrade</code> Header\nThe <code>User-Agent</code> Header\nThe <code>Vary</code> Header\nThe <code>Via</code> Header\nIterator over the header values.\nThe <code>Warning</code> Header\nThe <code>WWW-Authenticate</code> Header\nMove all values from <code>other</code> into <code>self</code>, leaving <code>other</code> empty.\nAppend a header to the headers.\nReturns the header name as a <code>&amp;str</code>.\nGet the header value as a <code>&amp;str</code>\nReturns <code>true</code> if there is a value corresponding to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>HeaderName</code> from a Vec of ASCII bytes.\nCreate a new <code>HeaderValue</code> from a Vec of ASCII bytes.\nConverts a vector of bytes to a <code>HeaderName</code> without …\nConverts a vector of bytes to a <code>HeaderValue</code> without …\nCreate a new <code>HeaderName</code>.\nCreate a new <code>HeaderValue</code>.\nCreate a new <code>HeaderName</code> from an ASCII string.\nReturns a reference or a value depending on the type of …\nGet a reference to a header.\nReturns a mutable reference or a value depending on the …\nGet a mutable reference to a header.\nReturns a reference to the value corresponding to the …\nReturns a reference to the value corresponding to the …\nInsert a header into the headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a iterator of references over the remaining items.\nAn iterator visiting all header values in arbitrary order.\nAn iterator visiting all header pairs in arbitrary order.\nAn iterator visiting all header pairs in arbitrary order, …\nReturns the last <code>HeaderValue</code>.\nAn iterator visiting all header names in arbitrary order.\nRemove a header.\nConverts this object to an iterator of resolved …\nAn iterator visiting all header values in arbitrary order.\nContent-Type for matching anything.\nContent-Type for byte streams.\nContent-Type for CSS.\nContent-Type for forms.\nContent-Type for HTML.\nContent-Type for ICO icons.\nContent-Type for JavaScript.\nContent-Type for JPEG images.\nContent-Type for JSON.\nContent-Type for multipart forms.\nAn IANA media type.\nContent-Type for Plain text.\nContent-Type for PNG images.\nA parameter name.\nA parameter value.\nContent-Type for Server Sent Events.\nContent-Type for SVG.\nContent-Type for webassembly.\nContent-Type for XML.\nGet the name as a <code>&amp;str</code>\nGet the value as a <code>&amp;str</code>\nAccess the Mime’s <code>type</code> value.\nAccess the Mime’s <code>essence</code> value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuess the mime type from a file extension\nCreate a new <code>HeaderName</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a reference to a param.\nRemove a param from the set. Returns the <code>ParamValue</code> if it …\nSniff the mime type from a byte slice.\nAccess the Mime’s <code>subtype</code> value.\nThe date and time at which the message originated.\nHTTP <code>Expect</code> header\nContains the address of the page making the request.\nIndicate how long the user agent should wait before making …\nLinks to a file that maps transformed source to the …\nSets the header.\nInsert a <code>HeaderName</code> + <code>HeaderValue</code> pair into a <code>Headers</code> …\nSets the header.\nSets the header.\nSets the header.\nReturns the amount of time elapsed from an earlier point …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from headers.\nCreate an instance of <code>Expect</code> from a <code>Headers</code> instance.\nCreate a new instance from headers.\nCreate a new instance from headers.\nCreate a new instance from headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the url.\nGet the url.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nCreate a new instance.\nCreate a new instance of <code>Expect</code>.\nCreate a new instance of <code>Referer</code> header.\nCreate a new instance from a <code>Duration</code>.\nCreate a new instance of <code>SourceMap</code> header.\nCreate a new instance from a <code>SystemTime</code> instant.\nCreate a new instance with the date set to now.\nSet the url.\nSet the url.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nA rust representation of the forwarded header.\nAdds a <code>for</code> section to this header\nInsert a header that represents this Forwarded.\nReturns the <code>by</code> field of this header\nReturns the <code>for</code> field of this header\nReturns the argument unchanged.\nParse a borrowed Forwarded from the Forwarded header, …\nAttempts to parse a Forwarded from headers (or a request or\nParse a borrowed Forwarded from the historical …\nReturns the <code>host</code> field of this header\nCalls <code>U::from(self)</code>.\nTransform a borrowed Forwarded into an owned Forwarded. …\nBuilds a new empty Forwarded\nparse a &amp;str into a borrowed Forwarded\nReturns the <code>proto</code> field of this header\nSets the <code>by</code> field of this header\nSets the <code>host</code> field of this header\nSets the <code>proto</code> field of this header\nBuilds a Forwarded header as a String.\nSet source <code>blob:</code>\nBuild a <code>Content-Security-Policy</code> header.\nSet to “origin-when-cross-origin”\nSet source <code>data:</code>\nSet to <code>deny</code>\nSet source <code>filesystem:</code>\nSet the frameguard level.\nSet source <code>https:</code>\nSet source <code>mediastream:</code>\nSet to “no-referrer”\nSet to “no-referrer-when-downgrade” the default\nSet source <code>&#39;none&#39;</code>\nSet to “origin”\nSet the Referrer-Policy level\nDefine <code>report-to</code> directive value\nDefine <code>endpoints</code> for <code>report-to</code> directive value\nSet source <code>&#39;self&#39;</code>\nSet to <code>sameorigin</code>\nSet to “same-origin”\nDefine source value\nSet source <code>&#39;src&#39;</code>\nSet to “strict-origin-when-cross-origin”\nSet source <code>&#39;strict-dynamic&#39;</code>\nSet to “strict-origin”\nSpecify origins that are allowed to see values via the …\nSet source <code>&#39;unsafe-eval&#39;</code>\nSet source <code>&#39;unsafe-inline&#39;</code>\nSet to “unsafe-url”\nSet source <code>*</code>\nSets the <code>Content-Security-Policy</code> (CSP) HTTP header to …\nInsert a <code>HeaderName</code> + <code>HeaderValue</code> pair into a <code>Headers</code> …\nDefines the Content-Security-Policy <code>base-uri</code> directive\nDefines the Content-Security-Policy <code>block-all-mixed-content</code>…\nDefines the Content-Security-Policy <code>connect-src</code> directive\nApply a set of default protections.\nSets the Content-Security-Policy default to “script-src …\nDefines the Content-Security-Policy <code>default-src</code> directive\nDisable browsers’ DNS prefetching by setting the …\nDefines the Content-Security-Policy <code>font-src</code> directive\nDefines the Content-Security-Policy <code>form-action</code> directive\nDefines the Content-Security-Policy <code>frame-ancestors</code> …\nDefines the Content-Security-Policy <code>frame-src</code> directive\nMitigates clickjacking attacks by setting the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an instance of <code>AllowOrigin</code> from a <code>Headers</code> instance.\nSets the <code>Strict-Transport-Security</code> header to keep your …\nDefines the Content-Security-Policy <code>img-src</code> directive\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all server timings.\nAn iterator visiting all server timings.\nDefines the Content-Security-Policy <code>media-src</code> directive\nGet the <code>HeaderName</code>.\nCreate a new instance.\nCreate a new instance of <code>AllowOrigin</code>.\nPrevent browsers from trying to guess (“sniff”) the …\nDefines the Content-Security-Policy <code>object-src</code> directive\nDefines the Content-Security-Policy <code>plugin-types</code> directive\nRemoves the <code>X-Powered-By</code> header to make it slightly harder …\nAppend an origin to the list of origins.\nMitigates referrer leakage by controlling the referer[sic] …\nChange the header to <code>Content-Security-Policy-Report-Only</code>\nDefines the Content-Security-Policy <code>report-to</code> directive\nDefines the Content-Security-Policy <code>report-uri</code> directive\nDefines the Content-Security-Policy <code>require-sri-for</code> …\nDefines the Content-Security-Policy <code>sandbox</code> directive\nDefines the Content-Security-Policy <code>script-src</code> directive\nSet the wildcard directive.\nDefines the Content-Security-Policy <code>style-src</code> directive\nDefines the Content-Security-Policy …\nGet the <code>HeaderValue</code>.\nReturns <code>true</code> if a wildcard directive was set.\nDefines the Content-Security-Policy <code>worker-src</code> directive\nSets the <code>X-XSS-Protection</code> header to prevent reflected XSS …\nList the set of methods supported by a resource.\nList the set of methods supported by a resource.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nList the set of methods supported by a resource.\nA borrowing iterator over entries in <code>Allow</code>.\nA lending iterator over entries in <code>Allow</code>.\nSets the <code>Allow</code> header.\nReturns <code>true</code> if the header contains the <code>Method</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from headers.\nPush a method into the set of methods.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all server entries.\nGet the <code>HeaderName</code>.\nCreate a new instance of <code>Allow</code>.\nGet the <code>HeaderValue</code>.\nAn individual entry into <code>ServerTiming</code>.\nMetrics and descriptions for the given request-response …\nExtract and apply Trace-Context headers.\nAdd the traceparent header to the http headers\nGenerate a child of the current TraceContext and return it.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate and return TraceContext object based on <code>traceparent</code> …\nReturn the id of the TraceContext.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the <code>HeaderName</code>.\nGenerate a new TraceContext object without a parent.\nReturn the id of the parent TraceContext.\nReturns true if the trace is sampled\nMetrics and descriptions for the given request-response …\nChange sampled flag\nReturn the trace id of the TraceContext.\nGet the <code>HeaderValue</code>.\nReturn the version of the TraceContext spec used.\nA borrowing iterator over entries in <code>ServerTiming</code>.\nA lending iterator over entries in <code>ServerTiming</code>.\nA mutable iterator over entries in <code>ServerTiming</code>.\nAn individual entry into <code>ServerTiming</code>.\nMetrics and descriptions for the given request-response …\nSets the <code>Server-Timing</code> header.\nThe timing description.\nThe timing duration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new instance from headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all server timings.\nAn iterator visiting all server timings.\nThe timing name.\nGet the <code>HeaderName</code>.\nCreate a new instance of <code>Metric</code>.\nCreate a new instance of <code>ServerTiming</code>.\nPush an entry into the list of entries.\nGet the <code>HeaderValue</code>.\nThe receiving half of a channel to send trailers.\nThe sending half of a channel to send trailers.\nA collection of trailing HTTP headers.\nAppend a header to the headers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a reference to a header.\nGet a mutable reference to a header.\nInsert a header into the headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all header pairs in arbitrary order.\nAn iterator visiting all header pairs in arbitrary order, …\nAn iterator visiting all header names in arbitrary order.\nCreate a new instance of <code>Trailers</code>.\nRemove a header.\nSend a <code>Trailer</code>.\nAn iterator visiting all header values in arbitrary order.\nThe Brotli encoding.\nSend a series of chunks.\nThe Deflate encoding.\nAvailable compression algorithms.\nA proposed <code>Encoding</code> in <code>AcceptEncoding</code>.\nThe Gzip encoding.\nNo encoding.\nClient header advertising the transfer encodings the user …\nThe form of encoding used to safely transfer the payload …\nThe Zstd encoding.\nSets the <code>Accept-Encoding</code> header.\nSets the <code>Content-Encoding</code> header.\nAccess the encoding kind.\nGet the proposed encoding.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an instance of <code>TE</code> from a <code>Headers</code> instance.\nCreate a new instance from headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting all entries.\nAn iterator visiting all entries.\nGet the <code>HeaderName</code>.\nGet the <code>HeaderName</code>.\nDetermine the most suitable <code>Transfer-Encoding</code> encoding.\nCreate a new instance of <code>TE</code>.\nCreate a new instance of <code>CacheControl</code>.\nCreate a new instance of <code>EncodingProposal</code>.\nPush a directive into the list of entries.\nSet the wildcard directive.\nSort the header directives by weight.\nGet the <code>HeaderValue</code>.\nGet the <code>HeaderValue</code>.\nGet the weight of the proposal.\nReturns <code>true</code> if a wildcard directive was passed.\nAn upgraded HTTP connection.\nThe receiving half of a channel to send an upgraded …\nThe sending half of a channel to send an upgraded …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of <code>Connection</code>.\nSend a <code>Connection</code>.\nA DNS domain name, as ‘.’ dot-separated labels. …\nThe host name of an URL.\nAn IPv4 address. <code>Url::host_str</code> returns the serialization …\nAn IPv6 address. <code>Url::host_str</code> returns the serialization …\nNo value.\nA globally unique identifier\nOpaque identifier for URLs that have file or other schemes\nThe origin of an URL\nErrors that can occur during parsing.\nFull configuration for the URL parser.\nExposes methods to manipulate the path of an URL that is …\nIndicates a position within a URL based on its components.\nSome value of type <code>T</code>.\nNon-fatal syntax violations that can occur during parsing.\nConsists of the URL’s scheme, host and port\nA parsed URL record.\nImplementation detail of <code>Url::query_pairs_mut</code>. Typically …\n…\nChange the base URL\nRemove all segments in the path, leaving the minimal …\nOverride the character encoding of query strings. This is …\nAppend each segment from the given iterator at the end of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn whether this origin is a (scheme, host, port) tuple …\nCreates a new opaque origin that is only equal to itself.\nParse a host: either an IPv6 address in [] square …\nParse an URL string with the configuration so far.\nRemove the last segment of this URL’s path.\nRemove the last segment of this URL’s path if it is …\nAppend the given segment at the end of this URL’s path.\nCall the provided function or closure for a non-fatal …\nReturn a copy of <code>self</code> that owns an allocated <code>String</code> but …\n…")