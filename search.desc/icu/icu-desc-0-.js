searchState.loadedDescShard("icu", 0, "<code>icu</code> is the main meta-crate of the <code>ICU4X</code> project.\nThis is a calendar that encompasses all formattable …\nConvenient type for selecting the kind of AnyCalendar to …\nTypes that contain a calendar\nA <code>Buddhist</code> calendar\nThe kind of a <code>Buddhist</code> calendar\nA calendar implementation\nThe calendar being wrapped\nA list of error outcomes for various operations in this …\nA <code>Chinese</code> calendar\nThe kind of a <code>Chinese</code> calendar\nA <code>Coptic</code> calendar\nThe kind of a <code>Coptic</code> calendar\nA <code>Dangi</code> calendar\nThe kind of a <code>Dangi</code> calendar\nAn error originating inside of the data provider.\nAn error originating inside of the data provider.\nA date for a given calendar.\nThe internal type used to represent dates\nA date+time for a given calendar.\nA list of error outcomes for various operations in this …\nAn <code>Ethiopian</code> calendar\nThe kind of an <code>Ethiopian</code> calendar, with Amete Mihret era\nThe kind of an <code>Ethiopian</code> calendar, with Amete Alem era\nThe Gregorian Calendar\nA <code>Gregorian</code> calendar\nThe kind of a <code>Gregorian</code> calendar\nA <code>Hebrew</code> calendar\nThe kind of a <code>Hebrew</code> calendar\nAn <code>Indian</code> calendar\nThe kind of a <code>Indian</code> calendar\nAn <code>IslamicCivil</code> calendar\nThe kind of an <code>IslamicCivil</code> calendar\nAn <code>IslamicObservational</code> calendar\nThe kind of an <code>IslamicObservational</code> calendar\nAn <code>IslamicTabular</code> calendar\nThe kind of an <code>IslamicTabular</code> calendar\nAn <code>IslamicUmmAlQura</code> calendar\nThe kind of an <code>IslamicUmmAlQura</code> calendar\nThe ISO Calendar\nAn <code>Iso</code> calendar\nThe kind of an <code>Iso</code> calendar\nA <code>Japanese</code> calendar\nThe kind of a <code>Japanese</code> calendar\nA <code>JapaneseExtended</code> calendar\nThe kind of a <code>JapaneseExtended</code> calendar\nAn operation required a calendar but a calendar was not …\nAn operation required a calendar but a calendar was not …\nMissing required input field for formatting\nMissing required input field for formatting\nOut of range\nOut of range\nAn input overflowed its range.\nAn input overflowed its range.\nAn input could not be parsed.\nAn input could not be parsed.\nA <code>Persian</code> calendar\nThe kind of a <code>Persian</code> calendar\nThis exists as a wrapper around <code>&amp;&#39;a T</code> so that <code>Date&lt;&amp;&#39;a C&gt;</code> …\nA <code>Roc</code> calendar\nThe kind of a <code>Roc</code> calendar\nA representation of a time in hours, minutes, seconds, and …\nAn input underflowed its range.\nAn input underflowed its range.\nNo support for a given calendar in AnyCalendar\nNo support for a given calendar in AnyCalendar\nUnknown era\nUnknown era\nUnknown month code for a given calendar\nUnknown month code for a given calendar\nModule for working with multiple calendars at once\nThe <code>AnyCalendarKind</code> corresponding to this calendar, if one …\nConvert to a BCP-47 string\nConvert to a BCP-47 <code>Value</code>\nObtain the inner calendar\nThis module contains types and implementations for the …\nGet a reference to the contained calendar\nGet a reference to the contained calendar wrapper\nThis module contains types and implementations for the …\nGiven an AnyCalendar date, convert that date to another …\nGiven an AnyCalendar datetime, convert that date to …\nThis module contains types and implementations for the …\nThis module contains types and implementations for the …\nThe date\nConstruct a date from era/month codes and fields\nConstruct a date from era/month codes and fields\nConstruct the date from an ISO date\nObtain an ISO date from this date\nThe calendar-specific day-of-month represented by <code>date</code>\nGets the day input.\nThe calendar-specific day-of-month represented by <code>self</code>\nGets the day input.\nThe calendar-specific day-of-month represented by <code>date</code>\nThe calendar-specific day-of-month represented by <code>date</code>\nThe calendar-specific day-of-month represented by <code>date</code>\nThe day of the week for this date\nCalculate the day of the week and return it\nInformation of the day of the year\nGets information on the position of the day within the …\nThe calendar-specific day-of-month represented by <code>self</code>\nGets information on the position of the day within the …\nInformation of the day of the year\nInformation of the day of the year\nCount the number of days in a given month, specified by …\nThe number of days in the month of this date\nCount the number of days in a given year, specified by …\nThe number of days in the year of this date\nObtain a name for the calendar for debug printing\nThis module contains types and implementations for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert minute count since 00:00:00 on Jan 1st, 1970 to …\nConstruct a date from raw values for a given calendar. …\nConstruct from a BCP-47 byte string\nConstruct from a BCP-47 string\nConstruct from a BCP-47 <code>Value</code>\nExtract the calendar component from a <code>Locale</code>\nThis module contains types and implementations for the …\nThis module contains types and implementations for the …\nGets the hour input.\n0-based hour.\nThis module contains types and implementations for the …\nGet the inner date implementation. Should not be called …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalculate if a date is in a leap year\nReturns whether <code>self</code> is in a calendar-specific leap year\nThe calendar-specific check if <code>date</code> is in a leap year\nThis module contains types and implementations for the …\nThis module contains types and implementations for the ISO …\nGets the weekday input.\nGets the weekday input.\nThis module contains types and implementations for the …\nThis module contains types and implementations for the …\nThe <code>AnyCalendarKind</code> corresponding to the calendar this …\nConstructs an ISO datetime representing the UNIX epoch on …\nConstruct a new <code>Time</code> representing midnight (00:00.000)\nGets the minute input.\n0-based minute.\nMinute count representation of calendars starting from …\nThe calendar-specific month represented by <code>date</code>\nThe calendar-specific month represented by <code>self</code>\nGets the month input.\nGets the month input.\nThe calendar-specific month represented by <code>date</code>\nThe calendar-specific month represented by <code>date</code>\nThe calendar-specific month represented by <code>date</code>\nCount the number of months in a given year, specified by …\nThe number of months in the year of this date\nGets the fractional second input.\nFractional second\nConstruct a <code>DateTime</code> for a given <code>Date</code> and <code>Time</code>\nConstructs an AnyCalendar for a given calendar kind from …\nConstruct a new ISO Calendar\nConstruct a new <code>Time</code>, without validating that all …\nConstructs an AnyCalendar for a given calendar kind from …\nConstruct a date from an ISO date and some calendar …\nConstruct a DateTime from an ISO datetime and some …\nThis module contains types and implementations for the …\n🚧 [Unstable] Data provider struct definitions for this …\nThis module contains types and implementations for the …\nGets the second input.\n0-based second.\nThe time\nType-erase the date, converting it to a date for …\nType-erase the date, converting it to a date for …\nConvert the Date to a date in a different calendar\nConvert the DateTime to a DateTime in a different calendar\nConvert the Date to an ISO Date\nConvert the DateTime to an ISO DateTime\nConstruct a new <code>Time</code>, whilst validating that all …\nConstruct a new Buddhist Date.\nConstruct a new Buddhist datetime from integers.\nConstruct a new Chinese date from a <code>year</code>, <code>month</code>, and <code>day</code>. …\nConstruct a new Chinese datetime from integers using the …\nConstruct new Coptic Date.\nConstruct a new Coptic datetime from integers.\nConstruct a new Dangi date from a <code>year</code>, <code>month</code>, and <code>day</code>. …\nConstruct a new Dangi DateTime from integers. See …\nConstruct new Ethiopian Date.\nConstruct a new Ethiopian datetime from integers.\nA version of <code>Self::new_for_locale</code> that uses custom data …\nA version of <code>Self::new_for_locale</code> that uses custom data …\nA version of <code>Self::new_for_locale</code> that uses custom data …\nConstruct a date from from era/month codes and fields, and …\nConstruct a datetime from from era/month codes and fields, …\nConstruct a new Gregorian Date.\nConstruct a new Gregorian datetime from integers.\nConstruct new Hebrew Date.\nConstruct new Hebrew Date given a calendar.\nConstruct a new Hebrew datetime from integers.\nConstruct new Hebrew DateTime given a calendar.\nConstruct new Indian Date, with year provided in the Śaka …\nConstruct a new Indian datetime from integers, with year …\nConstruct new Civil Islamic Date.\nConstruct a new Civil Islamic datetime from integers.\nConstruct new Tabular Islamic Date.\nConstruct a new Tabular Islamic datetime from integers.\nConstruct a new ISO date from integers.\nConstruct a new ISO datetime from integers.\nConstruct a new Japanese Date.\nConstruct a new Japanese datetime from integers.\nConstruct a new Japanese Date with all eras.\nConstruct a new Japanese datetime from integers with all …\nConstruct new Julian Date.\nConstruct a new Julian datetime from integers.\nConstruct new Islamic Observational Date.\nConstruct a new Islamic Observational datetime from …\nConstruct new Persian Date.\nConstruct a new Persian datetime from integers.\nConstruct a new Republic of China calendar Date.\nConstruct a new Republic of China calendar datetime from …\nConstruct new Islamic Umm al-Qura Date.\nConstruct a new Islamic Umm al-Qura datetime from integers.\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by a …\nThis module contains various types used by <code>icu_calendar</code> …\nConstructs an ISO date representing the UNIX epoch on …\nCreate an error when an <code>AnyCalendarKind</code> is expected but …\nFunctions for week-of-month and week-of-year arithmetic.\nThe week of the month containing this date.\nThe week of the year containing this date.\nWrap the calendar type in <code>Arc&lt;T&gt;</code>\nWrap the calendar type in <code>Arc&lt;T&gt;</code>\nWrap the calendar type in <code>Rc&lt;T&gt;</code>\nWrap the calendar type in <code>Rc&lt;T&gt;</code>\nThe calendar-specific year represented by <code>date</code>\nGets the era and year input.\nThe calendar-specific year represented by <code>self</code>\nGets the era and year input.\nThe calendar-specific year represented by <code>date</code>\nThe calendar-specific year represented by <code>date</code>\nThe calendar-specific year represented by <code>date</code>\nThe name of the field\nThe name of the field\nThe maximum value\nThe minimum value\nThe name of the field\nThe name of the field\nThe maximum value\nThe minimum value\nThis is a calendar that encompasses all formattable …\nConvenient type for selecting the kind of AnyCalendar to …\nThe inner date type for <code>AnyCalendar</code>\nA <code>Buddhist</code> calendar\nA date for a <code>Buddhist</code> calendar\nThe kind of a <code>Buddhist</code> calendar\nA <code>Chinese</code> calendar\nA date for a <code>Chinese</code> calendar\nThe kind of a <code>Chinese</code> calendar\nA <code>Coptic</code> calendar\nA date for a <code>Coptic</code> calendar\nThe kind of a <code>Coptic</code> calendar\nA <code>Dangi</code> calendar\nA date for a <code>Dangi</code> calendar\nThe kind of a <code>Dangi</code> calendar\nAn <code>Ethiopian</code> calendar\nA date for an <code>Ethiopian</code> calendar\nThe kind of an <code>Ethiopian</code> calendar, with Amete Mihret era\nThe kind of an <code>Ethiopian</code> calendar, with Amete Alem era\nA <code>Gregorian</code> calendar\nA date for a <code>Gregorian</code> calendar\nThe kind of a <code>Gregorian</code> calendar\nA <code>Hebrew</code> calendar\nA date for a <code>Hebrew</code> calendar\nThe kind of a <code>Hebrew</code> calendar\nAn <code>Indian</code> calendar\nA date for an <code>Indian</code> calendar\nThe kind of a <code>Indian</code> calendar\nTrait for calendars that may be converted to <code>AnyCalendar</code>\nAn <code>IslamicCivil</code> calendar\nA date for an <code>IslamicCivil</code> calendar\nThe kind of an <code>IslamicCivil</code> calendar\nAn <code>IslamicObservational</code> calendar\nA date for an <code>IslamicObservational</code> calendar\nThe kind of an <code>IslamicObservational</code> calendar\nAn <code>IslamicTabular</code> calendar\nA date for an <code>IslamicTabular</code> calendar\nThe kind of an <code>IslamicTabular</code> calendar\nAn <code>IslamicUmmAlQura</code> calendar\nA date for an <code>IslamicUmmAlQura</code> calendar\nThe kind of an <code>IslamicUmmAlQura</code> calendar\nAn <code>Iso</code> calendar\nA date for an <code>Iso</code> calendar\nThe kind of an <code>Iso</code> calendar\nA <code>Japanese</code> calendar\nA date for a <code>Japanese</code> calendar\nThe kind of a <code>Japanese</code> calendar\nA <code>JapaneseExtended</code> calendar\nA date for a <code>JapaneseExtended</code> calendar\nThe kind of a <code>JapaneseExtended</code> calendar\nA <code>Persian</code> calendar\nA date for a <code>Persian</code> calendar\nThe kind of a <code>Persian</code> calendar\nA <code>Roc</code> calendar\nA date for a <code>Roc</code> calendar\nThe kind of a <code>Roc</code> calendar\nConvert a date for this calendar into an <code>AnyDateInner</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvert this calendar into an <code>AnyCalendar</code>, moving it\nConvert this calendar into an <code>AnyCalendar</code>, cloning it\nThe Thai Solar Buddhist Calendar\nThe calendar-specific day-of-month represented by <code>date</code>\nInformation of the day of the year\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe calendar-specific month represented by <code>date</code>\nThe calendar-specific year represented by <code>date</code>\nThe Chinese Calendar\nThe inner date type used for representing <code>Date</code>s of <code>Chinese</code>…\nThe <code>AnyCalendarKind</code> corresponding to this calendar\nThe calendar-specific day-of-month represented by <code>date</code>\nInformation of the day of the year\nObtain a name for the calendar for debug printing\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe calendar-specific month code represented by <code>date</code>; …\nCreates a new <code>Chinese</code> with some precomputed calendrical …\nConstruct a new <code>Chinese</code> without any precomputed …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by a …\nThe calendar-specific year represented by <code>date</code>\nThe Coptic Calendar\nThe inner date type used for representing <code>Date</code>s of <code>Coptic</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Dangi Calendar\nThe inner date type used for representing <code>Date</code>s of <code>Dangi</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Dangi</code> with some precomputed calendrical …\nConstruct a new <code>Dangi</code> without any precomputed calendrical …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by a …\nUse an era scheme of the Anno Mundi era, anchored at the …\nUse an era scheme of pre- and post- Incarnation eras, …\nThe Ethiopian Calendar\nThe inner date type used for representing <code>Date</code>s of …\nWhich era style the ethiopian calendar uses\nReturns whether this has the Amete Alem era\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new Ethiopian Calendar for the Amete Mihret …\nConstruct a new Ethiopian Calendar with a value specifying …\nSet whether or not this uses the Amete Alem era scheme\nThe Gregorian Calendar\nThe inner date type used for representing <code>Date</code>s of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe Civil Hebrew Calendar\nThe inner date type used for representing <code>Date</code>s of <code>Hebrew</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new <code>Hebrew</code>\nConstruct a new <code>Hebrew</code>\nThe Indian National Calendar (aka the Saka calendar)\nThe inner date type used for representing <code>Date</code>s of <code>Indian</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new Indian Calendar\nCivil / Arithmetical Islamic Calendar (Used for …\nThe inner date type used for representing <code>Date</code>s of …\nThe inner date type used for representing <code>Date</code>s of …\nIslamic Observational Calendar (Default)\nA Tabular version of the Arithmetical Islamic Calendar\nThe inner date type used for representing <code>Date</code>s of …\nUmm al-Qura Hijri Calendar (Used in Saudi Arabia)\nThe inner date type used for representing <code>Date</code>s of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>IslamicObservational</code> with some compiled data …\nConstruct a new <code>IslamicCivil</code>\nCreates a new <code>IslamicUmmAlQura</code> with some compiled data …\nConstruct a new <code>IslamicTabular</code>\nConstruct a new <code>IslamicObservational</code> without any …\nConstruct a new <code>IslamicCivil</code> (deprecated: we will not add …\nConstruct a new <code>IslamicUmmAlQura</code> without any precomputed …\nConstruct a new <code>IslamicTabular</code> (deprecated: we will not …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nThe ISO Calendar\nThe inner date type used for representing <code>Date</code>s of <code>Iso</code>. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe Japanese Calendar (with modern eras only)\nThe inner date type used for representing <code>Date</code>s of <code>Japanese</code>…\nThe Japanese Calendar (with historical eras)\nThe calendar-specific day-of-month represented by <code>date</code>\nThe calendar-specific day-of-month represented by <code>date</code>\nInformation of the day of the year\nInformation of the day of the year\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe calendar-specific month represented by <code>date</code>\nThe calendar-specific month represented by <code>date</code>\nCreates a new <code>Japanese</code> using only modern eras (post-meiji) …\nCreates a new <code>Japanese</code> from using all eras (including …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nThe calendar-specific year represented by <code>date</code>\nThe calendar-specific year represented by <code>date</code>\nThe Julian Calendar\nThe inner date type used for representing <code>Date</code>s of <code>Julian</code>. …\nThe calendar-specific day-of-month represented by <code>date</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe calendar-specific month represented by <code>date</code>\nConstruct a new Julian Calendar\nThe calendar-specific year represented by <code>date</code> Julian has …\nThe Persian Calendar\nThe inner date type used for representing <code>Date</code>s of <code>Persian</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new Persian Calendar\nBaked data\nMarker type for <code>ChineseBasedCacheV1</code>: “…\nMarker type for <code>ChineseBasedCacheV1</code>: “…\nThe date at which an era started\n<code>ULE</code> type for <code>EraStartDate</code>\nMarker type for <code>IslamicCacheV1</code>: “…\nMarker type for <code>IslamicCacheV1</code>: “…\nA data structure containing the necessary era data for …\nMarker type for <code>JapaneseErasV1</code>: “calendar/japanese@1”\nMarker type for <code>JapaneseErasV1</code>: “calendar/japanext@1”\nAn ICU4X mapping to a subset of CLDR weekData. See …\nMarker type for <code>WeekDataV1</code>: “datetime/week_data@1”\nAn ICU4X mapping to a subset of CLDR weekData. See …\nMarker type for <code>WeekDataV2</code>: “datetime/week_data@2”\nBitset representing weekdays.\n🚧 [Unstable] Data provider struct definitions for …\nReturns whether the set contains the day.\nA map from era start dates to their era codes\nThe day the era started in\nThe first day of a week.\nThe first day of a week.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n🚧 [Unstable] Data provider struct definitions for …\nFor a given week, the minimum number of that week’s days …\nFor a given week, the minimum number of that week’s days …\nThe month the era started in\nCreates a new WeekdaySet using the provided days.\nBitset representing weekdays that are part of the ‘…\nThe year the era started in\nCached/precompiled data for a certain range of years for a …\nMarker type for <code>ChineseBasedCacheV1</code>: “…\nMarker type for <code>ChineseBasedCacheV1</code>: “…\nThe struct containing compiled ChineseData\nA list of precomputed data for each year beginning with …\nThe extended year corresponding to the first data entry …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCached/precompiled data for a certain range of years for a …\nMarker type for <code>IslamicCacheV1</code>: “…\nMarker type for <code>IslamicCacheV1</code>: “…\nThe struct containing compiled Islamic YearInfo\nA list of precomputed data for each year beginning with …\nThe extended year corresponding to the first data entry …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Republic of China (ROC) Calendar\nThe inner date type used for representing <code>Date</code>s of <code>Roc</code>. …\nThe <code>AnyCalendarKind</code> corresponding to this calendar\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA day number in a month. Usually 1-based.\nA day of week in month. 1-based.\nA struct containing various details about the position of …\nThe era of a particular date\nRepresentation of a formattable month.\nRepresentation of a formattable year.\nAn ISO-8601 hour component, for use with ISO calendars.\nAn ISO-8601 minute component, for use with ISO calendars.\nAn ISO-8601 second component, for use with ISO calendars.\nA weekday in a 7-day week, according to ISO-8601.\nRepresentation of a month in a year\nA fractional second component, stored as nanoseconds.\nA representation of a time in hours, minutes, seconds, and …\nA week number in a month. Usually 1-based.\nA week number in a year. Usually 1-based.\nThe month code, used to distinguish months during leap …\nThe year in the current cycle for cyclic calendars …\nThe current day of the year, 1-based.\nThe number of days in the previous year.\nThe number of days in a year.\nThe era containing the year.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from an ISO-8601 weekday number to an <code>IsoWeekday</code> …\nReturns an option which is <code>Some</code> containing the non-month …\n0-based hour.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0-based minute.\nFractional second\nConstruct a new Year given an era and number\nThe next year.\nGets the numeric value for this component.\nGets the numeric value for this component.\nGets the numeric value for this component.\nGets the numeric value for this component.\nThe year number in the current era (usually 1-based).\nThe month number in this given year. For calendars with …\nGet the month number and whether or not it is leap from …\nThe previous year.\nThe related ISO year. This is normally the ISO (proleptic …\n0-based second.\nAttempts to add two values. Returns <code>Some</code> if the sum is …\nAttempts to add two values. Returns <code>Some</code> if the sum is …\nAttempts to add two values. Returns <code>Some</code> if the sum is …\nAttempts to add two values. Returns <code>Some</code> if the sum is …\nAttempts to subtract two values. Returns <code>Some</code> if the …\nAttempts to subtract two values. Returns <code>Some</code> if the …\nAttempts to subtract two values. Returns <code>Some</code> if the …\nAttempts to subtract two values. Returns <code>Some</code> if the …\nCreates a new value at 0.\nCreates a new value at 0.\nCreates a new value at 0.\nCreates a new value at 0.\nA week that’s assigned to the current year/month. e.g. …\nMinimum number of days in a month unit required for using …\nA week that is assigned to the next year/month. e.g. …\nA week that is assigned to previous year/month. e.g. …\nThe year or month that a calendar assigns a week to …\nCalculator for week-of-month and week-of-year based on …\nThe week number assigned to a given week according to a …\nThe first day of a week.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFor a given week, the minimum number of that week’s days …\nCreates a new <code>WeekCalculator</code> from compiled data.\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new_unstable</code> that uses custom data …\nA version of <code>Self::try_new_unstable</code> that uses custom data …\nThe month/year that this week is in, relative to the …\nWeek of month/year. 1 based.\nReturns the week of month according to a calendar with …\nReturns the week of year according to the weekday and …\nWeekdays that are part of the ‘weekend’, for calendar …\nThe set of weekend days, if available\nA wrapper around <code>CaseMapper</code> that can produce case mapping …\nA struct with the ability to convert characters and …\nAn object that accepts characters and/or strings to be …\nA wrapper around <code>CaseMapper</code> that can compute titlecasing …\nAdds all simple case mappings and the full case folding …\nAdds all simple case mappings and the full case folding …\nAdd a character to the set\nAdd a string to the set\nFinds all characters and strings which may casemap to <code>s</code> as …\n✨ <em>Enabled with the <code>compiled_data</code> Cargo feature.</em>\nCase-folds the characters in the given string as a …\nCase-folds the characters in the given string as a String. …\nCase-folds the characters in the given string as a …\nCase-folds the characters in the given string as a String, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the full lowercase mapping of the given string as …\nReturns the full lowercase mapping of the given string as …\nCreates a <code>CaseMapper</code> using compiled data.\nA constructor which creates a <code>CaseMapCloser</code> using compiled …\nA constructor which creates a <code>TitlecaseMapper</code> using …\nA constructor which creates a <code>CaseMapCloser</code> from an …\nA constructor which creates a <code>TitlecaseMapper</code> from an …\n🚧 [Unstable] Data provider struct definitions for this …\nReturns the simple case folding of the given char. For …\nReturns the simple case folding of the given char, using …\nReturns the lowercase mapping of the given <code>char</code>. This …\nReturns the titlecase mapping of the given <code>char</code>. This …\nReturns the uppercase mapping of the given <code>char</code>. This …\nTitlecasing-specific try_new_with_mapper_unstable\nReturns the full titlecase mapping of the given string as …\nReturns the full titlecase mapping of the given string as …\nReturns the full titlecase mapping of the given string as …\nReturns the full titlecase mapping of the given string as …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nConstruct this object to wrap an existing CaseMapper (or a …\nConstruct this object to wrap an existing CaseMapper (or a …\nA version of <code>Self::new_with_mapper</code> that uses custom data …\nA version of <code>Self::new_with_mapper</code> that uses custom data …\nA version of <code>Self::new_with_mapper</code> that uses custom data …\nA version of <code>Self::new_with_mapper</code> that uses custom data …\nReturns the full uppercase mapping of the given string as …\nReturns the full uppercase mapping of the given string as …\nBaked data\nReverse case folding data. Maps from multi-character …\nMarker type for <code>CaseMapUnfoldV1</code>: “props/casemap_unfold@1…\nThis type contains all of the casemapping data\nMarker type for <code>CaseMapV1</code>: “props/casemap@1”\nThe primary per-codepoint casefolding data\nThis module contains various types for the header part of …\nThis is the main module pertaining to casemapping …\nExceptions to the case mapping data\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe actual map. Maps from strings to a list of codepoints, …\nCase mapping data\n“Above” accents with combining class 230\nCase mapping data associated with a single code point\nA subset of case mapping data associated with a single …\nPacked casemappingdata type\nThe case of a Unicode character\nThis code point is cased. We store the extra data, its …\nThe dot type of a Unicode character. This indicates how …\nThis code point is an exception. Provides the case type of …\nLowercase letter\nNormal characters with combining class 0\nData that is stored in CaseMapData when it is <em>not</em> an …\nOther accent characters\nSoft-dotted characters with combining class 0\nTitlecase letter\nThis code point is uncased, and has the following extra …\nUppercase letter\nThe “dot type”\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether this is default-ignoreable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe rest of the case mapping data\nWhether or not the type is case-sensitive\nA bunch of bits associated with each exception.\nThe bitflags on an exception header.\nPacked slot presence marker\nThe dot type of the character\nThe dot type of the character\nWhether or not the slots are double-width.\nWhether or not the slots are double-width.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf the character has conditional case folding\nIf the character has conditional case folding\nIf the character has conditional special casing\nIf the character has conditional special casing\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the character is case sensitive\nIf the character is case sensitive\nThe delta stored in the <code>Delta</code> slot is negative\nThe delta stored in the <code>Delta</code> slot is negative\nThere is no simple casefolding, even if there is a simple …\nThere is no simple casefolding, even if there is a simple …\nThis represents case mapping exceptions that can’t be …\nA decoded <code>Exception</code> type, with all of the data parsed out …\nA type representing the wire format of <code>Exception</code>. The data …\n<code>VarULE</code> type for <code>Exception</code>. See <code>Exception</code> for documentation.\nThe various bit based exception data associated with this.\nThe various bit-based data associated with this exception\nCase folding\nClosure mappings\nFormat : …\nExtract all the data out into a structured form\nConvert to a wire-format encodeable (VarULE-encodeable) …\nThe list of exceptions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe four full-mappings strings, indexed by MappingKind u8 …\nObtain the exception at index <code>idx</code>. Will return a default …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLowercase mapping\nThe simple casefold delta. Its sign is stored in …\nWhich slots are present in <code>data</code>.\nTitlecase mapping\nUppercase mapping\nAdjust the string to the first relevant character before …\nWhere to start casing the string.\nLowercase the rest of the string (“spoNgEBoB” -&gt; “…\nStart titlecasing immediately, even if the character is …\nA wrapper around <code>CaseMapper</code> that can compute titlecasing …\nVarious options for controlling titlecasing\nAdjust the string to the first cased character before …\nHow to handle the rest of the string once the beginning of …\nPreserve the casing of the rest of the string (“spoNgEBoB…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether to start casing at the beginning of the string or …\nHow to handle the rest of the string once the head of the …\nWhat to do about characters whose comparison level can be …\nWhether second level compares the last accent difference …\nTreatment of case. (Large and small kana differences are …\nWhether to distinguish case in sorting, even for sorting …\nCompares strings according to culturally-relevant ordering.\nA list of error outcomes for various operations in this …\nOptions settable by the user of the API.\nCharacters classified as spaces, punctuation, symbols, or …\nAn error originating inside of the data provider.\nAn error originating inside of the data provider.\nA list of error outcomes for various operations in this …\nCompare the NFD form by code point order as the quinary …\nLower case first.\nRequested data was found but was malformed\nRequested data was found but was malformed\nWhat characters get shifted to the quaternary level with …\nKeep the characters whose level can be varied on the …\nThe requested collation does not exist\nThe requested collation does not exist\nWhen set to <code>On</code>, any sequence of decimal digits is sorted …\nUse the default tertiary weights.\nLeave off the case level option.  Case differences will be …\nLeave off the numeric option.  Decimal digits will be …\nLeave off the backward second level option. Diacritics in …\nTurn on the case level option, thereby making a separate …\nTurn on numeric sorting for any sequence of decimal …\nTurn on backward second level ordering so that the second …\nCompare only on the level of base letters. This level …\nCharacters classified as spaces or punctuation are shifted.\nCompare also on the quaternary level. For Japanese, Higana …\nThe resolved (actually used) options used by the collator.\nCompare also on the secondary level, which corresponds to …\nShift the characters at or below <code>MaxVariable</code> to the …\nCharacters classified as spaces are shifted.\nThe collation strength that indicates how many levels to …\nCharacters classified as spaces, punctuation, or symbols …\nCompare also on the tertiary level. By default, if the …\nUpper case first.\nUser-specified alternate handling collation option.\nResolved alternate handling collation option.\nUser-specified backward second level collation option.\nResolved backward second level collation option.\nUser-specified case first collation option.\nResolved case first collation option.\nUser-specified case level collation option.\nResolved case level collation option.\nCompare guaranteed well-formed UTF-8 slices.\nCompare potentially ill-formed UTF-16 slices. Unpaired …\nCompare potentially well-formed UTF-8 slices. Ill-formed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvenience conversion for copying the options from an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUser-specified max variable collation option.\nResolved max variable collation option.\nCreate a new <code>CollatorOptions</code> with the defaults.\nUser-specified numeric collation option.\nResolved numeric collation option.\n🚧 [Unstable] Data provider struct definitions for this …\nThe resolved options showing how the default options, the …\nUser-specified strength collation option.\nResolved strength collation option.\nCreates a collator for the given locale and options from …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nBaked data\nThe main collation data either for the root or for a …\nMarker type for <code>CollationDataV1</code>: “collator/data@1”\nSecondary weights for the start of the Combining …\nMarker type for <code>CollationDiacriticsV1</code>: “collator/dia@1”\n<code>CollationElement32</code>s for the Hangul Jamo Unicode Block\nMarker type for <code>CollationJamoV1</code>: “collator/jamo@1”\nEach non-alias collation that the data provider knows …\nMarker type for <code>CollationMetadataV1</code>: “collator/meta@1”\nScript reordering data\nMarker type for <code>CollationReorderingV1</code>: “collator/reord@1…\nSpecial primaries associated with the root collation\nMarker type for <code>CollationSpecialPrimariesV1</code>: “…\nSee the mask constants in the <code>impl</code> block for the bit …\n<code>CollationElement32</code>s used in expansions and as defaults for …\n<code>CollationElement32</code>s (as <code>u32</code>s) for the Hangul Jamo Unicode …\n<code>CollationElement</code>s used in expansions and offset CE32s …\nDefaults and tries for prefix and contraction matching\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe primaries corresponding to <code>MaxVariable</code> character …\nLimit of last reordered range. 0 if no reordering or no …\nThe high 8 bits of the numeric primary\nPrimary-weight ranges for script reordering, to be used by …\n256-byte table for reordering permutation of primary lead …\nSecondary weights for characters starting from U+0300 up …\nMapping from <code>char</code> to <code>CollationElement32</code> (represented as …\nThis module provides a data structure for a …\nThis module provides necessary functionality for highly …\nThis module provides functionality for querying of sets of …\nThis module provides a data structure for an …\nThis struct represents a de-serialized <code>Char16Trie</code> that was …\nThis struct represents an iterator over a <code>Char16Trie</code>.\nThe input unit(s) continued a matching string and there is …\nThe input unit(s) continued a matching string and there is …\nThe input unit(s) did not continue a matching string. Once …\nThe input unit(s) matched a string but there is no value …\nAn enum representing the return value from a lookup in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new <code>Char16TrieIterator</code> backed by borrowed data …\nReturns a new <code>Char16Trie</code> with ownership of the provided …\nReturns a new <code>Char16TrieIterator</code> backed by borrowed data …\nTraverses the trie from the current state for this input …\nTraverses the trie from the current state for this input …\nTraverses the trie from the current state for this input …\nA membership wrapper for <code>CodePointInversionList</code>.\nA builder for <code>CodePointInversionList</code>.\nCustom Errors for <code>CodePointInversionList</code>.\n<code>VarULE</code> type for <code>CodePointInversionList</code>. See …\nCustom Errors for <code>CodePointInversionList</code>.\nA CodePointInversionList was constructed containing an …\nA CodePointInversionList was constructed containing an …\nA CodePointInversionList was constructed with an invalid …\nA CodePointInversionList was constructed with an invalid …\nAdd the code point value to the …\nAdd the character to the <code>CodePointInversionListBuilder</code>\nAdd the range of characters to the …\nAdd the range of characters, represented as u32, to the …\nSame as <code>Self::add_range32</code>.\nAdd the <code>CodePointInversionList</code> reference to the …\nSame as <code>Self::add32</code>.\nReturns <code>CodePointInversionList</code> spanning entire Unicode …\nReturns <code>CodePointInversionList</code> spanning BMP range\nReturns a <code>CodePointInversionList</code> and consumes the …\nComputes the complement of the builder, inverting the …\nSee <code>Self::complement_char</code>\nComplements the character in the builder, adding it if not …\nComplements the range in the builder, adding any elements …\nSee <code>Self::complement_range</code>\nComplements the set in the builder, adding any elements in …\nChecks to see the query is in the <code>CodePointInversionList</code>\nChecks to see the unsigned int is in the …\nChecks to see if the range is in the <code>CodePointInversionList</code>\nCheck if the calling <code>CodePointInversionList</code> contains all …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an owned inversion list representing the current …\nReturns a specific range contained in this …\nReturns the number of ranges contained in this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempts to convert this list into a fully-owned one. …\nReturns whether the build is empty.\nReturns whether or not the <code>CodePointInversionList</code> is empty\nYields an <code>Iterator</code> going through the character set in the …\nYields an <code>Iterator</code> returning the ranges of the code points …\nYields an <code>Iterator</code> returning the ranges of the code points …\nReturns empty <code>CodePointInversionListBuilder</code>\nSee <code>Self::remove_char</code>\nRemove the character from the <code>CodePointInversionListBuilder</code>\nRemove the range of characters from the …\nSee <code>Self::remove_range</code>\nRemove the <code>CodePointInversionList</code> from the …\nSee <code>Self::retain_char</code>\nRetain the specified character in the …\nRetain the range of characters located within the …\nSee <code>Self::retain_range</code>\nRetain the elements in the specified set within the …\nReturns the number of elements of the …\nReturns the end of the initial substring where the …\nReturns the start of the trailing substring (starting from …\nReturns a new, fully-owned <code>CodePointInversionList</code> by …\nReturns a new <code>CodePointInversionList</code> from an inversion list\nReturns a new <code>CodePointInversionList</code> by borrowing an …\nA data structure providing a concrete implementation of a …\nCustom Errors for <code>CodePointInversionListAndStringList</code>.\n<code>VarULE</code> type for <code>CodePointInversionListAndStringList</code>. See …\nCustom Errors for <code>CodePointInversionListAndStringList</code>.\nAn invalid CodePointInversionList was constructed\nAn invalid CodePointInversionList was constructed\nA string in the string list had an invalid length\nA string in the string list had an invalid length\nTwo strings in the string list compare to each other …\nTwo strings in the string list compare to each other …\nA string in the string list appears more than once\nA string in the string list appears more than once\nAccess the underlying <code>CodePointInversionList</code>.\nExamples\nExamples\nExamples\nAccess the VarULE type behind the unsized <code>cp_inv_list</code> field\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn true if this set contains multi-code point strings …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the number of elements in this set (its …\nAccess the VarULE type behind the unsized <code>str_list</code> field\nAccess the contained strings.\nReturns a new <code>CodePointInversionListAndStringList</code> from …\nRepresents a range of consecutive code points sharing the …\nA custom <code>Iterator</code> type specifically for a code point trie …\nThis struct represents a de-serialized <code>CodePointTrie</code> that …\nA custom error type for <code>CodePointTrie</code>.\nThis struct contains the fixed-length header fields of a …\n<code>CodePointTrie</code> must be constructed from data vector with at …\n<code>CodePointTrie</code> must be constructed from data vector with at …\nA custom error type for <code>CodePointTrie</code>.\nRepresents the “fast” type code point tries for the …\nCould not construct <code>CodePointTrie</code> from deserialized values\nCould not construct <code>CodePointTrie</code> from deserialized values\nRepresents the “small” type code point tries for the …\nThe type of trie represents whether the trie has an …\nA trait representing the values stored in the data array …\nLast-resort fallback value to return if we cannot read …\nInternal data null block offset, not shifted. Set to an …\nReturns the value used as an error value for this trie\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value that is associated with <code>char</code> in this …\nReturns the value that is associated with <code>code_point</code> in …\nReturns the value that is associated with <code>code_point</code> for …\nReturns a reference to the ULE of the value that is …\nReturns a <code>CodePointMapRange</code> struct which represents a …\nYields an <code>Iterator</code> returning the ranges of the code points …\nReturns a <code>CodePointInversionList</code> for the code points that …\nThe code point of the start of the last range of the trie. …\nOffset for the null block in the “index-3” table of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nYields an <code>Iterator</code> returning ranges of consecutive code …\nYields an <code>Iterator</code> returning the ranges of the code points …\nThe value stored in the trie that represents a null value …\nSample data for <code>CodePointTrie</code> that returns the code point…\nRange of code points from start to end (inclusive).\nA version of the <code>high_start</code> value that is right-shifted 12 …\nA method for converting back to a <code>u32</code> that can roundtrip …\nUtilities for reading CodePointTrie data from TOML files.\nThe enum value representing the type of trie, where trie …\nMaps the <code>CodePointTrie</code> into one that returns a different …\nA parsing function that is primarily motivated by …\nConverts the <code>CodePointTrie</code> into one that returns another …\nReturns a new <code>CodePointTrie</code> backed by borrowed data for …\nTrie value associated with this range.\nReason for inability to deserialize values.\nReason for inability to deserialize values.\nReturn a <code>CodePointTrie</code> that returns the Unicode plane …\nData slice from a <code>CodePointTrie</code> TOML.\nA Serde-compatible struct for reading serialized …\nA serialized <code>CodePointTrie</code> data array 16-bit values.\nA serialized <code>CodePointTrie</code> data array 32-bit values.\nA serialized <code>CodePointTrie</code> data array 8-bit values.\nGets the <code>data</code> slice.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the <code>index</code> slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA calendar that can be found in CLDR\nThe Unicode BCP 47 identifier for the calendar’s skeleton\nAn error originating inside of the data provider.\nAn error originating inside of the data provider.\n<code>DateFormatter</code> is a formatter capable of formatting dates …\nThe data marker for loading length-patterns for this …\nThe data marker for loading symbols for this calendar.\nA list of error outcomes for various operations in this …\n<code>DateTimeFormatter</code> is a formatter capable of formatting …\nA bag of options which, together with <code>Locale</code>, defines how …\nAn error originating from <code>DateTimeInput</code>.\nAn error originating from <code>DateTimeInput</code>.\nThe same field occurs multiple times in a pattern or was …\nThe same field occurs multiple times in a pattern or was …\nA list of error outcomes for various operations in this …\nThe FixedDecimalFormatter is not loaded\nThe FixedDecimalFormatter is not loaded\nAn error originating from FixedDecimalFormatter\nAn error originating from FixedDecimalFormatter\nAn error originating from the <code>Write</code> trait.\nAn error originating from the <code>Write</code> trait.\n<code>FormattedDateTime</code> is a intermediate structure which can be …\n<code>FormattedTimeZone</code> is a intermediate structure which can be …\n<code>FormattedTimeZone</code> is a intermediate structure which can be …\nBag of lengths for date and time.\nAn error from mixing calendar types in <code>DateTimeFormatter</code>\nAn error from mixing calendar types in <code>DateTimeFormatter</code>\nAn error from mixing calendar types in <code>DateTimeFormatter</code>\nMissing date symbols\nMissing date symbols\nAn error originating from a missing field in datetime …\nAn error originating from a missing field in datetime …\nAn error originating from a missing month symbol in the …\nAn error originating from a missing month symbol in the …\nThe names for the given field are not loaded\nThe names for the given field are not loaded\nordinal_rules must be set for …\nordinal_rules must be set for …\nMissing time symbols\nMissing time symbols\nAn error originating from a missing weekday symbol in the …\nAn error originating from a missing weekday symbol in the …\nAn error originating from parsing a pattern.\nAn error originating from parsing a pattern.\nAn error originating from <code>PluralRules</code>.\nAn error originating from <code>PluralRules</code>.\n<code>TimeFormatter</code> is a structure of the <code>icu::datetime</code> …\n<code>TypedDateFormatter</code> is a formatter capable of formatting …\n<code>TypedDateTimeFormatter</code> is a formatter capable of formatting\nThe composition of <code>TypedDateTimeFormatter</code> and …\nAn error originating from an unsupported field in a …\nAn error originating from an unsupported field in a …\nAn unsupported field with a field length.\nAn unsupported field with a field length.\nAn error due to there being no patterns for the given …\nAn error due to there being no patterns for the given …\n<code>ZonedDateTimeFormatter</code> is a formatter capable of formatting\nThe calendar kind of the input object (date being …\nEnums representing the fields in a date pattern, including …\nTakes a <code>DateInput</code> implementer and returns an instance of a …\nTakes a <code>DateTimeInput</code> implementer and returns an instance …\nTakes a <code>DateTimeInput</code> and a <code>TimeZoneInput</code> and returns an …\nTakes a <code>IsoTimeInput</code> implementer and returns an instance …\nTakes a <code>DateTimeInput</code> implementer and returns an instance …\nTakes a <code>DateTimeInput</code> implementer and returns an instance …\nTakes a <code>DateTimeInput</code> and a <code>TimeZoneInput</code> and returns an …\nTakes a <code>DateInput</code> implementer and returns it formatted as …\nTakes a <code>DateTimeInput</code> implementer and returns it formatted …\nTakes a <code>DateTimeInput</code> and a <code>TimeZoneInput</code> and returns it …\nTakes a <code>IsoTimeInput</code> implementer and returns it formatted …\nTakes a <code>DateTimeInput</code> implementer and returns it formatted …\nTakes a <code>DateTimeInput</code> implementer and returns it formatted …\nTakes a <code>DateTimeInput</code> and a <code>TimeZoneInput</code> and returns it …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA collection of utilities for representing and working …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if a given BCP 47 identifier is allowed to be used …\n<code>DateTimeFormatterOptions</code> is a bag of options which, …\n🚧 [Unstable] Data provider struct definitions for this …\nThe calendar kind of the target object (formatter).\nA formatter specifically for the time zone.\nConstructor that takes a <code>TimeFormatter</code> and <code>DateFormatter</code> …\nConstructor that takes a <code>TimeFormatter</code> and …\nConstruct a new <code>DateTimeFormatter</code> from compiled data.\nConstructor that takes a selected <code>DataLocale</code> and a list of …\nConstructor that takes a selected locale, then collects all\nConstructor that takes a selected locale and a list of …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nConstruct a new <code>DateFormatter</code> from compiled data.\nConstructor that takes a selected locale and a list of …\nConstructor that takes a selected locale and a list of …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nA version of <code>Self::try_new_with_length</code> that uses custom …\nWrite time zone with no fallback.\nFormat time zone with fallbacks.\nAbbreviated (spellout) format.\nField symbol for the AM, PM day period.  (Does not include …\nField symbol for calendar year (numeric).\nField symbol for cyclic year; used in calendars where …\nAn enum for the possible symbols of a day field in a date …\nDay number relative to a time period longer than a week …\nField symbol for day of month (numeric).\nField symbol for the day of week occurrence relative to …\nField symbol for day of year (numeric).\nAn enum for the possible symbols of a day period field in …\nName of a period within a day.\n<code>ULE</code> type for DayPeriod\n<code>ULE</code> type for Day\nEra name.\nAn error relating to the field for a date pattern field as …\nA field within a date pattern string, also referred to as …\nAn enum representing the length of a field within a date …\nVarious numeric overrides for datetime patterns as found …\nA field symbol for a date formatting pattern. Field …\n<code>ULE</code> type for <code>FieldSymbol</code>\n<code>ULE</code> type for <code>Field</code>\nA fixed size format for numeric-only fields that is at …\nField symbol for month number or name in a pattern that …\nField symbol for day of week (text format only).\nField symbol for fractional second (numeric).\nField symbol for numeric hour [0-11].\nField symbol for numeric hour [1-12].\nField symbol for numeric hour [0-23].\nField symbol for numeric hour [1-24].\n<code>hanidays</code>\n<code>hanidec</code>\n<code>hebr</code>\nAn enum for the possible symbols of an hour field in a …\nHour number within a day, possibly with day period.\n<code>ULE</code> type for Hour\nInvalid character for a field symbol.\nInvalid field symbol index.\nThe length of the field string within the pattern is …\nAn error originating inside of the data provider.\n<code>jpnyear</code>\nAn error relating to the length of a field within a date …\nField symbol for day of week; numeric formats produce a …\nField symbol for the generic non-location format of a time …\nField symbol for either the ISO8601 basic format or …\nField symbol for the specific non-location format of a …\nField symbol for milliseconds in day (numeric).\nMinute number within an hour.\nField symbol for the modified Julian day (numeric).\nAn enum for the possible symbols of a month field in a …\nMonth number or month name.\n<code>ULE</code> type for Month\nNarrow / Long / Full  (spellout) format.\nField symbol for the am, pm, noon, midnight day period.\nFieldLength::One (numeric), but overridden with a …\nTypical style is 1-2 digits. For numeric-only fields.\nField symbol for related ISO; some calendars which use …\n<code>romanlow</code>\nAn enum for the possible symbols of a second field in a …\nSeconds number within a minute, including fractional …\nField symbol for second (numeric).\n<code>ULE</code> type for Second\nMeaning is field-dependent, for patterns that are 6 …\nField symbol for a “stand-alone” month number or name.\nField symbol for stand-alone local day of week number/name.\nAn error relating to the field symbol for a date pattern …\nAn enum for the possible symbols of a time zone field in a …\nTime zone as a name, a zone ID, or a ISO 8601 numerical …\n<code>ULE</code> type for TimeZone\nTypical style is 2 digits. For numeric-only fields.\nUnknown field symbol.\nField symbol for the localized GMT format of a time zone.\nField symbol for any of: the time zone id, time zone …\nField symbol for either the ISO8601 basic format or …\nField symbol for any of: the ISO8601 basic format with …\nAn enum for the possible symbols of a week field in a date …\nWeek number or week name.\nField symbol for year in “week of year”.\nField symbol for week of month (numeric).\nField symbol for week of year (numeric).\n<code>ULE</code> type for Week\nAn enum for the possible symbols of a weekday field in a …\nDay number or day name relative to a week.\n<code>ULE</code> type for Weekday\nWide / Long / Full  (spellout) format.\nAn enum for the possible symbols of a year field in a date …\nYear number or year name.\n<code>ULE</code> type for Year\nConvert this to the corresponding string code\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe length of the <code>Field</code>, which in conjunction with the …\nThe field symbol for the <code>Field</code>, which corresponds to the …\nThe calendar this date relates to\nRepresentation of a formattable calendar date. Supports …\nA combination of a formattable calendar date and ISO time.\nRepresentation of a time of day according to ISO-8601 …\nA formattable calendar date and ISO time that takes the …\nRepresentation of a formattable time zone.\nGets the kind of calendar this date is for, if associated …\nA reference to this instance’s <code>DateTimeInput</code>.\nGets the day input.\nThe day of week in this month.\nGets information on the position of the day within the …\nTODO(#487): Implement flexible day periods.\nThe GMT offset in Nanoseconds.\nGets the hour input.\nGets the weekday input.\nThe metazone identifier.\nGets the minute input.\nGets the month input.\nGets the nanosecond input.\nGets the second input.\nThe IANA time-zone identifier.\nConverts date to ISO\nThe week of the month.\nThe week number of the year and the corresponding year.\nGets the era and year input.\nThe time variant (e.g. “daylight”, “standard”)\nA bag of options which, together with <code>Locale</code>, defines how …\nBag of lengths for date and time.\nLength is a model of encoding information on how to format …\nA structure to represent the set of lengths in which the …\nRepresents different lengths a <code>DateTimeInput</code> implementer …\nFull length, usually with weekday name.\nFull length, with spelled out time zone name.\nLong length, with wide month name.\nFull length, usually with short time-zone code.\nMedium length.\nFull length, usually with seconds.\nShort length, usually with numeric month.\nFull length, usually without seconds.\nRepresents different length lengths a <code>DateTimeInput</code> …\nConfigure the date part of the datetime.\nConstructs a Bag with medium date and time options\nConstructs a <code>Bag</code> with all fields set to <code>None</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a <code>Bag</code> given a <code>date</code> field (<code>time</code> set to <code>None</code>)\nConstructs a Bag given a date and time field\nConstructs a <code>Bag</code> given a <code>time</code> field (<code>date</code> set to <code>None</code>)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigure the time part of the datetime.\nBaked data\nData structs for calendar-specific symbols and patterns.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nData provider structs for time zones.\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nPattern data for dates. 📏 This item has a stack size of …\nSymbol data for the months, weekdays, and eras needed to …\nString data for the name, abbreviation, and narrow form of …\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nMarker type for <code>DateLengthsV1</code>: “…\nMarker type for <code>DateSymbolsV1</code>: “…\nPattern data for times. 📏 This item has a stack size of …\nMarker type for <code>TimeLengthsV1</code>: “datetime/timelengths@1”\nSymbol data for the day periods needed to format a time.\nMarker type for <code>TimeSymbolsV1</code>: “datetime/timesymbols@1”\nSymbol data for era abbreviations.\nDate pattern data, broken down by pattern length.\nFormatting symbols for <code>DayPeriod</code>.\nSymbol data for day periods.\nSymbol data for eras.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPatterns used to combine date and time length patterns …\nFormatting symbols for <code>Month</code>.\nSymbol data for months.\nSymbol data for era names.\nSymbol data for era narrow forms.\nData structs for date / time patterns that store data …\nBy default a locale will prefer one hour cycle type over …\nThese patterns are common uses of time formatting, broken …\nThese patterns are common uses of time formatting, broken …\nFormatting symbols for <code>Weekday</code>.\nSymbol data for weekdays.\nThe struct containing the symbol data for DayPeriod that …\nSymbol data for the “format” style formatting of …\nSymbol data for the “stand-alone” style formatting of …\nLocale data for DayPeriod corresponding to the symbols.\nAbbreviated length symbol for “stand-alone” style …\nAbbreviated length symbol for “format” style symbol …\nDay period for AM (before noon).\nThe symbol data for “format” style symbols.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDay period for midnight, in locales that support it.\nNarrow length symbol for “stand-alone” style symbol …\nNarrow length symbol for “format” style symbol for …\nDay period for noon, in locales that support it.\nDay period for PM (after noon).\nShort length symbol for “stand-alone” style symbol for …\nShort length symbol for “format” style symbol for …\nThe symbol data for “stand-alone” style symbols.\nWide length symbol for “stand-alone” style symbol for …\nWide length symbol for “format” style symbol for …\nThe struct containing the symbol data for Month that …\nSymbol data for the “format” style formatting of Month.\nA calendar with an arbitrary number of months, potentially …\nTwelve symbols for a solar calendar\nSymbol data for the “stand-alone” style formatting of …\nLocale data for Month corresponding to the symbols.\nAbbreviated length symbol for “stand-alone” style …\nAbbreviated length symbol for “format” style symbol …\nThe symbol data for “format” style symbols.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the symbol for the given month code\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNarrow length symbol for “stand-alone” style symbol …\nNarrow length symbol for “format” style symbol for …\nShort length symbol for “stand-alone” style symbol for …\nShort length symbol for “format” style symbol for …\nThe symbol data for “stand-alone” style symbols.\nWide length symbol for “stand-alone” style symbol for …\nWide length symbol for “format” style symbol for …\nData struct for generic date/time patterns, broken down by …\nA general purpose pattern representation. Used for …\nData struct for date/time patterns broken down by pattern …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA full length date/time pattern.\nA full length glue pattern of other formatted elements.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA long length date/time pattern.\nA long length glue pattern of other formatted elements.\nA medium length date/time pattern.\nA medium length glue pattern of other formatted elements.\nA short length date/time pattern.\nA short length glue pattern of other formatted elements.\nThe struct containing the symbol data for Weekday that …\nSymbol data for the “format” style formatting of …\nSymbol data for the “stand-alone” style formatting of …\nLocale data for Weekday corresponding to the symbols.\nAbbreviated length symbol for “stand-alone” style …\nAbbreviated length symbol for “format” style symbol …\nThe symbol data for “format” style symbols.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNarrow length symbol for “stand-alone” style symbol …\nNarrow length symbol for “format” style symbol for …\nShort length symbol for “stand-alone” style symbol for …\nShort length symbol for “format” style symbol for …\nThe symbol data for “stand-alone” style symbols.\nWide length symbol for “stand-alone” style symbol for …\nWide length symbol for “format” style symbol for …\nAn ICU4X mapping to the CLDR timeZoneNames exemplar cities.\nMarker type for <code>ExemplarCitiesV1</code>: “…\nAn ICU4X mapping to the long-form generic metazone names. …\nMarker type for <code>MetazoneGenericNamesLongV1</code>: “…\nAn ICU4X mapping to the short-form generic metazone names. …\nMarker type for <code>MetazoneGenericNamesShortV1</code>: “…\nMetazone ID in a compact format\nAn ICU4X mapping to the long-form specific metazone names. …\nMarker type for <code>MetazoneSpecificNamesLongV1</code>: “…\nAn ICU4X mapping to the short-form specific metazone names.\nMarker type for <code>MetazoneSpecificNamesShortV1</code>: “…\nTimeZone ID in BCP47 format\nAn ICU4X mapping to the CLDR timeZoneNames format strings. …\nMarker type for <code>TimeZoneFormatsV1</code>: “time_zone/formats@1…\nThe default mapping between metazone id and localized …\nThe default mapping between metazone id and localized …\nThe default mapping between metazone id and localized …\nThe default mapping between metazone id and localized …\nThe format string to fall back to if data is unavailable.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe localized GMT-offset format.\nThe fallback of GMT-offset.\nThe localized GMT format with no offset.\nThe hour format for displaying GMT offsets.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe override mapping between timezone id and localized …\nThe override mapping between timezone id and localized …\nThe override mapping between timezone id and localized …\nThe override mapping between timezone id and localized …\nThe format string for a region.\nThe format strings for region format variants e.g. …\nISO-8601 Basic Format. Formats zero-offset numerically. …\nISO-8601 Extended Format. Formats zero-offset numerically. …\nAn enum for time zone fallback formats.\nThe ISO 8601 format for time zone format fallback.\nDetermines which ISO-8601 format should be used to format …\nWhether the minutes field should be optional or required …\nWhether the seconds field should be optional or excluded …\nThe localized GMT format for time zone format fallback.\nSeconds are not displayed.\nMinutes are displayed only if they are non-zero.\nSeconds are displayed only if they are non-zero.\nMinutes are always displayed.\n<code>TimeZoneFormatter</code> is available for users who need to …\nA bag of options to define how time zone will be formatted.\nISO-8601 Basic Format. Formats zero-offset with the …\nISO-8601 Extended Format. Formats zero-offset with the …\nThe time zone format fallback option.\nTakes a <code>TimeZoneInput</code> implementer and returns an instance …\nTakes a <code>TimeZoneInput</code> implementer and returns a string …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInclude generic-location format for timezone from compiled …\nInclude generic-non-location-long format for timezone from …\nInclude generic-non-location-short format for timezone …\nInclude ISO-8601 format for timezone. For example, “…\nInclude localized-GMT format for timezone. For example, “…\nInclude specific-non-location-long format for timezone …\nInclude specific-non-location-short format for timezone …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad generic-location format for timezone. For example, “…\nLoad generic-non-location-long format for timezone. For …\nLoad generic-non-location-short format for timezone. For …\nAlias to <code>TimeZoneFormatter::include_iso_8601_format</code>.\nAlias to <code>TimeZoneFormatter::include_localized_gmt_format</code>.\nLoad specific-non-location-long format for timezone. For …\nLoad specific-non-location-short format for timezone. For …\nCreates a new <code>TimeZoneFormatter</code> with a GMT or ISO format …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nAn error originating inside of the data provider.\nAn error originating inside of the data provider.\nA list of error outcomes for various operations in this …\nA list of error outcomes for various operations in this …\nA formatter for <code>FixedDecimal</code>, rendering decimal digits in …\nAn intermediate structure returned by <code>FixedDecimalFormatter</code>…\nFormats a <code>FixedDecimal</code>, returning a <code>FormattedFixedDecimal</code>.\nFormats a <code>FixedDecimal</code>, returning a <code>String</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptions for <code>FixedDecimalFormatter</code>.\n🚧 [Unstable] Data provider struct definitions for this …\nCreates a new <code>FixedDecimalFormatter</code> from compiled data and …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nAlways render grouping separators.\nRender grouping separators according to locale preferences.\nA bag of options defining how numbers will be formatted by …\nConfiguration for how often to render grouping separators.\nRender grouping separators only if there are at least 2 …\nNever render grouping separators.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhen to render grouping separators.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA collection of strings to affix to a decimal number.\nBaked data\nSymbols and metadata required for formatting a <code>FixedDecimal</code>…\nMarker type for <code>DecimalSymbolsV1</code>: “decimal/symbols@1”\nA collection of settings expressing where to put grouping …\nCharacter used to separate the integer and fraction parts …\nDigit characters for the current numbering system. In most …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCharacter used to separate groups in the integer part of …\nSettings used to determine where to place groups in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe minimum number of digits required before the first …\nPrefix and suffix to apply when a negative sign is needed.\nPrefix and suffix to apply when a plus sign is needed.\nString to prepend before the decimal number.\nThe size of the first (lowest-magnitude) group.\nThe size of groups after the first group.\nString to append after the decimal number.\nAn error originating inside of the data provider.\nAn error originating inside of the data provider.\nA list of error outcomes for various operations in this …\nThe <code>Writeable</code> implementation that is returned by …\nA list of error outcomes for various operations in this …\nA formatter that renders sequences of items in an …\nRepresents the style of a list. See the CLDR spec for an …\nThe shortest type of list\nA shorter list\nA typical list\nReturns a <code>Writeable</code> composed of the input <code>Writeable</code>s and …\nReturns a <code>String</code> composed of the input <code>Writeable</code>s and the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Part</code>s used by <code>ListFormatter</code>.\n🚧 [Unstable] Data provider struct definitions for this …\nCreates a new <code>ListFormatter</code> that produces a and-type list …\nA version of <code>Self::try_new_and_with_length</code> that uses …\nA version of <code>Self::try_new_and_with_length</code> that uses …\nA version of <code>Self::try_new_and_with_length</code> that uses …\nCreates a new <code>ListFormatter</code> that produces a or-type list …\nA version of <code>Self::try_new_or_with_length</code> that uses custom …\nA version of <code>Self::try_new_or_with_length</code> that uses custom …\nA version of <code>Self::try_new_or_with_length</code> that uses custom …\nCreates a new <code>ListFormatter</code> that produces a unit-type list …\nA version of <code>Self::try_new_unit_with_length</code> that uses …\nA version of <code>Self::try_new_unit_with_length</code> that uses …\nA version of <code>Self::try_new_unit_with_length</code> that uses …\nThe <code>Part</code> used by <code>FormattedList</code> to mark the part of the …\nThe <code>Part</code> used by <code>FormattedList</code> to mark the part of the …\nMarker type for <code>ListFormatterPatternsV1</code>: “list/and@1”\nBaked data\nA pattern that can behave conditionally on the next …\nSymbols and metadata required for <code>ListFormatter</code>.\nA pattern containing two numeric placeholders (“{0}, and …\nMarker type for <code>ListFormatterPatternsV1</code>: “list/or@1”\nA serde-compatible version of …\nThe special case of a <code>ConditionalListJoinerPattern</code>\nMarker type for <code>ListFormatterPatternsV1</code>: “list/unit@1”\nThe condition on the following element\nThe default pattern\nReturns the represented <code>DFA</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>SerdeDFA</code> from raw bytes. Used internally by …\nConstructs a <code>ListJoinerPattern</code> from raw parts. Used by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeserializes to <code>Option&lt;Self&gt;</code>. Will return <code>None</code> for …\nThe pattern if the condition matches\nAnd optional special case\nDuplicated extension.\nDuplicated extension.\nList of parser errors that can be generated while parsing …\nInvalid extension subtag.\nInvalid extension subtag.\nInvalid language subtag.\nInvalid language subtag.\nInvalid script, region or variant subtag.\nInvalid script, region or variant subtag.\nA core struct representing a …\nA core struct representing a <code>Unicode Locale Identifier</code>.\nResolved ordering between the locale object and the …\nList of parser errors that can be generated while parsing …\nThe result of a subtag iterator comparison operation.\nPotentially remaining subtags after the comparison …\nThe default undefined language “und”. Same as <code>default()</code>…\nThe default undefined locale “und”. Same as <code>default()</code>.\nThis is a best-effort operation that performs all …\nThis is a best-effort operation that performs all …\nInvoke this function if there are no remaining locale …\nUnicode Extensions provide a mechanism to extend the …\nAny extensions present in the locale identifier.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe basic language/script/region components in the locale …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA macro allowing for compile-time construction of valid …\nLanguage subtag of the language identifier.\nA macro allowing for compile-time construction of valid …\nCompare this <code>LanguageIdentifier</code> with a potentially …\nCompare this <code>Locale</code> with a potentially unnormalized BCP-47 …\nRegion subtag of the language identifier.\nScript subtag of the language identifier.\nCompare this <code>LanguageIdentifier</code> with BCP-47 bytes.\nCompare this <code>Locale</code> with BCP-47 bytes.\nCompare this <code>LanguageIdentifier</code> with an iterator of BCP-47 …\nCompare this <code>Locale</code> with an iterator of BCP-47 subtags.\nLanguage Identifier and Locale contains a set of subtags …\nCompare this <code>LanguageIdentifier</code> with another …\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nA constructor which takes a utf8 slice, parses it and …\nA constructor which takes a utf8 slice, parses it and …\nA constructor which takes a utf8 slice which may contain …\nVariant subtags of the language identifier.\nDocumentation on zero-copy deserialization of locale types.\nDefines the type of extension.\nA map of extensions associated with a given <code>Locale</code>.\nAll other extension types.\nPrivate Extension Type marked as <code>x</code>.\nTransform Extension Type marked as <code>t</code>.\nUnicode Extension Type marked as <code>u</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFunction to create a new map of extensions containing …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether there are no extensions present.\nReturns a new empty map of extensions. Same as <code>default()</code>, …\nOther Use Extensions is a list of extensions other than …\nA sequence of any other extensions that are present in the …\nPrivate Use Extensions is a list of extensions intended for\nA representation of the data for a private-use extension, …\nRetains the specified extension types, clearing all others.\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nTransform Extensions provide information on content …\nA representation of the data for a transform extension, …\nUnicode Extensions provide information about user …\nA representation of the data for a Unicode extension, when …\nA list of <code>Other Use Extensions</code> as defined in …\nA single item used in a list of <code>Other</code> extensions.\nA helper function for displaying as a <code>&amp;str</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Subtag</code> from its raw format as returned …\nA constructor which takes a pre-sorted list of <code>Subtag</code>.\nGets the tag character for this extension as a char.\nGets the tag character for this extension as a byte.\nGets the tag character for this extension as a &amp;str.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by …\nCompare with a potentially unnormalized BCP-47 string.\nCompare with BCP-47 bytes.\nA constructor which takes a UTF-8 slice, parses it and …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nSafely creates a <code>Subtag</code> from its raw format as returned by …\nA list of <code>Private Use Extensions</code> as defined in …\nA single item used in a list of <code>Private</code> extensions.\nA helper function for displaying as a <code>&amp;str</code>.\nEmpties the <code>Private</code> list.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Subtag</code> from its raw format as returned …\nA constructor which takes a pre-sorted list of <code>Subtag</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by …\nReturns a new empty list of private-use extensions. Same …\nA constructor which takes a single <code>Subtag</code>.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with BCP-47 bytes.\nA constructor which takes a UTF-8 slice, parses it and …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nSafely creates a <code>Subtag</code> from its raw format as returned by …\nA list of <code>Key</code>-<code>Value</code> pairs representing functional …\nA key used in a list of <code>Fields</code>.\nA list of <code>Unicode BCP47 T Extensions</code> as defined in …\nA value used in a list of <code>Fields</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nEmpties the <code>Fields</code> list.\nClears the transform extension, effectively removing it …\nReturns <code>true</code> if the list contains a <code>Value</code> for the …\nThe key-value pairs present in this locale extension, with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Key</code> from its raw format as returned by …\nReturns a reference to the <code>Value</code> corresponding to the <code>Key</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by …\nReturns <code>true</code> if there are no fields.\nReturns <code>true</code> if there are no tfields and no tlang in the …\nThe <code>LanguageIdentifier</code> specified with this locale …\nReturns a new empty list of key-value pairs. Same as …\nReturns a new empty map of Transform extensions. Same as …\nCompare with a potentially unnormalized BCP-47 string.\nRetains a subset of fields as specified by the predicate …\nSets the specified keyword, returning the old value if it …\nCompare with BCP-47 bytes.\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nA constructor which takes a UTF-8 slice, parses it and …\nA constructor which takes a utf8 slice, parses it and …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nSafely creates a <code>Key</code> from its raw format as returned by …\nAn attribute used in a set of <code>Attributes</code>.\nA set of <code>Attribute</code> elements as defined in …\nA key used in a list of <code>Keywords</code>.\nA list of <code>Key</code>-<code>Value</code> pairs representing functional …\nUnicode Extensions provide information about user …\nA value used in a list of <code>Keywords</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA canonically ordered sequence of single standalone …\nEmpties the <code>Attributes</code> list.\nClears all Unicode extension keywords, leaving Unicode …\nClears all Unicode extension keywords and attributes, …\nReturns <code>true</code> if the list contains a <code>Value</code> for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Attribute</code> from its raw format as …\nUnsafely creates a <code>Key</code> from its raw format as returned by …\nA constructor which takes a pre-sorted list of <code>Attribute</code> …\nReturns a reference to the <code>Value</code> corresponding to the <code>Key</code>.\nReturns a mutable reference to the <code>Value</code> corresponding to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by …\nDeconstructs into a raw format to be consumed by …\nReturns <code>true</code> if there are no keywords.\nReturns <code>true</code> if there list of keywords and attributes is …\nThe key-value pairs present in this locale extension, with …\nReturns a new empty set of attributes. Same as <code>default()</code>, …\nReturns a new empty list of key-value pairs. Same as …\nReturns a new empty map of Unicode extensions. Same as …\nCreate a new list of key-value pairs having exactly one …\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nRemoves the specified keyword, returning the old value if …\nRetains a subset of keywords as specified by the predicate …\nSets the specified keyword, returning the old value if it …\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nCompare this <code>Keywords</code> with BCP-47 bytes.\nCompare this <code>Keywords</code> with an iterator of BCP-47 subtags.\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nA constructor which takes a UTF-8 slice, parses it and …\nA constructor which takes a UTF-8 slice, parses it and …\nA constructor which takes a utf8 slice, parses it and …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nSafely creates a <code>Attribute</code> from its raw format as returned …\nSafely creates a <code>Key</code> from its raw format as returned by …\nConst constructor for when the value contains only a …\nA language subtag (examples: <code>&quot;en&quot;</code>, <code>&quot;csb&quot;</code>, <code>&quot;zh&quot;</code>, <code>&quot;und&quot;</code>, …\nA region subtag (examples: <code>&quot;US&quot;</code>, <code>&quot;CN&quot;</code>, <code>&quot;AR&quot;</code> etc.)\nA script subtag (examples: <code>&quot;Latn&quot;</code>, <code>&quot;Arab&quot;</code>, etc.)\nThe default undefined language “und”. Same as <code>default()</code>…\nA variant subtag (examples: <code>&quot;macos&quot;</code>, <code>&quot;posix&quot;</code>, <code>&quot;1996&quot;</code> etc.)\nA list of variants (examples: <code>[&quot;macos&quot;, &quot;posix&quot;]</code>, etc.)\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nResets the <code>Language</code> subtag to an empty one (equal to <code>&quot;und&quot;</code>…\nEmpties the <code>Variants</code> list.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Language</code> from its raw format as …\nUnsafely creates a <code>Region</code> from its raw format as returned …\nUnsafely creates a <code>Script</code> from its raw format as returned …\nUnsafely creates a <code>Variant</code> from its raw format as returned …\nCreates a new <code>Variants</code> set from a single <code>Variant</code>.\nCreates a new <code>Variants</code> set from a <code>Vec</code>. The caller is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by …\nDeconstructs into a raw format to be consumed by …\nDeconstructs into a raw format to be consumed by …\nDeconstructs into a raw format to be consumed by …\nReturns true if the Region has an alphabetic code.\nTests if the <code>Language</code> subtag is empty (equal to <code>&quot;und&quot;</code>).\nReturns a new empty list of variants. Same as <code>default()</code>, …\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nA constructor which takes a UTF-8 slice, parses it and …\nA constructor which takes a UTF-8 slice, parses it and …\nA constructor which takes a UTF-8 slice, parses it and …\nA constructor which takes a UTF-8 slice, parses it and …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nEquivalent to <code>try_from_bytes(bytes[start..end])</code>, but …\nSafely creates a <code>Language</code> from its raw format as returned …\nSafely creates a <code>Region</code> from its raw format as returned by …\nSafely creates a <code>Script</code> from its raw format as returned by …\nSafely creates a <code>Variant</code> from its raw format as returned …\nAn error originating inside of the data provider.\nAn error originating inside of the data provider.\nRepresents the direction of a script.\nA list of error outcomes for various operations in this …\nThe script is left-to-right.\nImplements the algorithm defined in <em>UTS #35: Annex C, </em>…\nProvides methods to determine the direction of a locale.\nImplements the <em>Add Likely Subtags</em> and <em>Remove Likely Subtags</em>\nA list of error outcomes for various operations in this …\nThe canonicalization operation modified the locale.\nThe script is right-to-left.\nUsed to track the result of a transformation operation …\nThe canonicalization operation did not modify the locale.\nThe canonicalize method potentially updates a passed in …\nTools for locale fallback, enabling arbitrary input …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the script direction of the given locale.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the given locale is left-to-right.\nReturns whether the given locale is right-to-left.\nThe maximize method potentially updates a passed in locale …\nThis returns a new Locale that is the result of running the\nThis returns a new Locale that is the result of running the\nA constructor which creates a <code>LocaleCanonicalizer</code> from …\nCreates a <code>LocaleDirectionality</code> from compiled data.\nCreates a <code>LocaleExpander</code> with compiled data for …\nCreates a <code>LocaleExpander</code> with compiled data for all …\nCreates a <code>LocaleCanonicalizer</code> with a custom <code>LocaleExpander</code> …\nCreates a <code>LocaleDirectionality</code> with a custom <code>LocaleExpander</code>…\n🚧 [Unstable] Data provider struct definitions for this …\nA version of <code>Self::new_extended</code> that uses custom data …\nA version of <code>Self::new_extended</code> that uses custom data …\nA version of <code>Self::new_extended</code> that uses custom data …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new_with_expander</code> that uses custom data …\nA version of <code>Self::new_with_expander</code> that uses custom data …\nA version of <code>Self::new_with_expander</code> that uses custom data …\nA version of <code>Self::new_with_expander</code> that uses custom data …\nCollation-specific fallback rules. Similar to language …\nCollation supplement\nPrioritize the language. This is the default behavior.\nConfiguration settings for a particular fallback operation.\nIteration type for locale fallback operations.\nHint for which subtag to prioritize during fallback.\nWhat additional data is required to load when performing …\nBorrowed version of <code>LocaleFallbacker</code>.\nA <code>LocaleFallbackerBorrowed</code> with an associated …\nPrioritize the region.\nConst-friendly version of <code>Default::default</code>.\nConst version of <code>Default::default</code>.\nAn extension keyword to retain during locale fallback.\nCreates an iterator based on a <code>DataLocale</code>.\nFallback supplement data key to customize fallback rules.\nAssociates a configuration with this fallbacker.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows the current <code>DataLocale</code> under fallback.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStrategy for choosing which subtags to drop during locale …\nCheaply converts a [<code>LocaleFallbackerBorrowed&lt;&#39;static&gt;</code>] …\nPerforms one step of the locale fallback algorithm.\nTakes the current <code>DataLocale</code> under fallback.\nThis alias data is used for locale canonicalization. Each …\nMarker type for <code>AliasesV1</code>: “locid_transform/aliases@1”\nThis alias data is used for locale canonicalization. Each …\nMarker type for <code>AliasesV2</code>: “locid_transform/aliases@2”\nBaked data\nMarker type for <code>LocaleFallbackSupplementV1</code>: “…\n<code>ZZ</code> is the most common region, so it is defaulted for data …\n<code>Latn</code> is the most common script, so it is defaulted for …\nA triplet of strings with a EncodeAsVarULE implementation.\n<code>VarULE</code> type for <code>LanguageStrStrPair</code>. See <code>LanguageStrStrPair</code> …\nThis likely subtags data is used for full coverage of …\nMarker type for <code>LikelySubtagsExtendedV1</code>: “…\nThis likely subtags data is used for the minimize and …\nMarker type for <code>LikelySubtagsForLanguageV1</code>: “…\nThis likely subtags data is used for the minimize and …\nMarker type for <code>LikelySubtagsForScriptRegionV1</code>: “…\nThis likely subtags data is used for the minimize and …\nMarker type for <code>LikelySubtagsV1</code>: “…\nLocale fallback rules derived from likely subtags data.\nMarker type for <code>LocaleFallbackLikelySubtagsV1</code>: “…\nLocale fallback rules derived from CLDR parent locales …\nMarker type for <code>LocaleFallbackParentsV1</code>: “…\nKey-specific supplemental fallback data.\nThis directionality data is used to determine the script …\nMarker type for <code>ScriptDirectionV1</code>: “…\nA pair of strings with a EncodeAsVarULE implementation.\n<code>VarULE</code> type for <code>StrStrPair</code>. See <code>StrStrPair</code> for …\n<code>[region] -&gt; [region]+</code>\n<code>[region] -&gt; [region]+</code>\nAccess the VarULE type behind tuple struct field #0\nAccess the VarULE type behind tuple struct field #1\nAccess the VarULE type behind tuple struct field #1\nAccess the VarULE type behind tuple struct field #2\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap from language to the default region in that language. …\nMap from language to the default script in that language. …\n<code>[langid] -&gt; [langid]</code> This is not a map as it’s searched …\n<code>[langid] -&gt; [langid]</code> This is not a map as it’s searched …\nJust language.\nJust language.\nJust language.\n<code>[language{2}] -&gt; [langid]</code>\n<code>[language{2}] -&gt; [langid]</code>\n<code>[language{3}] -&gt; [langid]</code>\n<code>[language{3}] -&gt; [langid]</code>\nLanguage and region.\nLanguage and region.\nLanguage and region.\nLanguage and script.\nLanguage and script.\nLanguage and script.\n<code>[language(-variant)+\\] -&gt; [langid]</code> This is not a map as it…\n<code>[language, variant(-variant)*] -&gt; [langid]</code> This is not a …\nMap from language-region pairs to a script. Only populated …\nMap from language-script pairs to a region. Only populated …\nScripts in left-to-right direction.\nMap from language identifier to language identifier, …\nAdditional parent locales to supplement the common ones.\nJust region.\nJust region.\nJust region.\n<code>[region{2}] -&gt; [region]</code>\n<code>[region{2}] -&gt; [region]</code>\n<code>[region{3}] -&gt; [region]</code>\n<code>[region{3}] -&gt; [region]</code>\nScripts in right-to-left direction.\n<code>[script] -&gt; [script]</code>\n<code>[script] -&gt; [script]</code>\nJust script.\nJust script.\nJust script.\nScript and region.\nScript and region.\nScript and region.\n<code>sgn-[region] -&gt; [language]</code>\n<code>sgn-[region] -&gt; [language]</code>\n<code>[value{7}] -&gt; [value{7}]</code>\n<code>[value{7}] -&gt; [value{7}]</code>\nUndefined.\nUndefined.\nDefault values for Unicode extension keywords.\n<code>[variant] -&gt; [variant]</code>\n<code>[variant] -&gt; [variant]</code>\nA normalizer for performing composing normalization.\nAn iterator adaptor that turns an <code>Iterator</code> over <code>char</code> into …\nError coming from the data provider\nError coming from the data provider\nA normalizer for performing decomposing normalization.\nAn iterator adaptor that turns an <code>Iterator</code> over <code>char</code> into …\nA list of error outcomes for various operations in this …\nThe data uses a planned but unsupported feature.\nThe data uses a planned but unsupported feature.\nA list of error outcomes for various operations in this …\nData failed manual validation\nData failed manual validation\nPerforms canonical composition (including Hangul) on a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether a string slice is normalized.\nCheck whether a string slice is normalized.\nChecks whether a slice of potentially-invalid UTF-16 is …\nChecks whether a slice of potentially-invalid UTF-16 is …\nCheck if a slice of potentially-invalid UTF-8 is …\nCheck if a slice of potentially-invalid UTF-8 is …\nNFC constructor using compiled data.\nNFD constructor using compiled data.\nNFKC constructor using compiled data.\nNFKD constructor using compiled data.\nNormalize a string slice into a <code>String</code>.\nNormalize a string slice into a <code>String</code>.\nWraps a delegate iterator into a decomposing iterator …\nWraps a delegate iterator into a composing iterator …\nNormalize a string slice into a <code>Write</code> sink.\nNormalize a string slice into a <code>Write</code> sink.\nNormalize a slice of potentially-invalid UTF-16 into a <code>Vec</code>.\nNormalize a slice of potentially-invalid UTF-16 into a <code>Vec</code>.\nNormalize a slice of potentially-invalid UTF-16 into a …\nNormalize a slice of potentially-invalid UTF-16 into a …\nNormalize a slice of potentially-invalid UTF-8 into a …\nNormalize a slice of potentially-invalid UTF-8 into a …\nNormalize a slice of potentially-invalid UTF-8 into a <code>Write</code>…\nNormalize a slice of potentially-invalid UTF-8 into a <code>Write</code>…\nAccess to the Unicode properties or property-based …\n🚧 [Unstable] Data provider struct definitions for this …\nA version of <code>Self::new_nfc</code> that uses custom data provided …\nA version of <code>Self::new_nfc</code> that uses custom data provided …\nA version of <code>Self::new_nfc</code> that uses custom data provided …\nA version of <code>Self::new_nfd</code> that uses custom data provided …\nA version of <code>Self::new_nfd</code> that uses custom data provided …\nA version of <code>Self::new_nfd</code> that uses custom data provided …\nA version of <code>Self::new_nfkc</code> that uses custom data provided …\nA version of <code>Self::new_nfkc</code> that uses custom data provided …\nA version of <code>Self::new_nfkc</code> that uses custom data provided …\nA version of <code>Self::new_nfkd</code> that uses custom data provided …\nA version of <code>Self::new_nfkd</code> that uses custom data provided …\nA version of <code>Self::new_nfkd</code> that uses custom data provided …\nBundles the part of UTS 46 that makes sense to implement …\nLookup of the Canonical_Combining_Class Unicode property.\nThe raw canonical composition operation.\nThe raw (non-recursive) canonical decomposition operation.\nThe outcome of non-recursive canonical decomposition of a …\nThe character is its own canonical decomposition.\nThe character decomposes to two characters.\nThe character decomposes to a single different character.\nPerforms canonical composition (including Hangul) on a …\nPerforms non-recursive canonical decomposition (including …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLook up the canonical combining class for a scalar value\nLook up the canonical combining class for a scalar value …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new <code>CanonicalComposition</code> using compiled data.\nConstruct from compiled data.\nConstruct from compiled data.\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nA version of <code>Self::new</code> that uses custom data provided by a …\nBaked data\nNon-Hangul canonical compositions\nMarker type for <code>CanonicalCompositionsV1</code>: “…\nMarker type for <code>DecompositionDataV1</code>: “normalizer/nfd@1”\nMarker type for <code>DecompositionTablesV1</code>: “…\nMarker type for <code>DecompositionSupplementV1</code>: “…\nMarker type for <code>DecompositionTablesV1</code>: “…\nMain data for NFD\nData that either NFKD or the decomposed form of UTS 46 …\nThe expansion tables for cases where the decomposition isn…\nNon-recursive canonical decompositions that differ from …\nMarker type for <code>NonRecursiveDecompositionSupplementV1</code>: “…\nMarker type for <code>DecompositionSupplementV1</code>: “…\nTrie keys are two-<code>char</code> strings with the second character …\nFlags that indicate how the set of characters whose …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether half-width kana voicing marks decompose into …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe passthrough bounds of NFD/NFC are lowered to this …\nDecompositions that are fully within the BMP\nDecompositions with at least one character outside the BMP\nDecompositions with at least one character outside the BMP\nTrie for NFD decomposition.\nTrie for the decompositions that differ from NFD. Getting …\nTrie for the supplementary non-recursive decompositions\nA mapper that knows how to performs the subsets of UTS 46 …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns an iterator adaptor that turns an <code>Iterator</code> over …\nConstruct with compiled data.\nReturns an iterator adaptor that turns an <code>Iterator</code> over …\nConstruct with provider. A version of <code>Self::new</code> that uses …\nCardinal plural forms express quantities of units such as …\nAn error originating from <code>icu_provider</code>.\nAn error originating from <code>icu_provider</code>.\nA list of error outcomes for various operations in this …\nCLDR “few” plural category. Used in Romanian, Polish, …\nCLDR “many” plural category. Used in Polish, Russian, …\nCLDR “one” plural category. Signifies the singular …\nOrdinal plural forms denote the order of items in a set …\nCLDR “other” plural category, used as a catch-all. …\nThe plural categories are used to format messages with …\n<code>ULE</code> type for PluralCategory\nA full plural operands representation of a number. See …\nA type of a plural rule which can be associated with the …\nA struct which provides an ability to retrieve an …\nA list of error outcomes for various operations in this …\nCLDR “two” plural category. Used in Arabic, Hebrew, …\nCLDR “zero” plural category. Used in Arabic and …\nReturns an ordered iterator over variants of …\nReturns all <code>Plural Categories</code> appropriate for a <code>PluralRules</code>…\nReturns the <code>Plural Category</code> appropriate for the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>fixed_decimal::CompactDecimal</code> to <code>PluralOperands</code>…\nConverts a <code>fixed_decimal::FixedDecimal</code> to <code>PluralOperands</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the PluralCategory corresponding to given TR35 …\nReturns the PluralCategory corresponding to given TR35 …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n🚧 [Unstable] Data provider struct definitions for this …\n🚧 [Experimental] APIs and Data Structures for Plural …\nConstructs a new <code>PluralRules</code> for a given locale and type …\nConstructs a new <code>PluralRules</code> for a given locale for …\nA version of <code>Self::try_new_cardinal</code> that uses custom data …\nA version of <code>Self::try_new_cardinal</code> that uses custom data …\nA version of <code>Self::try_new_cardinal</code> that uses custom data …\nConstructs a new <code>PluralRules</code> for a given locale for …\nA version of <code>Self::try_new_ordinal</code> that uses custom data …\nA version of <code>Self::try_new_ordinal</code> that uses custom data …\nA version of <code>Self::try_new_ordinal</code> that uses custom data …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nA version of <code>Self::try_new</code> that uses custom data provided …\nBaked data\nMarker type for <code>PluralRulesV1</code>: “plurals/cardinal@1”\nMarker type for <code>PluralRulesV1</code>: “plurals/ordinal@1”\nPlural rule strings conforming to UTS 35 syntax. Includes …\nRule that matches <code>PluralCategory::Few</code>, or <code>None</code> if not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRule that matches <code>PluralCategory::Many</code>, or <code>None</code> if not …\nRule that matches <code>PluralCategory::One</code>, or <code>None</code> if not …\nRule that matches <code>PluralCategory::Two</code>, or <code>None</code> if not …\nRule that matches <code>PluralCategory::Zero</code>, or <code>None</code> if not …\n(<code>AL</code>) any strong right-to-left (Arabic-type) character\n(<code>AN</code>) any Arabic-Indic digit\nEnumerated property Bidi_Class\n(<code>BN</code>) most format characters, control codes, or …\nProperty Canonical_Combining_Class. See UAX #15: …\n(<code>LC</code>) The union of UppercaseLetter, LowercaseLetter, and …\n(<code>Pe</code>) A closing punctuation mark (of a pair)\n(<code>Pe</code>) A closing punctuation mark (of a pair)\n(<code>CS</code>) commas, colons, and slashes\n(<code>Pc</code>) A connecting punctuation mark, like a tie\n(<code>Pc</code>) A connecting punctuation mark, like a tie\n(<code>Cc</code>) A C0 or C1 control code\n(<code>Cc</code>) A C0 or C1 control code\n(<code>Sc</code>) A currency sign\n(<code>Sc</code>) A currency sign\n(<code>Pd</code>) A dash or hyphen punctuation mark\n(<code>Pd</code>) A dash or hyphen punctuation mark\n(<code>Nd</code>) A decimal digit\n(<code>Nd</code>) A decimal digit\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nEnumerated property East_Asian_Width.\n(<code>Me</code>) An enclosing combining mark\n(<code>Mc</code>) A spacing combining mark (positive advance width)\nA list of error outcomes for various operations in this …\n(<code>EN</code>) any ASCII digit or Eastern Arabic-Indic digit\n(<code>ES</code>) plus and minus signs\n(<code>ET</code>) a terminator in a numeric format context, includes …\n(<code>Pf</code>) A final quotation mark\n(<code>Pf</code>) A final quotation mark\n(<code>FSI</code>) U+2068: the first strong isolate control\n(<code>Cf</code>) A format control character\n(<code>Cf</code>) A format control character\nEnumerated property General_Category.\nGroupings of multiple General_Category property values.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nEnumerated property Grapheme_Cluster_Break.\nEnumerated property Hangul_Syllable_Type\nProperty Indic_Syllabic_Category. See UAX #44: …\n(<code>Pi</code>) An initial quotation mark\n(<code>Pi</code>) An initial quotation mark\nEnumerated property Joining_Type. See Section 9.2, Arabic …\n(<code>L</code>) a conjoining leading consonant Jamo.\n(<code>LV</code>) a precomposed syllable with a leading consonant and a …\n(<code>LVT</code>) a precomposed syllable with a leading consonant, a …\n(<code>L</code>) any strong left-to-right character\n(<code>LRE</code>) U+202A: the LR embedding control\n(<code>LRI</code>) U+2066: the LR isolate control\n(<code>LRO</code>) U+202D: the LR override control\n(<code>L</code>) The union of all letter categories\n(<code>Nl</code>) A letterlike numeric character\n(<code>Nl</code>) A letterlike numeric character\nEnumerated property Line_Break.\n(<code>Zl</code>) U+2028 LINE SEPARATOR only\n(<code>Zl</code>) U+2028 LINE SEPARATOR only\n(<code>Ll</code>) A lowercase letter\n(<code>Ll</code>) A lowercase letter\n(<code>M</code>) The union of all mark categories\n(<code>Sm</code>) A symbol of mathematical use\n(<code>Sm</code>) A symbol of mathematical use\n(<code>Lm</code>) A modifier letter\n(<code>Lm</code>) A modifier letter\n(<code>Sk</code>) A non-letterlike modifier symbol\n(<code>Sk</code>) A non-letterlike modifier symbol\n(<code>Mn</code>) A nonspacing combining mark (zero advance width)\n(<code>NSM</code>) any nonspacing mark\n(<code>Mn</code>) A nonspacing combining mark (zero advance width)\n(<code>NA</code>) not applicable (e.g. not a Hangul code point).\n(<code>N</code>) The union of all number categories\n(<code>Ps</code>) An opening punctuation mark (of a pair)\n(<code>Ps</code>) An opening punctuation mark (of a pair)\n(<code>C</code>) The union of all control code, reserved, and …\n(<code>Lo</code>) Other letters, including syllables and ideographs\n(<code>Lo</code>) Other letters, including syllables and ideographs\n(<code>ON</code>) most other symbols and punctuation marks\n(<code>No</code>) A numeric character of other type\n(<code>No</code>) A numeric character of other type\n(<code>Po</code>) A punctuation mark of other type\n(<code>Po</code>) A punctuation mark of other type\n(<code>So</code>) A symbol of other type\n(<code>So</code>) A symbol of other type")