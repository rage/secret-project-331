searchState.loadedDescShard("icu", 1, "Calls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocale Preferences for the Preferences structure.\nOptions used by types in this crate\nThe <code>Part</code>s used by <code>ListFormatter</code>.\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nCreates a new <code>ListFormatter</code> that produces a and-type list ‚Ä¶\nA version of [<code>Self :: try_new_and</code>] that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_and</code>] that uses custom data ‚Ä¶\nCreates a new <code>ListFormatter</code> that produces a or-type list ‚Ä¶\nA version of [<code>Self :: try_new_or</code>] that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_or</code>] that uses custom data ‚Ä¶\nCreates a new <code>ListFormatter</code> that produces a unit-type list ‚Ä¶\nA version of [<code>Self :: try_new_unit</code>] that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_unit</code>] that uses custom data ‚Ä¶\nA list of options set by the developer to adjust the ‚Ä¶\nRepresents the style of a list. See the CLDR spec for an ‚Ä¶\nThe shortest type of list\nA shorter list\nA typical list\nConstructs a new <code>ListFormatterOptions</code> struct.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe length variant should reflect available space for the ‚Ä¶\nAuguments the struct with the set <code>ListLength</code>.\nThe <code>Part</code> used by <code>FormattedList</code> to mark the part of the ‚Ä¶\nThe <code>Part</code> used by <code>FormattedList</code> to mark the part of the ‚Ä¶\nBaked data\nA pattern that can behave conditionally on the next ‚Ä¶\nMarker for and lists\nSymbols and metadata required for <code>ListFormatter</code>.\nA pattern containing two numeric placeholders (‚Äú{0}, and ‚Ä¶\nMarker for or lists\nMarker for unit lists\nThe marker attributes for narrow lists\nThe marker attributes for short lists\nA serde-compatible version of ‚Ä¶\nThe special case of a <code>ConditionalListJoinerPattern</code>\nThe marker attributes for wide lists\nThe condition on the following element\nThe default pattern\nReturns the represented <code>DFA</code>\nThe end pattern\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>SerdeDFA</code> from raw bytes. Used internally by ‚Ä¶\nConstructs a <code>ListJoinerPattern</code> from raw parts. Used by ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeserializes to <code>Option&lt;Self&gt;</code>. Will return <code>None</code> for ‚Ä¶\nThe middle pattern. It doesn‚Äôt need to be a pattern ‚Ä¶\nThe pair pattern, if it‚Äôs different from the end pattern.\nThe pattern if the condition matches\nAnd optional special case\nThe start pattern\nA locale type optimized for use in fallbacking and the ‚Ä¶\nRepresents the direction of a script.\nDuplicated extension.\nInvalid extension subtag.\nInvalid language subtag.\nInvalid script, region or variant subtag.\nA core struct representing a ‚Ä¶\nThe script is left-to-right.\nA core struct representing a <code>Unicode Locale Identifier</code>.\nImplements the algorithm defined in <em>UTS #35: Annex C, </em>‚Ä¶\nProvides methods to determine the direction of a locale.\nImplements the <em>Add Likely Subtags</em> and <em>Remove Likely Subtags</em>\nThe canonicalization operation modified the locale.\nList of parser errors that can be generated while parsing ‚Ä¶\nThe script is right-to-left.\nUsed to track the result of a transformation operation ‚Ä¶\nThe unknown language identifier ‚Äúund‚Äù.\nThe unknown locale ‚Äúund‚Äù.\nThe canonicalization operation did not modify the locale.\nThe canonicalize method potentially updates a passed in ‚Ä¶\n<code>const</code> version of <code>Default::default</code>\nThis module provides APIs for getting exemplar characters ‚Ä¶\nUnicode Extensions provide a mechanism to extend the ‚Ä¶\nAny extensions present in the locale identifier.\nTools for locale fallback, enabling arbitrary input ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the script direction of the given locale.\nThe basic language/script/region components in the locale ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>DataLocale</code> into a <code>Locale</code>.\nReturns whether the given locale is left-to-right.\nReturns whether the given locale is right-to-left.\nReturns whether this <code>DataLocale</code> is <code>und</code> in the locale and ‚Ä¶\nWhether this <code>LanguageIdentifier</code> equals ‚Ä¶\nA macro allowing for compile-time construction of valid ‚Ä¶\nLanguage subtag\nLanguage subtag of the language identifier.\nA macro allowing for compile-time construction of valid ‚Ä¶\nThe maximize method potentially updates a passed in locale ‚Ä¶\nThis returns a new Locale that is the result of running the\nThis returns a new Locale that is the result of running the\nA constructor which creates a <code>LocaleCanonicalizer</code> from ‚Ä¶\nCreates a <code>LocaleDirectionality</code> from compiled data, using ‚Ä¶\nCreates a <code>LocaleExpander</code> with compiled data for ‚Ä¶\nA constructor which creates a <code>LocaleCanonicalizer</code> from ‚Ä¶\nCreates a <code>LocaleDirectionality</code> from compiled data, using ‚Ä¶\nCreates a <code>LocaleExpander</code> with compiled data for all ‚Ä¶\nCreates a <code>LocaleCanonicalizer</code> with a custom <code>LocaleExpander</code> ‚Ä¶\nCreates a <code>LocaleDirectionality</code> with a custom <code>LocaleExpander</code>‚Ä¶\nNormalize the language identifier (operating on strings)\nNormalize the locale (operating on strings)\nNormalize the language identifier (operating on UTF-8 ‚Ä¶\nNormalize the locale (operating on UTF-8 formatted byte ‚Ä¶\nCompare this <code>LanguageIdentifier</code> with a potentially ‚Ä¶\nCompare this <code>Locale</code> with a potentially unnormalized BCP-47 ‚Ä¶\nThis API provides necessary functionality for building ‚Ä¶\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nRegion subtag\nRegion subtag of the language identifier.\nScript subtag\nScript subtag of the language identifier.\nCompare this <code>DataLocale</code> with BCP-47 bytes.\nCompare this <code>LanguageIdentifier</code> with BCP-47 bytes.\nCompare this <code>Locale</code> with BCP-47 bytes.\nSubivision (-u-sd-) subtag\nLanguage Identifier and Locale contains a set of subtags ‚Ä¶\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nCompare this <code>LanguageIdentifier</code> with another ‚Ä¶\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nA constructor which takes a utf8 slice which may contain ‚Ä¶\nParses a <code>DataLocale</code>.\nA constructor which takes a utf8 slice, parses it and ‚Ä¶\nA constructor which takes a utf8 slice, parses it and ‚Ä¶\nParses a <code>DataLocale</code> from a UTF-8 byte slice.\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nA version of <code>Self::new_common</code> that uses custom data ‚Ä¶\nA version of <code>Self::new_common</code> that uses custom data ‚Ä¶\nA version of <code>Self::new_common</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: new_common</code>] that uses custom data ‚Ä¶\nA version of <code>Self::new_common</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: new_common</code>] that uses custom data ‚Ä¶\nA version of <code>Self::new_extended</code> that uses custom data ‚Ä¶\nA version of <code>Self::new_extended</code> that uses custom data ‚Ä¶\nA version of <code>Self::new_extended</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: new_extended</code>] that uses custom data ‚Ä¶\nA version of <code>Self::new_extended</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: new_extended</code>] that uses custom data ‚Ä¶\nA version of <code>Self::new_with_expander</code> that uses custom data ‚Ä¶\nA version of <code>Self::new_with_expander</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: new_with_expander</code>] that uses custom ‚Ä¶\nVariant subtag\nVariant subtags of the language identifier.\nDocumentation on zero-copy deserialization of locale types.\nA wrapper around <code>UnicodeSet</code> data (characters and strings)\nA borrowed wrapper around code point set data, returned by ‚Ä¶\nConstruct a borrowed version of this type that can be ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheaply converts a [<code>ExemplarCharactersBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nGet the ‚Äúauxiliary‚Äù set of exemplar characters.\nGet the ‚Äúauxiliary‚Äù set of exemplar characters.\nA version of <code>Self::try_new_auxiliary()</code> that uses custom ‚Ä¶\nGet the ‚Äúindex‚Äù set of exemplar characters.\nGet the ‚Äúindex‚Äù set of exemplar characters.\nA version of <code>Self::try_new_index()</code> that uses custom data ‚Ä¶\nGet the ‚Äúmain‚Äù set of exemplar characters.\nGet the ‚Äúmain‚Äù set of exemplar characters.\nA version of <code>Self::try_new_main()</code> that uses custom data ‚Ä¶\nGet the ‚Äúnumbers‚Äù set of exemplar characters.\nGet the ‚Äúnumbers‚Äù set of exemplar characters.\nA version of <code>Self::try_new_numbers()</code> that uses custom data ‚Ä¶\nGet the ‚Äúpunctuation‚Äù set of exemplar characters.\nGet the ‚Äúpunctuation‚Äù set of exemplar characters.\nA version of <code>Self::try_new_punctuation()</code> that uses custom ‚Ä¶\nDefines the type of extension.\nA map of extensions associated with a given <code>Locale</code>.\nAll other extension types.\nPrivate Extension Type marked as <code>x</code>.\nTransform Extension Type marked as <code>t</code>.\nUnicode Extension Type marked as <code>u</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFunction to create a new map of extensions containing ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether there are no extensions present.\nReturns a new empty map of extensions. Same as <code>default()</code>, ‚Ä¶\nOther Use Extensions is a list of extensions other than ‚Ä¶\nA sequence of any other extensions that are present in the ‚Ä¶\nPrivate Use Extensions is a list of extensions intended for\nA representation of the data for a private-use extension, ‚Ä¶\nRetains the specified extension types, clearing all others.\nConverts the given value to a <code>String</code>.\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nTransform Extensions provide information on content ‚Ä¶\nA representation of the data for a transform extension, ‚Ä¶\nUnicode Extensions provide information about user ‚Ä¶\nA representation of the data for a Unicode extension, when ‚Ä¶\nA list of <code>Other Use Extensions</code> as defined in ‚Ä¶\nReturns the argument unchanged.\nA constructor which takes a pre-sorted list of <code>Subtag</code>.\nGets the tag character for this extension as a char.\nGets the tag character for this extension as a byte.\nGets the tag character for this extension as a &amp;str.\nCalls <code>U::from(self)</code>.\nConverts the given value to a <code>String</code>.\nA constructor which takes a str slice, parses it and ‚Ä¶\nSee <code>Self::try_from_str</code>\nA list of <code>Private Use Extensions</code> as defined in ‚Ä¶\nA single item used in a list of <code>Private</code> extensions.\nA helper function for displaying as a <code>&amp;str</code>.\nEmpties the <code>Private</code> list.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Subtag</code> from its raw format as returned ‚Ä¶\nA constructor which takes a pre-sorted list of <code>Subtag</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by ‚Ä¶\nReturns a new empty list of private-use extensions. Same ‚Ä¶\nA constructor which takes a single <code>Subtag</code>.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with BCP-47 bytes.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nSafely creates a <code>Subtag</code> from its raw format as returned by ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nA list of <code>Key</code>-<code>Value</code> pairs representing functional ‚Ä¶\nA key used in a list of <code>Fields</code>.\nA list of <code>Unicode BCP47 T Extensions</code> as defined in ‚Ä¶\nA value used in a list of <code>Fields</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nEmpties the <code>Fields</code> list.\nClears the transform extension, effectively removing it ‚Ä¶\nReturns <code>true</code> if the list contains a <code>Value</code> for the ‚Ä¶\nThe key-value pairs present in this locale extension, with ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Key</code> from its raw format as returned by ‚Ä¶\nReturns a reference to the <code>Value</code> corresponding to the <code>Key</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by ‚Ä¶\nReturns <code>true</code> if there are no fields.\nReturns <code>true</code> if there are no tfields and no tlang in the ‚Ä¶\nThe <code>LanguageIdentifier</code> specified with this locale ‚Ä¶\nReturns a new empty list of key-value pairs. Same as ‚Ä¶\nReturns a new empty map of Transform extensions. Same as ‚Ä¶\nCompare with a potentially unnormalized BCP-47 string.\nRetains a subset of fields as specified by the predicate ‚Ä¶\nSets the specified keyword, returning the old value if it ‚Ä¶\nCompare with BCP-47 bytes.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nSafely creates a <code>Key</code> from its raw format as returned by ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nAn attribute used in a set of <code>Attributes</code>.\nA set of <code>Attribute</code> elements as defined in ‚Ä¶\nA key used in a list of <code>Keywords</code>.\nA list of <code>Key</code>-<code>Value</code> pairs representing functional ‚Ä¶\nA Subivision Id as defined in <code>Unicode Locale Identifier</code>.\nA subdivision suffix used in <code>SubdivisionId</code>.\nUnicode Extensions provide information about user ‚Ä¶\nA value used in a list of <code>Keywords</code>.\nReturns a reference to a single <code>Subtag</code> if the <code>Value</code> ‚Ä¶\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA canonically ordered sequence of single standalone ‚Ä¶\nEmpties the <code>Attributes</code> list.\nClears all Unicode extension keywords, leaving Unicode ‚Ä¶\nClears all Unicode extension keywords and attributes, ‚Ä¶\nReturns <code>true</code> if the list contains a <code>Value</code> for the ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Attribute</code> from its raw format as ‚Ä¶\nUnsafely creates a <code>Key</code> from its raw format as returned by ‚Ä¶\nUnsafely creates a <code>SubdivisionSuffix</code> from its raw format ‚Ä¶\nA constructor which takes a pre-sorted list of <code>Attribute</code> ‚Ä¶\nA constructor which takes a pre-sorted list of <code>Value</code> ‚Ä¶\nReturns a reference to the <code>Value</code> corresponding to the <code>Key</code>.\nReturns a mutable reference to the <code>Value</code> corresponding to ‚Ä¶\nReturns a reference to a subtag at index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by ‚Ä¶\nDeconstructs into a raw format to be consumed by ‚Ä¶\nDeconstructs into a raw format to be consumed by ‚Ä¶\nDestructs into a single <code>Subtag</code> if the <code>Value</code> contains ‚Ä¶\nConvert to <code>Subtag</code>\nReturns <code>true</code> if there are no keywords.\nReturns <code>true</code> if the Value has no subtags.\nReturns <code>true</code> if there list of keywords and attributes is ‚Ä¶\nProduce an ordered iterator over key-value pairs\nThe key-value pairs present in this locale extension, with ‚Ä¶\nReturns a new empty set of attributes. Same as <code>default()</code>, ‚Ä¶\nReturns a new empty list of key-value pairs. Same as ‚Ä¶\nReturns a new <code>SubdivisionId</code>.\nReturns a new empty map of Unicode extensions. Same as ‚Ä¶\nCreates an empty <code>Value</code>, which corresponds to a ‚Äútrue‚Äù ‚Ä¶\nCreate a new list of key-value pairs having exactly one ‚Ä¶\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nAppends a subtag to the back of a <code>Value</code>.\nA region field of a Subdivision Id.\nRemoves the specified keyword, returning the old value if ‚Ä¶\nRemoves and returns the subtag at position <code>index</code> within ‚Ä¶\nRetains a subset of keywords as specified by the predicate ‚Ä¶\nSets the specified keyword, returning the old value if it ‚Ä¶\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nCompare this <code>Keywords</code> with BCP-47 bytes.\nCompare with BCP-47 bytes.\nReturns the number of subtags in the <code>Value</code>.\nA subdivision suffix field of a Subdivision Id.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nReturns an ordering suitable for use in <code>BTreeSet</code>.\nSafely creates a <code>Attribute</code> from its raw format as returned ‚Ä¶\nSafely creates a <code>Key</code> from its raw format as returned by ‚Ä¶\nSafely creates a <code>SubdivisionSuffix</code> from its raw format as ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which str slice, parses it and produces a ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nPrioritize the language. This is the default behavior.\nConfiguration settings for a particular fallback operation.\nIteration type for locale fallback operations.\nHint for which subtag to prioritize during fallback.\nBorrowed version of <code>LocaleFallbacker</code>.\nA <code>LocaleFallbackerBorrowed</code> with an associated ‚Ä¶\nPrioritize the region.\nPrioritize the script.\nConst-friendly version of <code>Default::default</code>.\nConst version of <code>Default::default</code>.\nCreates an iterator based on a <code>DataLocale</code>.\nAssociates a configuration with this fallbacker.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows the current <code>DataLocale</code> under fallback.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>LocaleFallbackerBorrowed</code> with compiled fallback ‚Ä¶\nStrategy for choosing which subtags to drop during locale ‚Ä¶\nCheaply converts a [<code>LocaleFallbackerBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nPerforms one step of the locale fallback algorithm.\nTakes the current <code>DataLocale</code> under fallback.\nThe structure storing locale subtags used in preferences.\nA low-level trait implemented on each preference exposed ‚Ä¶\nConstructs a new <code>LocalePreferences</code> struct with the ‚Ä¶\nExtends the preferences with the values from another set ‚Ä¶\nA set of extensions which correspond to preferences.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPreference of Language\nPreference of Region\nConvert to a DataLocale, with language-based fallback ‚Ä¶\nConvert to a DataLocale, with region-based fallback ‚Ä¶\nOptional constructor of the given preference. It takes the ‚Ä¶\nRetrieve unicode extension key corresponding to a given ‚Ä¶\nRetrieve unicode extension value corresponding to the ‚Ä¶\nA set of unicode extensions which correspond to ‚Ä¶\nErrors related to parsing of Preferences.\nA list of Preferences derived from Locale unicode ‚Ä¶\nThe given keyword value is not a valid preference variant.\nError returned by parsers of unicode extensions as ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNegative numbers use parentheses or equivalent\nCSS lev 3 word-break=break-all, allow midword breaks ‚Ä¶\nThai Buddhist calendar (same as Gregorian except for the ‚Ä¶\nA Unicode Calendar Identifier defines a type of calendar.\nCelsius as temperature unit\nTraditional Chinese calendar\nHijri calendar, tabular (intercalary years ‚Ä¶\nCollation parameter key for ordering by case.\nCollation parameter key for numeric handling.\nA Unicode Collation Identifier defines a type of collation ‚Ä¶\nA Unicode Variant Identifier defines a special variant ‚Ä¶\nA previous version of the ordering, for compatibility\nCoptic calendar\nA Unicode Currency Format Identifier defines a style for ‚Ä¶\nA Unicode Currency Identifier defines a type of currency.\nTraditional Korean calendar\nUse the default presentation for emoji characters as ‚Ä¶\nDictionary style ordering (such as in Sinhala)\nA Unicode Dictionary Break Exclusion Identifier specifies ‚Ä¶\nThe default Unicode collation element table order\nRecommended ordering for emoji characters\nUse an emoji presentation for emoji characters if possible\nA Unicode Emoji Presentation Style Identifier\nEuropean ordering rules\nEthiopic calendar, Amete Alem (epoch approx. 5493 B.C.E)\nEthiopic calendar, Amete Mihret (epoch approx, 8 C.E.)\nFahrenheit as temperature unit\nNo special case ordering\nNo special handling for numeric ordering\nA Unicode First Day Identifier defines the preferred first ‚Ä¶\nFriday\nGregorian calendar\nVariant of the 12-hour clock, sometimes used in Japan. ‚Ä¶\nThe typical 12-hour clock. Hours are numbered 1‚Äì12. ‚Ä¶\nThe 24-hour clock. Hour are numbered 0‚Äì23. Corresponds ‚Ä¶\nTraditional Hebrew calendar\nHijri calendar\nHijri Calendar sub-type\nA Unicode Hour Cycle Identifier defines the preferred time ‚Ä¶\nIndian calendar\nISO calendar (Gregorian calendar using the ISO 8601 ‚Ä¶\nJapanese Imperial calendar\nCSS lev 3 word-break=keep-all, prohibit midword breaks ‚Ä¶\nKelvin as temperature unit\nA Unicode Line Break Style Identifier defines a preferred ‚Ä¶\nA Unicode Line Break Word Identifier defines preferred ‚Ä¶\nCSS lev 3 line-break=loose\nLower case to be sorted before upper case\nA Unicode Measurement System Identifier defines a ‚Ä¶\nA Measurement Unit Preference Override defines an override ‚Ä¶\nMetric System\nMonday\nDon‚Äôt use sentence break suppressions data (the default)\nCSS level 3 line-break=normal, e.g. treat CJ as ID, break ‚Ä¶\nCSS lev 3 word-break=normal, normal script/language ‚Ä¶\nA Unicode Number System Identifier defines a type of ‚Ä¶\nPersian calendar\nPhonebook style ordering (such as in German)\nPhonetic ordering (sorting based on pronunciation)\nPrioritize keeping natural phrases (of multiple words) ‚Ä¶\nPinyin ordering for Latin and for CJK characters (used in ‚Ä¶\nPOSIX style locale variant\nA Region Override specifies an alternate region to use for ‚Ä¶\nA Unicode Subdivision Identifier defines a regional ‚Ä¶\nHijri calendar, Saudi Arabia sighting\nRepublic of China calendar\nSaturday\nSpecial collation type for string search\nSpecial collation type for Korean initial consonant search\nA Unicode Sentence Break Suppressions Identifier defines a ‚Ä¶\nDefault ordering for each language\nNegative numbers use the minusSign symbol (the default)\nUse sentence break suppressions data of type ‚Äústandard‚Äù\nCSS level 3 line-break=strict, e.g. treat CJ as NS\nPinyin ordering for Latin, stroke order for CJK characters ‚Ä¶\nSunday\nHijri calendar, tabular (intercalary years ‚Ä¶\nUse a text presentation for emoji characters if possible\nThursday\nA Unicode Timezone Identifier defines a timezone.\nTraditional style ordering (such as in Spanish)\nA sequence of decimal digits is sorted at primary level ‚Ä¶\nTuesday\nUK System of measurement: feet, pints, etc.; pints are 20oz\nUS System of measurement: feet, pints, etc.; pints are 16oz\nHijri calendar, Umm al-Qura\nPinyin ordering for Latin, Unihan radical-stroke ordering ‚Ä¶\nUpper case to be sorted before lower case\nWednesday\nPinyin ordering for Latin, zhuyin order for Bopomofo and ‚Ä¶\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis alias data is used for locale canonicalization.\nBaked data\nA set of characters and strings which share a particular ‚Ä¶\nA triplet of strings with a EncodeAsVarULE implementation.\n<code>VarULE</code> type for <code>LanguageStrStrPair</code>. See <code>LanguageStrStrPair</code> ‚Ä¶\nThis likely subtags data is used for full coverage of ‚Ä¶\nThis likely subtags data is used for the minimize and ‚Ä¶\nThis likely subtags data is used for the minimize and ‚Ä¶\nMarker for locale alias data.\nMarker for auxiliary exemplar characters data.\nMarker for index exemplar characters data.\nMarker for main exemplar characters data.\nMarker for numbers exemplar characters data.\nMarker for punctuation exemplar characters data.\nMarker for extended data for likely subtags.\nMarker for data for likely subtags for languages.\nMarker for data for likely subtags for scripts and regions.\nMarker for locale fallback parents data.\nMarker for script direction data.\nLocale fallback rules derived from CLDR parent locales ‚Ä¶\nThis directionality data is used to determine the script ‚Ä¶\nA pair of strings with a EncodeAsVarULE implementation.\n<code>VarULE</code> type for <code>StrStrPair</code>. See <code>StrStrPair</code> for ‚Ä¶\n<code>[region] -&gt; [region]+</code>\nAccess the VarULE type behind tuple struct field #0\nAccess the VarULE type behind tuple struct field #1\nAccess the VarULE type behind tuple struct field #1\nAccess the VarULE type behind tuple struct field #2\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>[langid] -&gt; [langid]</code> This is not a map as it‚Äôs searched ‚Ä¶\nJust language.\nJust language.\n<code>[language{2}] -&gt; [langid]</code>\n<code>[language{3}] -&gt; [langid]</code>\nLanguage and region.\nLanguage and region.\nLanguage and script.\nLanguage and script.\n<code>[language, variant(-variant)*] -&gt; [langid]</code> This is not a ‚Ä¶\nScripts in left-to-right direction.\nMap from language identifier to language identifier, ‚Ä¶\nJust region.\nJust region.\n<code>[region{2}] -&gt; [region]</code>\n<code>[region{3}] -&gt; [region]</code>\nScripts in right-to-left direction.\n<code>[script] -&gt; [script]</code>\nJust script.\nJust script.\nScript and region.\nScript and region.\n<code>sgn-[region] -&gt; [language]</code>\n<code>[value{7}] -&gt; [value{7}]</code>\nUndefined.\n<code>[variant] -&gt; [variant]</code>\nA language subtag (examples: <code>&quot;en&quot;</code>, <code>&quot;csb&quot;</code>, <code>&quot;zh&quot;</code>, <code>&quot;und&quot;</code>, ‚Ä¶\nA region subtag (examples: <code>&quot;US&quot;</code>, <code>&quot;CN&quot;</code>, <code>&quot;AR&quot;</code> etc.)\nA script subtag (examples: <code>&quot;Latn&quot;</code>, <code>&quot;Arab&quot;</code>, etc.)\nA generic subtag.\nThe unknown language ‚Äúund‚Äù.\nA variant subtag (examples: <code>&quot;macos&quot;</code>, <code>&quot;posix&quot;</code>, <code>&quot;1996&quot;</code> etc.)\nA list of variants (examples: <code>[&quot;macos&quot;, &quot;posix&quot;]</code>, etc.)\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nEmpties the <code>Variants</code> list.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnsafely creates a <code>Language</code> from its raw format as ‚Ä¶\nUnsafely creates a <code>Region</code> from its raw format as returned ‚Ä¶\nUnsafely creates a <code>Script</code> from its raw format as returned ‚Ä¶\nUnsafely creates a <code>Variant</code> from its raw format as returned ‚Ä¶\nUnsafely creates a <code>Subtag</code> from its raw format as returned ‚Ä¶\nCreates a new <code>Variants</code> set from a single <code>Variant</code>.\nCreates a new <code>Variants</code> set from a <code>Vec</code>. The caller is ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs into a raw format to be consumed by ‚Ä¶\nDeconstructs into a raw format to be consumed by ‚Ä¶\nDeconstructs into a raw format to be consumed by ‚Ä¶\nDeconstructs into a raw format to be consumed by ‚Ä¶\nDeconstructs into a raw format to be consumed by ‚Ä¶\nReturns true if the Region has an alphabetic code.\nWhether the list of variants is empty.\nWhether this <code>Language</code> equals <code>Language::UNKNOWN</code>.\nReturns the length of <code>self</code>.\nReturns a new empty list of variants. Same as <code>default()</code>, ‚Ä¶\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with a potentially unnormalized BCP-47 string.\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nCompare with BCP-47 bytes.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nSafely creates a <code>Language</code> from its raw format as returned ‚Ä¶\nSafely creates a <code>Region</code> from its raw format as returned by ‚Ä¶\nSafely creates a <code>Script</code> from its raw format as returned by ‚Ä¶\nSafely creates a <code>Variant</code> from its raw format as returned ‚Ä¶\nSafely creates a <code>Subtag</code> from its raw format as returned by ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nA constructor which takes a str slice, parses it and ‚Ä¶\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nSee <code>Self::try_from_str</code>\nA normalizer for performing composing normalization.\nBorrowed version of a normalizer for performing composing ‚Ä¶\nAn iterator adaptor that turns an <code>Iterator</code> over <code>char</code> into ‚Ä¶\nA normalizer for performing decomposing normalization.\nBorrowed version of a normalizer for performing ‚Ä¶\nAn iterator adaptor that turns an <code>Iterator</code> over <code>char</code> into ‚Ä¶\nConstructs a borrowed version of this type for more ‚Ä¶\nConstructs a borrowed version of this type for more ‚Ä¶\nPerforms canonical composition (including Hangul) on a ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether a string slice is normalized.\nCheck whether a string slice is normalized.\nChecks whether a slice of potentially-invalid UTF-16 is ‚Ä¶\nChecks whether a slice of potentially-invalid UTF-16 is ‚Ä¶\nCheck if a slice of potentially-invalid UTF-8 is ‚Ä¶\nCheck if a slice of potentially-invalid UTF-8 is ‚Ä¶\nNFC constructor using compiled data.\nNFC constructor using compiled data.\nNFD constructor using compiled data.\nNFD constructor using compiled data.\nNFKC constructor using compiled data.\nNFKC constructor using compiled data.\nNFKD constructor using compiled data.\nNFKD constructor using compiled data.\nNormalize a string slice into a <code>Cow&lt;&#39;a, str&gt;</code>.\nNormalize a string slice into a <code>Cow&lt;&#39;a, str&gt;</code>.\nWraps a delegate iterator into a decomposing iterator ‚Ä¶\nWraps a delegate iterator into a composing iterator ‚Ä¶\nNormalize a string slice into a <code>Write</code> sink.\nNormalize a string slice into a <code>Write</code> sink.\nNormalize a slice of potentially-invalid UTF-16 into a ‚Ä¶\nNormalize a slice of potentially-invalid UTF-16 into a ‚Ä¶\nNormalize a slice of potentially-invalid UTF-16 into a ‚Ä¶\nNormalize a slice of potentially-invalid UTF-16 into a ‚Ä¶\nNormalize a slice of potentially-invalid UTF-8 into a ‚Ä¶\nNormalize a slice of potentially-invalid UTF-8 into a ‚Ä¶\nNormalize a slice of potentially-invalid UTF-8 into a <code>Write</code>‚Ä¶\nNormalize a slice of potentially-invalid UTF-8 into a <code>Write</code>‚Ä¶\nAccess to the Unicode properties or property-based ‚Ä¶\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nSplit a string slice into maximum normalized prefix and ‚Ä¶\nSplit a string slice into maximum normalized prefix and ‚Ä¶\nSplit a slice of potentially-invalid UTF-16 into maximum ‚Ä¶\nSplit a slice of potentially-invalid UTF-16 into maximum ‚Ä¶\nSplit a slice of potentially-invalid UTF-8 into maximum ‚Ä¶\nSplit a slice of potentially-invalid UTF-8 into maximum ‚Ä¶\nCheaply converts a [<code>DecomposingNormalizerBorrowed&lt;&#39;static&gt;</code>]‚Ä¶\nCheaply converts a [<code>ComposingNormalizerBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nA version of <code>Self::new_nfc</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new_nfc</code>] that uses custom data ‚Ä¶\nA version of <code>Self::new_nfd</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new_nfd</code>] that uses custom data ‚Ä¶\nA version of <code>Self::new_nfkc</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new_nfkc</code>] that uses custom data ‚Ä¶\nA version of <code>Self::new_nfkd</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new_nfkd</code>] that uses custom data ‚Ä¶\nBundles the part of UTS 46 that makes sense to implement ‚Ä¶\nLookup of the Canonical_Combining_Class Unicode property.\nBorrowed version of lookup of the ‚Ä¶\nThe raw canonical composition operation.\nBorrowed version of the raw canonical composition ‚Ä¶\nThe raw (non-recursive) canonical decomposition operation.\nBorrowed version of the raw (non-recursive) canonical ‚Ä¶\nThe outcome of non-recursive canonical decomposition of a ‚Ä¶\nThe character is its own canonical decomposition.\nThe character decomposes to two characters.\nThe character decomposes to a single different character.\nConstructs a borrowed version of this type for more ‚Ä¶\nConstructs a borrowed version of this type for more ‚Ä¶\nConstructs a borrowed version of this type for more ‚Ä¶\nPerforms canonical composition (including Hangul) on a ‚Ä¶\nPerforms non-recursive canonical decomposition (including ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLook up the canonical combining class for a scalar value ‚Ä¶\nLook up the canonical combining class for a scalar value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new <code>CanonicalComposition</code> using compiled data.\nConstructs a new <code>CanonicalCompositionBorrowed</code> using ‚Ä¶\nConstruct from compiled data.\nConstruct from compiled data.\nConstruct from compiled data.\nConstruct from compiled data.\nCheaply converts a [<code>CanonicalCompositionBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nCheaply converts a [<code>CanonicalDecompositionBorrowed&lt;&#39;static&gt;</code>‚Ä¶\nCheaply converts a [‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nBaked data\nNon-Hangul canonical compositions\nDecomposition data\nThe expansion tables for cases where the decomposition isn‚Ä¶\nNon-recursive canonical decompositions that differ from ‚Ä¶\nMarker for data for composition.\nMarker for data for canonical decomposition.\nMarker for additional data for non-recusrsive composition.\nMarker for additional data for canonical decomposition.\nMarker for data for compatibility decomposition.\nMarker for additional data for compatibility decomposition.\nMarker for data for UTS-46 decomposition.\nTrie keys are two-<code>char</code> strings with the second character ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe passthrough bounds of NFD/NFC are lowered to this ‚Ä¶\nDecompositions that are fully within the BMP\nDecompositions with at least one character outside the BMP\nDecompositions with at least one character outside the BMP\nTrie for decomposition.\nTrie for the supplementary non-recursive decompositions\nA mapper that knows how to performs the subsets of UTS 46 ‚Ä¶\nA borrowed version of a mapper that knows how to performs ‚Ä¶\nConstructs a borrowed version of this type for more ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator adaptor that turns an <code>Iterator</code> over ‚Ä¶\nConstruct with compiled data.\nConstruct with compiled data.\nReturns an iterator adaptor that turns an <code>Iterator</code> over ‚Ä¶\nCheaply converts a [<code>Uts46MapperBorrowed&lt;&#39;static&gt;</code>] into a ‚Ä¶\nConstruct with provider. A version of <code>Self::new</code> that uses ‚Ä¶\nCardinal plural forms express quantities of units such as ‚Ä¶\nCLDR ‚Äúfew‚Äù plural category. Used in Romanian, Polish, ‚Ä¶\nCLDR ‚Äúmany‚Äù plural category. Used in Polish, Russian, ‚Ä¶\nCLDR ‚Äúone‚Äù plural category. Signifies the singular ‚Ä¶\nOrdinal plural forms denote the order of items in a set ‚Ä¶\nCLDR ‚Äúother‚Äù plural category, used as a catch-all. ‚Ä¶\nThe plural categories are used to format messages with ‚Ä¶\n<code>ULE</code> type for PluralCategory\nA bag of values for different plural cases.\nA full plural operands representation of a number. See ‚Ä¶\nA type of a plural rule which can be associated with the ‚Ä¶\nA struct which provides an ability to retrieve an ‚Ä¶\nA list of options set by the developer to adjust the ‚Ä¶\nThe preferences for plural rules.\nCLDR ‚Äútwo‚Äù plural category. Used in Arabic, Hebrew, ‚Ä¶\nCLDR ‚Äúzero‚Äù plural category. Used in Arabic and ‚Ä¶\nReturns an ordered iterator over variants of ‚Ä¶\nConverts from <code>&amp;PluralElements&lt;T&gt;</code> to <code>PluralElements&lt;&amp;T&gt;</code>.\nReturns all <code>Plural Categories</code> appropriate for a <code>PluralRules</code>‚Ä¶\nReturns the <code>Plural Category</code> appropriate for the given ‚Ä¶\nConstructs a new <code>PluralRulesOptions</code> struct.\nThe value used when the <code>PluralOperands</code> are exactly 1.\nThe value used when the <code>PluralOperands</code> are exactly 0.\nExtends the preferences with the values from another set ‚Ä¶\nThe value for <code>PluralCategory::Few</code>\nImmutably applies a function <code>f</code> to each value.\nMutably applies a function <code>f</code> to each value.\nReturns the argument unchanged.\nConverts a <code>fixed_decimal::CompactDecimal</code> to <code>PluralOperands</code>‚Ä¶\nConverts a <code>fixed_decimal::Decimal</code> to <code>PluralOperands</code>. ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the PluralCategory corresponding to given TR35 ‚Ä¶\nReturns the PluralCategory corresponding to given TR35 ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocale Preferences for the Preferences structure.\nThe value for <code>PluralCategory::Many</code>\nApplies a function <code>f</code> to convert all values to another type.\nCreates a new <code>PluralElements</code> with the given default value.\nThe value for <code>PluralCategory::One</code>\nThe value for <code>PluralCategory::Other</code>\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nPlural rule type to use.\nImmutably applies a function <code>f</code> to each value, propagating ‚Ä¶\nMutably applies a function <code>f</code> to each value, propagating a ‚Ä¶\nIf the only variant is <code>other</code>, returns <code>Some(other)</code>.\nApplies a function <code>f</code> to convert all values to another type,\nConstructs a new <code>PluralRules</code> for a given locale and type ‚Ä¶\nConstructs a new <code>PluralRules</code> for a given locale for ‚Ä¶\nA version of <code>Self::try_new_cardinal</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_cardinal</code>] that uses custom ‚Ä¶\nConstructs a new <code>PluralRules</code> for a given locale for ‚Ä¶\nA version of <code>Self::try_new_ordinal</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_ordinal</code>] that uses custom ‚Ä¶\nA version of <code>Self::try_new</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: try_new</code>] that uses custom data ‚Ä¶\nThe value for <code>PluralCategory::Two</code>\nSets the value for explicit 1.\nSets the value for explicit 0.\nSets the value for <code>PluralCategory::Few</code>.\nSets the value for <code>PluralCategory::Many</code>.\nSets the value for <code>PluralCategory::One</code>.\nSets the value for <code>PluralCategory::Two</code>.\nAuguments the struct with the set <code>PluralRuleType</code>.\nSets the value for <code>PluralCategory::Zero</code>.\nThe value for <code>PluralCategory::Zero</code>\nBaked data\nFour bits of metadata that are stored and retrieved with ‚Ä¶\nA sized packed <code>PluralElements</code> suitable for use in data ‚Ä¶\nA bitpacked DST for <code>PluralElements</code>.\nPlural rule strings conforming to UTS 35 syntax. Includes ‚Ä¶\nData for cardinal classification\nData for ordinal classification\nThe encoded elements.\nRule that matches <code>PluralCategory::Few</code>, or <code>None</code> if not ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCasts a byte slice to a <code>PluralElementsPackedULE</code>.\nReturns the value for the given <code>PluralOperands</code> and ‚Ä¶\nReturns the value for the given <code>PluralOperands</code> and ‚Ä¶\nGets the value out of a <code>FourBitMetadata</code>.\nReturns the value for the default (‚Äúother‚Äù) plural ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRule that matches <code>PluralCategory::Many</code>, or <code>None</code> if not ‚Ä¶\nRule that matches <code>PluralCategory::One</code>, or <code>None</code> if not ‚Ä¶\nüöß [Unstable] APIs and Data Structures for Plural Rules\nCreates a <code>FourBitMetadata</code> if the given value fits in 4 ‚Ä¶\nRule that matches <code>PluralCategory::Two</code>, or <code>None</code> if not ‚Ä¶\nCreates a <code>FourBitMetadata</code> with a zero value.\nRule that matches <code>PluralCategory::Zero</code>, or <code>None</code> if not ‚Ä¶\nReference version of the Plural Rules parser, AST and ‚Ä¶\nRuntime version of the Plural Rules parser, AST and ‚Ä¶\n<code>AST</code> provides a set of Syntax Tree Nodes used to store the ‚Ä¶\nUnicode Plural Rule serializer converts an <code>AST</code> to a [<code>String</code>‚Ä¶\nAn incomplete AST representation of a plural rule. ‚Ä¶\nCompact decimal exponent value: exponent of the power of ‚Ä¶\nA complete AST representation of a plural rule‚Äôs ‚Ä¶\nA decimal value used in samples.\nCurrently, synonym for ‚Äòc‚Äô. however, may be redefined ‚Ä¶\nIn a plural rule <code>Relation</code>, represents that the plural ‚Ä¶\nAn incomplete AST representation of a plural rule. ‚Ä¶\nVisible fraction digits with trailing zeros\nAn integer value of input with the fraction part truncated ‚Ä¶\nAbsolute value of input\nThe opposite of <code>Eq</code> ‚Äì that the plural operand <code>Expression</code>‚Ä¶\nAn incomplete AST representation of a plural rule. ‚Ä¶\nAn enum of <code>Relation</code> operators for plural rules.\nAn interval of numerical values (inclusive of both ‚Ä¶\nAn incomplete AST representation of a plural rule. ‚Ä¶\nAn enum of items that appear in a <code>RangeList</code>: <code>Range</code> or a ‚Ä¶\nAn incomplete AST representation of a plural rule. ‚Ä¶\nA complete AST representation of a plural rule. Comprises ‚Ä¶\nA list of values used in samples.\nA value range used in samples.\nA sample of example values that match the given rule.\nVisible fraction digits without trailing zeros\nNumber of visible fraction digits with trailing zeros\nAn incomplete AST representation of a plural rule, ‚Ä¶\nA single scalar numerical value.\nNumber of visible fraction digits without trailing zeros\nThe set of conditions that each must be satisfied for the ‚Ä¶\nThe list of samples with decimal fractions provided ‚Ä¶\nIndicates the presence of U+2026 HORIZONTAL ELLIPSIS at ‚Ä¶\nThe plural operand variable that optionally includes an ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe list of integer samples provided (denoted in LDML by ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen <code>upper_val</code> is <code>None</code>, this field represents a single ‚Ä¶\nAn optional modulo arithmetic base value when modulo ‚Ä¶\nThe plural operand under test in this expression.\nThe operator (equals, not equals) indicating whether the ‚Ä¶\nA sequence of <code>RangeListItem</code>, each of which represents a ‚Ä¶\nA collection of intervals in which all of the contained ‚Ä¶\nThe set of sample numerical values matching each plural ‚Ä¶\nWhen this <code>SampleRange</code> represents an interval of values, ‚Ä¶\nRepresent a a single ‚Äúrelation‚Äù in a plural rule\n<code>VarULE</code> type for <code>Relation</code>. See <code>Relation</code> for documentation.\nConvert to a Relation\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA wrapper around code point map data.\nA borrowed wrapper around code point set data, returned by ‚Ä¶\nA set of Unicode code points. Access its data via the ‚Ä¶\nA borrowed wrapper around code point set data, returned by ‚Ä¶\nA wrapper around <code>UnicodeSet</code> data (characters and strings)\nA borrowed wrapper around code point set data, returned by ‚Ä¶\nA struct capable of looking up a property name from a value\nA borrowed wrapper around property value name-to-enum ‚Ä¶\nA struct capable of looking up a property name from a value\nA borrowed wrapper around property value name-to-enum ‚Ä¶\nA struct capable of looking up a property value from a ‚Ä¶\nA borrowed wrapper around property value name-to-enum ‚Ä¶\nConstruct a borrowed version of this type that can be ‚Ä¶\nConstruct a borrowed version of this type that can be ‚Ä¶\nConstruct a borrowed version of this type that can be ‚Ä¶\nConstruct a borrowed version of this type that can be ‚Ä¶\nConstruct a borrowed version of this type that can be ‚Ä¶\nConstruct a borrowed version of this type that can be ‚Ä¶\nConvert this type to a <code>CodePointInversionList</code> as a ‚Ä¶\nConvert this type to a <code>CodePointInversionListAndStringList</code> ‚Ä¶\nConvert this type to a <code>CodePointTrie</code> as a borrowed value.\nCheck if the set contains a character\nCheck if the set contains the code point.\nSee <code>Self::contains</code>.\nSee <code>Self::contains</code>.\nCheck if the set contains the string. Strings consisting ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a new owned <code>CodePointInversionList</code>\nConstruct a new owned <code>CodePointInversionListAndStringList</code>\nConstruct a new one an owned <code>CodePointTrie</code>\nGet the value this map has associated with code point <code>ch</code>\nGet the property name given a value\nGet the property name given a value\nSee <code>Self::get</code>.\nGets the ‚Äúname‚Äù of a script property as a ‚Ä¶\nGet the property value as a <code>T</code>, doing a loose search ‚Ä¶\nGet the property value as a u16, doing a loose search ‚Ä¶\nGet a <code>CodePointSetData</code> for all elements corresponding to a ‚Ä¶\nGet a <code>CodePointSetData</code> for all elements corresponding to a ‚Ä¶\nGet the property value as a <code>T</code>, doing a strict search ‚Ä¶\nGet the property value as a u16, doing a strict search ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nincluded in the <code>CodePointSetData</code>\nYields an <code>Iterator</code> returning ranges of consecutive code ‚Ä¶\n<em>not</em> included in the <code>CodePointSetData</code>\nYields an <code>Iterator</code> returning ranges of consecutive code ‚Ä¶\nYields an <code>Iterator</code> returning ranges of consecutive code ‚Ä¶\nYields an <code>Iterator</code> returning ranges of consecutive code ‚Ä¶\nCreates a new instance of <code>PropertyNamesLongBorrowed&lt;T&gt;</code>.\nCreates a new instance of <code>PropertyNamesShortBorrowed&lt;T&gt;</code>.\nCreates a new <code>CodePointSetDataBorrowed</code> for a <code>BinaryProperty</code>‚Ä¶\nCreates a new <code>CodePointSetData</code> for a <code>BinaryProperty</code>.\nCreates a new <code>CodePointMapData</code> for a <code>EnumeratedProperty</code>.\nCreates a new <code>CodePointMapDataBorrowed</code> for a ‚Ä¶\nCreates a new <code>EmojiSetDataBorrowed</code> for a <code>EmojiSet</code>.\nCreates a new <code>EmojiSetDataBorrowed</code> for a <code>EmojiSet</code>.\nCreates a new instance of <code>PropertyParser&lt;T&gt;</code> using compiled ‚Ä¶\nCreates a new instance of <code>PropertyParserBorrowed&lt;T&gt;</code> using ‚Ä¶\nCreates a new instance of <code>PropertyNamesLongBorrowed&lt;T&gt;</code>.\nCreates a new instance of <code>PropertyNamesShortBorrowed&lt;T&gt;</code>.\nReturns a type capable of looking up values for a property ‚Ä¶\nThis module defines all available properties.\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nData and APIs for supporting Script_Extensions property ‚Ä¶\nCheaply converts a [<code>CodePointSetDataBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nCheaply converts a [<code>CodePointMapDataBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nCheaply converts a [<code>EmojiSetDataBorrowed&lt;&#39;static&gt;</code>] into a ‚Ä¶\nCheaply converts a [<code>PropertyParserBorrowed&lt;&#39;static&gt;</code>] into ‚Ä¶\nCheaply converts a [<code>PropertyNamesLongBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nCheaply converts a [<code>PropertyNamesShortBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nConvert this type to a <code>CodePointInversionList</code>, borrowing ‚Ä¶\nConvert this type to a <code>CodePointInversionListAndStringList</code>‚Ä¶\nConvert this type to a <code>CodePointTrie</code>, borrowing if ‚Ä¶\nConvert this map to a map around another type\nA version of <code>Self::new_for_ecma262</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: new_for_ecma262</code>] that uses custom ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>new()</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nAll possible values of this enum in the Unicode version ‚Ä¶\nCharacters with the <code>Alphabetic</code> or <code>Decimal_Number</code> property.\nAlphabetic characters.\n(<code>AL</code>) any strong right-to-left (Arabic-type) character\n(<code>AN</code>) any Arabic-Indic digit\nASCII characters commonly used for the representation of ‚Ä¶\nCharacters and character sequences intended for ‚Ä¶\nEnumerated property Bidi_Class\nFormat control characters which have specific functions in ‚Ä¶\nCharacters that are mirrored in bidirectional text.\nThis is a bitpacked combination of the <code>Bidi_Mirroring_Glyph</code>‚Ä¶\nThe enum represents Bidi_Paired_Bracket_Type.\nA binary Unicode character property.\nHorizontal whitespace characters\n(<code>BN</code>) most format characters, control codes, or ‚Ä¶\nProperty Canonical_Combining_Class. See UAX #15: ‚Ä¶\nCharacters which are ignored for casing purposes.\nCharacters that are either the source of a case mapping or ‚Ä¶\nUppercase, lowercase, and titlecase characters.\n(<code>LC</code>) The union of UppercaseLetter, LowercaseLetter, and ‚Ä¶\nCharacters whose normalized forms are not stable under ‚Ä¶\nCharacters which may change when they undergo case mapping.\nCharacters whose normalized forms are not stable under a ‚Ä¶\nCharacters which are not identical to their <code>NFKC_Casefold</code> ‚Ä¶\nCharacters whose normalized forms are not stable under a ‚Ä¶\nCharacters whose normalized forms are not stable under a ‚Ä¶\nRepresents Bidi_Paired_Bracket_Type=Close.\n(<code>Pe</code>) A closing punctuation mark (of a pair)\n(<code>Pe</code>) A closing punctuation mark (of a pair)\n(<code>CS</code>) commas, colons, and slashes\n(<code>Pc</code>) A connecting punctuation mark, like a tie\n(<code>Pc</code>) A connecting punctuation mark, like a tie\n(<code>Cc</code>) A C0 or C1 control code\n(<code>Cc</code>) A C0 or C1 control code\n(<code>Sc</code>) A currency sign\n(<code>Sc</code>) A currency sign\nPunctuation characters explicitly called out as dashes in ‚Ä¶\n(<code>Pd</code>) A dash or hyphen punctuation mark\n(<code>Pd</code>) A dash or hyphen punctuation mark\n(<code>Nd</code>) A decimal digit\n(<code>Nd</code>) A decimal digit\nFor programmatic determination of default ignorable code ‚Ä¶\nDeprecated characters.\nCharacters that linguistically modify the meaning of ‚Ä¶\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nEnumerated property East_Asian_Width.\nCharacters that are emoji.\nCharacters used in emoji sequences that normally do not ‚Ä¶\nCharacters that are emoji modifiers.\nCharacters that can serve as a base for emoji modifiers.\nCharacters that have emoji presentation by default.\nAn Emoji set as defined by <code>Unicode Technical Standard #51</code>.\n(<code>Me</code>) An enclosing combining mark\n(<code>Mc</code>) A spacing combining mark (positive advance width)\nA Unicode character property that assigns a value to each ‚Ä¶\n(<code>EN</code>) any ASCII digit or Eastern Arabic-Indic digit\n(<code>ES</code>) plus and minus signs\n(<code>ET</code>) a terminator in a numeric format context, includes ‚Ä¶\nPictographic symbols, as well as reserved ranges in blocks ‚Ä¶\nCharacters whose principal function is to extend the value ‚Ä¶\n(<code>Pf</code>) A final quotation mark\n(<code>Pf</code>) A final quotation mark\n(<code>FSI</code>) U+2068: the first strong isolate control\n(<code>Cf</code>) A format control character\n(<code>Cf</code>) A format control character\nCharacters that are excluded from composition.\nEnumerated property General_Category.\nGroupings of multiple General_Category property values.\nError value for <code>impl TryFrom&lt;u8&gt; for GeneralCategory</code>.\nThis value is obsolete and unused.\nThis value is obsolete and unused.\nInvisible characters.\nProperty used together with the definition of Standard ‚Ä¶\nEnumerated property Grapheme_Cluster_Break.\nProperty used to define ‚ÄúGrapheme extender‚Äù.\nDeprecated property.\nEnumerated property Hangul_Syllable_Type\nCharacters commonly used for the representation of ‚Ä¶\nDeprecated property.\nCharacters that can come after the first character in an ‚Ä¶\nCharacters that can begin an identifier.\nCharacters considered to be CJKV (Chinese, Japanese, ‚Ä¶\nCharacters used in Ideographic Description Sequences.\nCharacters used in Ideographic Description Sequences.\nProperty Indic_Syllabic_Category. See UAX #44: ‚Ä¶\n(<code>Pi</code>) An initial quotation mark\n(<code>Pi</code>) An initial quotation mark\nFormat control characters which have specific functions ‚Ä¶\nEnumerated property Joining_Type.\n(<code>L</code>) a conjoining leading consonant Jamo.\n(<code>LV</code>) a precomposed syllable with a leading consonant and a ‚Ä¶\n(<code>LVT</code>) a precomposed syllable with a leading consonant, a ‚Ä¶\n(<code>L</code>) any strong left-to-right character\n(<code>LRE</code>) U+202A: the LR embedding control\n(<code>LRI</code>) U+2066: the LR isolate control\n(<code>LRO</code>) U+202D: the LR override control\n(<code>L</code>) The union of all letter categories\n(<code>Nl</code>) A letterlike numeric character\n(<code>Nl</code>) A letterlike numeric character\nEnumerated property Line_Break.\n(<code>Zl</code>) U+2028 LINE SEPARATOR only\n(<code>Zl</code>) U+2028 LINE SEPARATOR only\nA small number of spacing vowel letters occurring in ‚Ä¶\nLowercase characters.\n(<code>Ll</code>) A lowercase letter\n(<code>Ll</code>) A lowercase letter\n(<code>M</code>) The union of all mark categories\nCharacters used in mathematical notation.\n(<code>Sm</code>) A symbol of mathematical use\n(<code>Sm</code>) A symbol of mathematical use\n(<code>Lm</code>) A modifier letter\n(<code>Lm</code>) A modifier letter\n(<code>Sk</code>) A non-letterlike modifier symbol\n(<code>Sk</code>) A non-letterlike modifier symbol\nThe name of this property\nThe name of this property\nA property whose value names can be represented as strings.\nCharacters that are inert under NFC, i.e., they do not ‚Ä¶\nCharacters that are inert under NFD, i.e., they do not ‚Ä¶\nCharacters that are inert under NFKC, i.e., they do not ‚Ä¶\nCharacters that are inert under NFKD, i.e., they do not ‚Ä¶\nCode points permanently reserved for internal use.\nRepresents Bidi_Paired_Bracket_Type=None.\n(<code>Mn</code>) A nonspacing combining mark (zero advance width)\n(<code>NSM</code>) any nonspacing mark\n(<code>Mn</code>) A nonspacing combining mark (zero advance width)\n(<code>NA</code>) not applicable (e.g. not a Hangul code point).\n(<code>N</code>) The union of all number categories\nRepresents Bidi_Paired_Bracket_Type=Open.\n(<code>Ps</code>) An opening punctuation mark (of a pair)\n(<code>Ps</code>) An opening punctuation mark (of a pair)\n(<code>C</code>) The union of all control code, reserved, and ‚Ä¶\n(<code>Lo</code>) Other letters, including syllables and ideographs\n(<code>Lo</code>) Other letters, including syllables and ideographs\n(<code>ON</code>) most other symbols and punctuation marks\n(<code>No</code>) A numeric character of other type\n(<code>No</code>) A numeric character of other type\n(<code>Po</code>) A punctuation mark of other type\n(<code>Po</code>) A punctuation mark of other type\n(<code>So</code>) A symbol of other type\n(<code>So</code>) A symbol of other type\n(<code>Zp</code>) U+2029 PARAGRAPH SEPARATOR only\n(<code>B</code>) various newline characters\n(<code>Zp</code>) U+2029 PARAGRAPH SEPARATOR only\nA property whose value names can be parsed from strings.\nCharacters used as syntax in patterns (such as regular ‚Ä¶\nCharacters used as whitespace in patterns (such as regular ‚Ä¶\n(<code>PDF</code>) U+202C: terminates an embedding or override control\n(<code>PDI</code>) U+2069: terminates an isolate control\nA small class of visible format controls, which precede ‚Ä¶\nPrintable characters (visible characters and whitespace).\n(<code>Co</code>) A private-use character\n(<code>Co</code>) A private-use character\n(<code>P</code>) The union of all punctuation categories\nPunctuation characters that function as quotation marks.\nCharacters used in the definition of Ideographic ‚Ä¶\nRegional indicator characters, <code>U+1F1E6..U+1F1FF</code>.\n(<code>R</code>) any strong right-to-left (non-Arabic-type) character\n(<code>RLE</code>) U+202B: the RL embedding control\n(<code>RLI</code>) U+2067: the RL isolate control\n(<code>RLO</code>) U+202E: the RL override control\nThe abbreviated name of this property, if it exists, ‚Ä¶\nThe abbreviated name of this property, if it exists, ‚Ä¶\nEnumerated property Script.\n(<code>S</code>) various segment-related control codes\nCharacters that are starters in terms of Unicode ‚Ä¶\nEnumerated property Sentence_Break.\nPunctuation characters that generally mark the end of ‚Ä¶\n(<code>Z</code>) The union of all separator categories\nCharacters with a ‚Äúsoft dot‚Äù, like i or j.\n(<code>Zs</code>) A space character (of various non-zero widths)\n(<code>Zs</code>) A space character (of various non-zero widths)\n(<code>Mc</code>) A spacing combining mark (positive advance width)\n(<code>Me</code>) An enclosing combining mark\n(<code>Cs</code>) A surrogate code point\n(<code>Cs</code>) A surrogate code point\n(<code>S</code>) The union of all symbol categories\nPunctuation characters that generally mark the end of ‚Ä¶\n(<code>Lt</code>) A digraphic letter, with first part uppercase\n(<code>Lt</code>) A digraphic letter, with first part uppercase\n(<code>T</code>) a conjoining trailing consonant Jamo.\n(<code>Cn</code>) A reserved unassigned code point or a noncharacter\n(<code>Cn</code>) A reserved unassigned code point or a noncharacter\nA property which specifies the exact set of Unified CJK ‚Ä¶\nUppercase characters.\n(<code>Lu</code>) An uppercase letter\n(<code>Lu</code>) An uppercase letter\nCharacters that are Variation Selectors.\nProperty Vertical_Orientation\n(<code>V</code>) a conjoining vowel Jamo.\nSpaces, separator characters and other control characters ‚Ä¶\n(<code>WS</code>) spaces\nEnumerated property Word_Break.\nHexadecimal digits\nCharacters that can come after the first character in an ‚Ä¶\nCharacters that can begin an identifier.\nReturn the group representing all GeneralCategory values\nProduce a GeneralCategoryGroup that is the inverse of this ‚Ä¶\nReturn whether the code point belongs in the provided ‚Ä¶\nReturn the empty group\nConvenience method for <code>CodePointSetData::new().contains(ch)</code>\nConvenience method for <code>CodePointMapData::new().get(ch)</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructor from an ICU4C <code>UBidiClass</code> value.\nConstructor from an ICU4C <code>UScriptCode</code> value.\nConstructor from an ICU4C <code>UHangulSyllableType</code> value.\nConstructor from an ICU4C <code>UEastAsianWidth</code> value.\nConstructor from an ICU4C <code>ULineBreak</code> value.\nConstructor from an ICU4C <code>UGraphemeClusterBreak</code> value.\nConstructor from an ICU4C <code>UWordBreak</code> value.\nConstructor from an ICU4C <code>USentenceBreak</code> value.\nConstructor from an ICU4C <code>UCanonicalCombiningClass</code> value.\nConstructor from an ICU4C <code>UIndicSyllabicCategory</code> value.\nConstructor from an ICU4C <code>UJoiningType</code> value.\nConstructor from an ICU4C <code>UVerticalOrientation</code> value.\nTake the intersection of two groups\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvenience method for ‚Ä¶\nWhether the glyph is mirrored\nThe mirroring glyph\nThe paired bracket type\nConvenience method for ‚Ä¶\nReturns an ICU4C <code>UBidiClass</code> value.\nReturns an ICU4C <code>UScriptCode</code> value.\nReturns an ICU4C <code>UHangulSyllableType</code> value.\nReturns an ICU4C <code>UEastAsianWidth</code> value.\nReturns an ICU4C <code>ULineBreak</code> value.\nReturns an ICU4C <code>UGraphemeClusterBreak</code> value.\nReturns an ICU4C <code>UWordBreak</code> value.\nReturns an ICU4C <code>USentenceBreak</code> value.\nReturns an ICU4C <code>UCanonicalCombiningClass</code> value.\nReturns an ICU4C <code>UIndicSyllabicCategory</code> value.\nReturns an ICU4C <code>UJoiningType</code> value.\nReturns an ICU4C <code>UVerticalOrientation</code> value.\nConstruct this <code>GeneralCategory</code> from an integer, returning ‚Ä¶\nConvenience method for <code>PropertyParser::new().get_loose(s)</code>\nTake the union of two groups\nBaked data\nA set representing characters in an inversion list, and ‚Ä¶\nA codepoint trie storing the data\n<code>ULE</code> type for GeneralCategory\nThe set of characters, represented as an inversion list\nAll data keys in this module.\n<code>PropertyBinaryAlnumV1</code>\n<code>PropertyBinaryAlphabeticV1</code>\n<code>PropertyBinaryAsciiHexDigitV1</code>\n<code>PropertyBinaryBasicEmojiV1</code>\n<code>PropertyBinaryBidiControlV1</code>\n<code>PropertyBinaryBidiMirroredV1</code>\n<code>PropertyBinaryBlankV1</code>\n<code>PropertyBinaryCaseIgnorableV1</code>\n<code>PropertyBinaryCaseSensitiveV1</code>\n<code>PropertyBinaryCasedV1</code>\n<code>PropertyBinaryChangesWhenCasefoldedV1</code>\n<code>PropertyBinaryChangesWhenCasemappedV1</code>\n<code>PropertyBinaryChangesWhenLowercasedV1</code>\n<code>PropertyBinaryChangesWhenNfkcCasefoldedV1</code>\n<code>PropertyBinaryChangesWhenTitlecasedV1</code>\n<code>PropertyBinaryChangesWhenUppercasedV1</code>\n<code>PropertyBinaryDashV1</code>\n<code>PropertyBinaryDefaultIgnorableCodePointV1</code>\n<code>PropertyBinaryDeprecatedV1</code>\n<code>PropertyBinaryDiacriticV1</code>\n<code>PropertyBinaryEmojiComponentV1</code>\n<code>PropertyBinaryEmojiModifierBaseV1</code>\n<code>PropertyBinaryEmojiModifierV1</code>\n<code>PropertyBinaryEmojiPresentationV1</code>\n<code>PropertyBinaryEmojiV1</code>\n<code>PropertyBinaryExtendedPictographicV1</code>\n<code>PropertyBinaryExtenderV1</code>\n<code>PropertyBinaryFullCompositionExclusionV1</code>\n<code>PropertyBinaryGraphV1</code>\n<code>PropertyBinaryGraphemeBaseV1</code>\n<code>PropertyBinaryGraphemeExtendV1</code>\n<code>PropertyBinaryGraphemeLinkV1</code>\n<code>PropertyBinaryHexDigitV1</code>\n<code>PropertyBinaryHyphenV1</code>\n<code>PropertyBinaryIdContinueV1</code>\n<code>PropertyBinaryIdStartV1</code>\n<code>PropertyBinaryIdeographicV1</code>\n<code>PropertyBinaryIdsBinaryOperatorV1</code>\n<code>PropertyBinaryIdsTrinaryOperatorV1</code>\n<code>PropertyBinaryJoinControlV1</code>\n<code>PropertyBinaryLogicalOrderExceptionV1</code>\n<code>PropertyBinaryLowercaseV1</code>\n<code>PropertyBinaryMathV1</code>\n<code>PropertyBinaryNfcInertV1</code>\n<code>PropertyBinaryNfdInertV1</code>\n<code>PropertyBinaryNfkcInertV1</code>\n<code>PropertyBinaryNfkdInertV1</code>\n<code>PropertyBinaryNoncharacterCodePointV1</code>\n<code>PropertyBinaryPatternSyntaxV1</code>\n<code>PropertyBinaryPatternWhiteSpaceV1</code>\n<code>PropertyBinaryPrependedConcatenationMarkV1</code>\n<code>PropertyBinaryPrintV1</code>\n<code>PropertyBinaryQuotationMarkV1</code>\n<code>PropertyBinaryRadicalV1</code>\n<code>PropertyBinaryRegionalIndicatorV1</code>\n<code>PropertyBinarySegmentStarterV1</code>\n<code>PropertyBinarySentenceTerminalV1</code>\n<code>PropertyBinarySoftDottedV1</code>\n<code>PropertyBinaryTerminalPunctuationV1</code>\n<code>PropertyBinaryUnifiedIdeographV1</code>\n<code>PropertyBinaryUppercaseV1</code>\n<code>PropertyBinaryVariationSelectorV1</code>\n<code>PropertyBinaryWhiteSpaceV1</code>\n<code>PropertyBinaryXdigitV1</code>\n<code>PropertyBinaryXidContinueV1</code>\n<code>PropertyBinaryXidStartV1</code>\nA map efficiently storing data about individual characters.\nA set of characters which share a particular property ‚Ä¶\nData marker for the ‚ÄòBidiClass‚Äô Unicode property\nData marker for the ‚ÄòBidiMirroringGlyph‚Äô Unicode ‚Ä¶\nData marker for the ‚ÄòCanonicalCombiningClass‚Äô Unicode ‚Ä¶\nData marker for the ‚ÄòEastAsianWidth‚Äô Unicode property\nData marker for the ‚ÄòGeneralCategory‚Äô Unicode property\nData marker for the ‚ÄòGraphemeClusterBreak‚Äô Unicode ‚Ä¶\nData marker for the ‚ÄòHangulSyllableType‚Äô Unicode ‚Ä¶\nData marker for the ‚ÄòIndicConjunctBreak‚Äô Unicode ‚Ä¶\nData marker for the ‚ÄòIndicSyllabicCategory‚Äô Unicode ‚Ä¶\nData marker for the ‚ÄòJoiningType‚Äô Unicode property\nData marker for the ‚ÄòLineBreak‚Äô Unicode property\nData marker for the ‚ÄòScript‚Äô Unicode property\nData marker for the ‚ÄòSentenceBreak‚Äô Unicode property\nData marker for the ‚ÄòVertical_Orientation‚Äô Unicode ‚Ä¶\nData marker for the ‚ÄòWordBreak‚Äô Unicode property\n<code>PropertyNameLongBidiClassV1</code>\n<code>PropertyNameLongCanonicalCombiningClassV1</code>\n<code>PropertyNameLongEastAsianWidthV1</code>\n<code>PropertyNameLongGeneralCategoryV1</code>\n<code>PropertyNameLongGraphemeClusterBreakV1</code>\n<code>PropertyNameLongHangulSyllableTypeV1</code>\n<code>PropertyNameLongIndicSyllabicCategoryV1</code>\n<code>PropertyNameLongJoiningTypeV1</code>\n<code>PropertyNameLongLineBreakV1</code>\n<code>PropertyNameLongScriptV1</code>\n<code>PropertyNameLongSentenceBreakV1</code>\n<code>PropertyNameLongVerticalOrientationV1</code>\n<code>PropertyNameLongWordBreakV1</code>\n<code>PropertyNameParseBidiClassV1</code>\n<code>PropertyNameParseCanonicalCombiningClassV1</code>\n<code>PropertyNameParseEastAsianWidthV1</code>\n<code>PropertyNameParseGeneralCategoryMaskV1</code>\n<code>PropertyNameParseGeneralCategoryV1</code>\n<code>PropertyNameParseGraphemeClusterBreakV1</code>\n<code>PropertyNameParseHangulSyllableTypeV1</code>\n<code>PropertyNameParseIndicSyllabicCategoryV1</code>\n<code>PropertyNameParseJoiningTypeV1</code>\n<code>PropertyNameParseLineBreakV1</code>\n<code>PropertyNameParseScriptV1</code>\n<code>PropertyNameParseSentenceBreakV1</code>\n<code>PropertyNameParseVerticalOrientationV1</code>\n<code>PropertyNameParseWordBreakV1</code>\n<code>PropertyNameShortBidiClassV1</code>\n<code>PropertyNameShortCanonicalCombiningClassV1</code>\n<code>PropertyNameShortEastAsianWidthV1</code>\n<code>PropertyNameShortGeneralCategoryV1</code>\n<code>PropertyNameShortGraphemeClusterBreakV1</code>\n<code>PropertyNameShortHangulSyllableTypeV1</code>\n<code>PropertyNameShortIndicSyllabicCategoryV1</code>\n<code>PropertyNameShortJoiningTypeV1</code>\n<code>PropertyNameShortLineBreakV1</code>\n<code>PropertyNameShortScriptV1</code>\n<code>PropertyNameShortSentenceBreakV1</code>\n<code>PropertyNameShortVerticalOrientationV1</code>\n<code>PropertyNameShortWordBreakV1</code>\n<code>PropertyScriptWithExtensionsV1</code>\nA set of characters and strings which share a particular ‚Ä¶\nA struct that efficiently stores <code>Script</code> and ‚Ä¶\nThis companion structure stores Script_Extensions values, ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nüöß [Unstable] Property names-related data for this ‚Ä¶\nNote: The <code>ScriptWithExt</code> values in this array will assume a ‚Ä¶\nA mapping of property values to their names. A single ‚Ä¶\nA mapping of property values to their names. A single ‚Ä¶\n<code>PropertyNameLongBidiClassV1</code>\n<code>PropertyNameLongCanonicalCombiningClassV1</code>\n<code>PropertyNameLongEastAsianWidthV1</code>\n<code>PropertyNameLongGeneralCategoryV1</code>\n<code>PropertyNameLongGraphemeClusterBreakV1</code>\n<code>PropertyNameLongHangulSyllableTypeV1</code>\n<code>PropertyNameLongIndicSyllabicCategoryV1</code>\n<code>PropertyNameLongJoiningTypeV1</code>\n<code>PropertyNameLongLineBreakV1</code>\n<code>PropertyNameLongScriptV1</code>\n<code>PropertyNameLongSentenceBreakV1</code>\n<code>PropertyNameLongVerticalOrientationV1</code>\n<code>PropertyNameLongWordBreakV1</code>\n<code>PropertyNameParseBidiClassV1</code>\n<code>PropertyNameParseCanonicalCombiningClassV1</code>\n<code>PropertyNameParseEastAsianWidthV1</code>\n<code>PropertyNameParseGeneralCategoryMaskV1</code>\n<code>PropertyNameParseGeneralCategoryV1</code>\n<code>PropertyNameParseGraphemeClusterBreakV1</code>\n<code>PropertyNameParseHangulSyllableTypeV1</code>\n<code>PropertyNameParseIndicSyllabicCategoryV1</code>\n<code>PropertyNameParseJoiningTypeV1</code>\n<code>PropertyNameParseLineBreakV1</code>\n<code>PropertyNameParseScriptV1</code>\n<code>PropertyNameParseSentenceBreakV1</code>\n<code>PropertyNameParseVerticalOrientationV1</code>\n<code>PropertyNameParseWordBreakV1</code>\n<code>PropertyNameShortBidiClassV1</code>\n<code>PropertyNameShortCanonicalCombiningClassV1</code>\n<code>PropertyNameShortEastAsianWidthV1</code>\n<code>PropertyNameShortGeneralCategoryV1</code>\n<code>PropertyNameShortGraphemeClusterBreakV1</code>\n<code>PropertyNameShortHangulSyllableTypeV1</code>\n<code>PropertyNameShortIndicSyllabicCategoryV1</code>\n<code>PropertyNameShortJoiningTypeV1</code>\n<code>PropertyNameShortLineBreakV1</code>\n<code>PropertyNameShortScriptV1</code>\n<code>PropertyNameShortSentenceBreakV1</code>\n<code>PropertyNameShortVerticalOrientationV1</code>\n<code>PropertyNameShortWordBreakV1</code>\nA mapping of property values to their names. A single ‚Ä¶\nA set of characters and strings which share a particular ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA map from names to their value discriminant\nA map from the value discriminant to the names\nA map from the value discriminant (the index) to the ‚Ä¶\nA map from the value discriminant (the index) to the ‚Ä¶\nA struct that wraps a <code>Script</code> array, such as in the return ‚Ä¶\nA struct that represents the data for the Script and ‚Ä¶\nA borrowed wrapper around script extension data, returned ‚Ä¶\nConstruct a borrowed version of this type that can be ‚Ä¶\nReturns whether this set contains the given script.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns all of the matching <code>CodePointMapRange</code>s for the ‚Ä¶\nReturns a <code>CodePointInversionList</code> for the given <code>Script</code> ‚Ä¶\nReturn the <code>Script_Extensions</code> property value for this code ‚Ä¶\nSee <code>Self::get_script_extensions_val</code>.\nReturns the <code>Script</code> property value for this code point.\nSee <code>Self::get_script_val</code>.\nReturns whether <code>script</code> is contained in the ‚Ä¶\nSee <code>Self::has_script</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets an iterator over the elements.\nCreates a new instance of <code>ScriptWithExtensionsBorrowed</code> ‚Ä¶\nCreates a new instance of <code>ScriptWithExtensionsBorrowed</code> ‚Ä¶\nCheaply converts a [<code>ScriptWithExtensionsBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nSegments a string into grapheme clusters.\nSegments a string into grapheme clusters (borrowed ‚Ä¶\nSupports loading line break data, and creating line break ‚Ä¶\nSegments a string into lines (borrowed version).\nSupports loading sentence break data, and creating ‚Ä¶\nSegments a string into sentences (borrowed version).\nSupports loading word break data, and creating word break ‚Ä¶\nSegments a string into words (borrowed version).\nConstructs a borrowed version of this type for more ‚Ä¶\nConstructs a borrowed version of this type for more ‚Ä¶\nConstructs a borrowed version of this type for more ‚Ä¶\nConstructs a borrowed version of this type for more ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTypes supporting iteration over segments. Obtained from ‚Ä¶\nConstructs a <code>GraphemeClusterSegmenterBorrowed</code> with an ‚Ä¶\nConstructs a <code>SentenceSegmenterBorrowed</code> with an invariant ‚Ä¶\nConstructs a <code>LineSegmenter</code> with an invariant locale, ‚Ä¶\nConstructs a <code>WordSegmenter</code> with an invariant locale and ‚Ä¶\nConstructs a <code>LineSegmenter</code> with an invariant locale, ‚Ä¶\nConstruct a <code>WordSegmenter</code> with an invariant locale and ‚Ä¶\nConstructs a <code>LineSegmenter</code> with an invariant locale, ‚Ä¶\nConstructs a <code>WordSegmenter</code> with an invariant locale and ‚Ä¶\nOptions structs and enums\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nLargely-internal scaffolding types (You should very rarely ‚Ä¶\nCreates a grapheme cluster break iterator for a Latin-1 ‚Ä¶\nCreates a line break iterator for a Latin-1 (8-bit) string.\nCreates a sentence break iterator for a Latin-1 (8-bit) ‚Ä¶\nCreates a word break iterator for a Latin-1 (8-bit) string.\nCreates a grapheme cluster break iterator for an <code>str</code> (a ‚Ä¶\nCreates a line break iterator for an <code>str</code> (a UTF-8 string).\nCreates a sentence break iterator for an <code>str</code> (a UTF-8 ‚Ä¶\nCreates a word break iterator for an <code>str</code> (a UTF-8 string).\nCreates a grapheme cluster break iterator for a UTF-16 ‚Ä¶\nCreates a line break iterator for a UTF-16 string.\nCreates a sentence break iterator for a UTF-16 string.\nCreates a word break iterator for a UTF-16 string.\nCreates a grapheme cluster break iterator for a ‚Ä¶\nCreates a line break iterator for a potentially ill-formed ‚Ä¶\nCreates a sentence break iterator for a potentially ‚Ä¶\nCreates a word break iterator for a potentially ill-formed ‚Ä¶\nCheaply converts a [‚Ä¶\nCheaply converts a [<code>LineSegmenterBorrowed&lt;&#39;static&gt;</code>] into a ‚Ä¶\nCheaply converts a [<code>SentenceSegmenterBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nCheaply converts a [<code>WordSegmenterBorrowed&lt;&#39;static&gt;</code>] into a ‚Ä¶\nConstructs a <code>SentenceSegmenter</code> for a given options and ‚Ä¶\n‚ú® <em>Enabled with the <code>compiled_data</code> Cargo feature.</em>\nA version of <code>Self::new_auto</code> that uses custom data provided ‚Ä¶\nA version of <code>Self::new_auto</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new_auto</code>] that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_auto</code>] that uses custom data ‚Ä¶\n‚ú® <em>Enabled with the <code>compiled_data</code> Cargo feature.</em>\nA version of <code>Self::new_dictionary</code> that uses custom data ‚Ä¶\nA version of <code>Self::new_dictionary</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: new_dictionary</code>] that uses custom ‚Ä¶\nA version of [<code>Self :: try_new_dictionary</code>] that uses custom ‚Ä¶\n‚ú® <em>Enabled with the <code>compiled_data</code> Cargo feature.</em>\nA version of <code>Self::new_lstm</code> that uses custom data provided ‚Ä¶\nA version of <code>Self::new_lstm</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: try_new_lstm</code>] that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_lstm</code>] that uses custom data ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::try_new</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nA version of [<code>Self :: try_new</code>] that uses custom data ‚Ä¶\nImplements the <code>Iterator</code> trait over the grapheme cluster ‚Ä¶\nImplements the <code>Iterator</code> trait over the line break ‚Ä¶\nImplements the <code>Iterator</code> trait over the sentence boundaries ‚Ä¶\nImplements the <code>Iterator</code> trait over the word boundaries of ‚Ä¶\nWord break iterator that also returns the word type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> when the segment preceding the current ‚Ä¶\nReturns an iterator over pairs of boundary position and ‚Ä¶\nReturns the word type of the segment preceding the current ‚Ä¶\nBreaks text assuming there is a soft wrap opportunity ‚Ä¶\nBreaking is allowed within ‚Äúwords‚Äù. ‚Ä¶\nBreaking is forbidden within ‚Äúword‚Äù. ‚Ä¶\nLetter category tag, including CJK.\nOptions to tailor line-breaking behavior.\nAn enum specifies the strictness of line-breaking rules. ‚Ä¶\nAn enum specifies the line break opportunities between ‚Ä¶\nBreaks text using the least restrictive set of ‚Ä¶\nNo category tag.\nBreaks text using the most common set of line-breaking ‚Ä¶\nWords break according to their customary rules. See the ‚Ä¶\nNumber category tag.\nLocale-independent options to tailor sentence breaking ‚Ä¶\nOptions to tailor sentence breaking behavior.\nBreaks text using the most stringent set of line-breaking ‚Ä¶\nLocale-independent options to tailor word breaking behavior\nOptions to tailor word breaking behavior.\nThe word type tag that is returned by ‚Ä¶\nContent locale for line segmenter\nContent locale for sentence segmenter.\nContent locale for word segmenter\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptions independent of the locale\nOptions independent of the locale\nWhether the segment is word-like; word-like segments ‚Ä¶\nStrictness of line-breaking rules. See <code>LineBreakStrictness</code>.\nLine break opportunities between letters. See ‚Ä¶\nBaked data\nBreak\nBreak state\nA model working on code points\nThe data as matrices of zerovec f32 values.\nA model working on grapheme clusters\nIndex of a state.\nWe have to look ahead one more character.\nKeep rule\nThe data to power the LSTM segmentation model.\nThe struct that stores a LSTM model.\nThe struct that stores a LSTM‚Äôs matrix.\nThe struct that stores a LSTM‚Äôs matrix.\nThe struct that stores a LSTM‚Äôs matrix.\nThe type of LSTM model\nNon-matching rule\nPre-processed Unicode data in the form of tables to be ‚Ä¶\ncodepoint trie data that the difference by specific locale\n<code>SegmenterBreakGraphemeClusterV1</code>\n<code>SegmenterBreakLineV1</code>\n<code>SegmenterBreakSentenceOverrideV1</code>\n<code>SegmenterBreakSentenceV1</code>\n<code>SegmenterBreakWordOverrideV1</code>\n<code>SegmenterBreakWordV1</code>\n<code>SegmenterDictionaryWordAutoV1</code>\n<code>SegmenterDictionaryExtendedV1</code>\n<code>SegmenterLstmWordLineAutoV1</code>\nchar16trie data for dictionary break\n<code>ULE</code> type for WordType\nBreak state table.\nThe index of ‚ÄúSA‚Äù state (or 127 if the complex ‚Ä¶\nThe index of EOT (end of text) state ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a LstmMatrix with the given dimensions. Fails if ‚Ä¶\nCreates a LstmMatrix with the given dimensions. Fails if ‚Ä¶\nCreates a LstmMatrix with the given dimensions. Fails if ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe index of the last simple state for ‚Ä¶\nNumber of properties; should be the square root of the ‚Ä¶\nProperty table.\nThe difference of property table for special locale.\nThe index of SOT (start of text) state for ‚Ä¶\nDictionary data of char16trie.\nCreates a LstmDataFloat32 with the given data. Fails if ‚Ä¶\nWord type table. Only used for word segmenter.\nThe character type.\nThe iterator over characters.\n<code>RuleBreakType</code> for Latin-1 strings\nA trait allowing for LineBreakIterator to be generalized ‚Ä¶\n<code>RuleBreakType</code> for potentially ill-formed UTF-8 strings\nA trait allowing for RuleBreakIterator to be generalized ‚Ä¶\n<code>RuleBreakType</code> for UTF-16 strings\n<code>RuleBreakType</code> for UTF-8 strings\nA trait allowing for <code>WordBreakIterator</code> to be generalized ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParsed date and time records were not a valid ISO date.\nA date and time for a given calendar.\nParsed fractional digits had excessive precision beyond ‚Ä¶\nAn ISO-8601 hour component, for use with ISO calendars.\nThere were two offsets provided that were not consistent ‚Ä¶\nThere was an invalid Offset.\nAn ISO-8601 minute component, for use with ISO calendars.\nExpected a different calendar.\nThe set of time zone fields was not expected for the given ‚Ä¶\nThere were missing fields required to parse component.\nA fractional second component, stored as nanoseconds.\nThe error type for parsing RFC 9557 strings.\nParsed record is out of valid date range.\nA timezone calculation is required to interpret this ‚Ä¶\nAn ISO-8601 second component, for use with ISO calendars.\nSyntax error.\nA representation of a time in hours, minutes, seconds, and ‚Ä¶\nA CLDR time zone identity.\nA utility type that can hold time zone information.\nThe synthetic <code>Etc/Unknown</code> time zone.\nAn unknown calendar was provided.\nA date and time for a given calendar, local to a specified ‚Ä¶\nSets the <code>ZoneNameTimestamp</code> to the given local datetime.\nThe date\nThe date, local to the time zone\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>ZonedDateTime</code> from an absolute time, in ‚Ä¶\nHour\nThe BCP47 time-zone identifier.\nSets the zone variant by calculating it using a ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this <code>TimeZone</code> equals <code>TimeZone::UNKNOWN</code>.\nReturns whether the value is zero.\nReturns whether the value is zero.\nReturns whether the value is zero.\nReturns whether the value is zero.\nMinute\nConstruct a new <code>Time</code>, without validating that all ‚Ä¶\nConstruct a new <code>Time</code> representing noon (12:00:00.000)\nGets the numeric value for this component.\nGets the numeric value for this component.\nGets the numeric value for this component.\nGets the numeric value for this component.\nThe UTC offset, if known.\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nScaffolding traits and types not generally required in ‚Ä¶\nSecond\nConstruct a new <code>Time</code> representing the start of the day ‚Ä¶\nSubsecond\nThe time\nThe time, local to the time zone\nCreates a <code>Time</code> from an RFC 9557 string of a time.\nCreates a <code>DateTime</code> in any calendar from an RFC 9557 string.\nCreates a <code>Time</code> in the ISO-8601 calendar from an RFC 9557 ‚Ä¶\nCreates a <code>DateTime</code> in any calendar from an RFC 9557 string.\nCreate a <code>ZonedDateTime</code> in any calendar from an RFC 9557 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from RFC 9557 UTF-8 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from an RFC 9557 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from RFC 9557 UTF-8 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from an RFC 9557 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from RFC 9557 UTF-8 ‚Ä¶\nConstruct a new <code>Time</code>, whilst validating that all ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from an RFC 9557 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from RFC 9557 ‚Ä¶\nCreates a time zone info with no information.\nCreates a new <code>TimeZoneInfo</code> for the UTC time zone.\nThe time variant e.g. daylight or standard, if known.\nAssociates this <code>TimeZone</code> with a UTC offset, returning a ‚Ä¶\nSets a <code>TimeZoneVariant</code> on this time zone.\nSets the <code>ZoneNameTimestamp</code> field.\nConverts this <code>TimeZone</code> into a <code>TimeZoneInfo</code> without an ‚Ä¶\nCreates a new value at 0.\nCreates a new value at 0.\nCreates a new value at 0.\nCreates a new value at 0.\nTypes for resolving and manipulating time zones.\nThe time zone\nThe time at which to interpret the time zone.\nBaked data\nA CLDR time zone identity.\n<code>ULE</code> type for TimeZoneVariant\nThe default mapping between period and offsets. The second ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nüöß [Unstable] Property names-related data for this ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA provider for mapping Windows Zones to IANA identifiers.\nA mapping from IANA time zone identifiers to BCP-47 time ‚Ä¶\nA mapping from normal-case IANA time zone identifiers to ‚Ä¶\n<code>IanaToBcp47Map</code>‚Äôs trie cannot handle differently-cased ‚Ä¶\nSee <code>IanaToBcp47Map</code>\nSee [<code>Bcp47ToIanaMap</code>]\nA list of BCP-47 time zone identifiers, sorted by ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA map from normal-case IANA time zone identifiers to ‚Ä¶\nThe list of all normalized IANA identifiers.\nSee <code>WindowsZonesToBcp47Map</code>.\nA mapping from Windows Timezone names to the corresponding ‚Ä¶\nA sorted list of BCP-47 time zone identifiers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA map from a <code>WindowsZoneIdentifier</code> and <code>WindowsRegion</code> to ‚Ä¶\nConverts Self to an <code>Option&lt;T&gt;</code>, either <code>Some(T)</code> if able or ‚Ä¶\nReturn <code>self</code> as an <code>Option&lt;T&gt;</code>\nThe variant corresponding to <code>&quot;daylight&quot;</code> in CLDR.\nA parser for parsing an IANA time zone ID to a <code>TimeZone</code> ‚Ä¶\nA borrowed wrapper around the time zone ID parser, ‚Ä¶\nThe time zone offset was invalid. Must be within ‚Ä¶\nThe variant corresponding to <code>&quot;standard&quot;</code> in CLDR.\nA CLDR time zone identity.\nA utility type that can hold time zone information.\nA time zone variant, such as Standard Time, or ‚Ä¶\nAn offset from Coordinated Universal Time (UTC).\nRepresents the different offsets in use for a time zone\n<code>VariantOffsetsCalculator</code> uses data from the data provider ‚Ä¶\nThe borrowed version of a  <code>VariantOffsetsCalculator</code>\nA mapper between Windows time zone identifier and a BCP-47 ‚Ä¶\nA borrowed wrapper around the windows time zone mapper ‚Ä¶\nThe moment in time for resolving a time zone name.\nReturns a borrowed version of the parser that can be ‚Ä¶\nReturns a borrowed version of the calculator that can be ‚Ä¶\nReturns the borrowed version of the mapper that can be ‚Ä¶\nCalculate zone offsets from timezone and local datetime.\nThe daylight-saving offset, if used.\nReturns a <code>ZoneNameTimestamp</code> for a time far in the future.\nReturns a <code>ZoneNameTimestamp</code> for a time far in the past.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an instance of <code>ZoneNameTimestamp</code> from a local ‚Ä¶\nCreates a zone variant from a TZDB <code>isdst</code> flag, if it is ‚Ä¶\nCreates a new <code>VariantOffsets</code> from a <code>UtcOffset</code> representing ‚Ä¶\nTools for parsing IANA time zone IDs.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all known time zones.\nTime zone data model choices.\nCreates a new <code>IanaParser</code> using compiled data.\nCreates a new <code>IanaParserBorrowed</code> using compiled data.\nConstructs a <code>VariantOffsetsCalculator</code> using compiled data.\nConstructs a <code>VariantOffsetsCalculatorBorrowed</code> using ‚Ä¶\nCreates a new static <code>WindowsParserBorrowed</code>.\nCreates a new static <code>WindowsParserBorrowed</code>.\nGets the <code>TimeZone</code> from a case-insensitive IANA time zone ‚Ä¶\nReturns the BCP-47 ID for a provided Windows time zone and ‚Ä¶\nSame as <code>Self::parse()</code> but works with potentially ‚Ä¶\nSee <code>Self::parse</code>.\nThe standard offset.\nCheaply converts a [<code>IanaParserBorrowed&lt;&#39;static&gt;</code>] into a ‚Ä¶\nCheaply converts a [‚Ä¶\nCheaply converts a [<code>WindowsParserBorrowed&lt;&#39;static&gt;</code>] into a ‚Ä¶\nRecovers the local datetime for this <code>ZoneNameTimestamp</code>.\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nTools for parsing Windows timezone IDs.\nA parser for parsing an IANA time zone ID to a <code>TimeZone</code> ‚Ä¶\nA borrowed wrapper around the time zone ID parser, ‚Ä¶\nA parser that supplements <code>IanaParser</code> with about 10kB of ‚Ä¶\nA borrowed wrapper around the time zone ID parser, ‚Ä¶\nReturn value of <code>IanaParserBorrowed::iter</code>.\nReturn value of <code>IanaParserExtendedBorrowed::parse</code>, ‚Ä¶\nThe iterator returned by ‚Ä¶\nThe iterator returned by <code>IanaParserExtendedBorrowed::iter()</code>\nReturned by <code>IanaParserBorrowed::iter()</code>\nReturns a borrowed version of the parser that can be ‚Ä¶\nThe canonical IANA ID\nThe canonical IANA ID\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all time zones and their ‚Ä¶\nReturns an iterator equivalent to calling <code>Self::parse</code> on ‚Ä¶\nCreates a new <code>IanaParserExtended</code> using compiled data.\nCreates a new <code>IanaParserExtendedBorrowed</code> using compiled ‚Ä¶\nThe normalized IANA ID\nGets the <code>TimeZone</code>, the canonical IANA ID, and the ‚Ä¶\nSame as <code>Self::parse()</code> but works with potentially ‚Ä¶\nCheaply converts a [<code>IanaParserExtendedBorrowed&lt;&#39;static&gt;</code>] ‚Ä¶\nThe parsed <code>TimeZone</code>\nThe parsed <code>TimeZone</code>\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of [<code>Self :: new</code>] that uses custom data provided ‚Ä¶\nCreates a new <code>IanaParserExtended</code> using compiled data and a ‚Ä¶\nA version of <code>Self::new</code> that uses custom data provided by a ‚Ä¶\nA version of [<code>Self :: try_new_with_parser</code>] that uses ‚Ä¶\nA time zone containing a time zone ID, optional offset, ‚Ä¶\nA time zone containing a time zone ID and optional offset.\nA time zone containing a time zone ID, optional offset, ‚Ä¶\nTrait encoding a particular data model for time zones.\nThe zone variant, if required for this time zone model.\nThe local time, if required for this time zone model.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA mapper between Windows time zone identifier and a BCP-47 ‚Ä¶\nA borrowed wrapper around the windows time zone mapper ‚Ä¶")