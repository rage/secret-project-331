searchState.loadedDescShard("icu_collator", 0, "Comparing strings according to language-dependent â€¦\nCompares strings according to culturally-relevant ordering.\nCompares strings according to culturally-relevant ordering,\nThe preferences for collation.\nConstructs a borrowed version of this type for more â€¦\nTreatment of case. (Large and small kana differences are â€¦\nThe collation type. This corresponds to the <code>-u-co</code> BCP-47 â€¦\nCompare guaranteed well-formed UTF-8 slices.\nCompare potentially ill-formed UTF-16 slices. Unpaired â€¦\nCompare potentially ill-formed UTF-8 slices. Ill-formed â€¦\nThis module exists to contain implementation docs and â€¦\nExtends the preferences with the values from another set â€¦\nConvenience conversion for copying the preferences from an â€¦\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocale Preferences for the Preferences structure.\nWhen set to <code>True</code>, any sequence of decimal digits is sorted â€¦\nThis module contains the types that are part of the API â€¦\nLocale preferences used by this crate\nðŸš§ [Unstable] Data provider struct definitions for this â€¦\nThe resolved options showing how the default options, the â€¦\nCheaply converts a [<code>CollatorBorrowed&lt;&#39;static&gt;</code>] into a â€¦\nCreates <code>CollatorBorrowed</code> for the given locale and options â€¦\nCreates a collator for the given locale and options from â€¦\nA version of <code>Self::try_new</code> that uses custom data provided â€¦\nA version of [<code>Self :: try_new</code>] that uses custom data â€¦\nWhat to do about characters whose comparison level can be â€¦\nWhether to distinguish case in sorting, even for sorting â€¦\nOptions settable by the user of the API.\nCharacters classified as spaces, punctuation, symbols, or â€¦\nCompare the NFD form by code point order as the quinary â€¦\nWhat characters get shifted to the quaternary level with â€¦\nKeep the characters whose level can be varied on the â€¦\nLeave off the case level option.  Case differences will be â€¦\nTurn on the case level option, thereby making a separate â€¦\nCompare only on the level of base letters. This level â€¦\nCharacters classified as spaces or punctuation are shifted.\nCompare also on the quaternary level. For Japanese, Higana â€¦\nThe resolved (actually used) options used by the collator.\nCompare also on the secondary level, which corresponds to â€¦\nShift the characters at or below <code>MaxVariable</code> to the â€¦\nCharacters classified as spaces are shifted.\nThe collation strength that indicates how many levels to â€¦\nCharacters classified as spaces, punctuation, or symbols â€¦\nCompare also on the tertiary level. By default, if the â€¦\nUser-specified alternate handling collation option.\nResolved alternate handling collation option.\nResolved case first collation option.\nUser-specified case level collation option.\nResolved case level collation option.\nCreate a new <code>CollatorOptions</code> with the defaults.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvenience conversion for copying the options from an â€¦\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUser-specified max variable collation option.\nResolved max variable collation option.\nResolved numeric collation option.\nUser-specified strength collation option.\nResolved strength collation option.\n<strong>This is a reexport of a type in <code>icu::locale</code></strong>.\n<strong>This is a reexport of a type in <code>icu::locale</code></strong>.\n<strong>This is a reexport of a type in <code>icu::locale</code></strong>.\nA previous version of the ordering, for compatibility\nDictionary style ordering (such as in Sinhala)\nThe default Unicode collation element table order\nRecommended ordering for emoji characters\nEuropean ordering rules\nNo special case ordering\nNo special handling for numeric ordering\nLower case to be sorted before upper case\nPhonebook style ordering (such as in German)\nPhonetic ordering (sorting based on pronunciation)\nPinyin ordering for Latin and for CJK characters (used in â€¦\nSpecial collation type for string search\nSpecial collation type for Korean initial consonant search\nDefault ordering for each language\nPinyin ordering for Latin, stroke order for CJK characters â€¦\nTraditional style ordering (such as in Spanish)\nA sequence of decimal digits is sorted at primary level â€¦\nPinyin ordering for Latin, Unihan radical-stroke ordering â€¦\nUpper case to be sorted before lower case\nPinyin ordering for Latin, zhuyin order for Bopomofo and â€¦\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBaked data\nThe main collation data either for the root or for a â€¦\nSecondary weights for the start of the Combining â€¦\nData marker for collation diacritics data.\n<code>CollationElement32</code>s for the Hangul Jamo Unicode Block\nData marker for collation jamo data.\nEach non-alias collation that the data provider knows â€¦\nData marker for collation metadata.\nScript reordering data\nData marker for collation reordering data.\nData marker for singleton root collation data.\nSpecial primaries associated with the root collation\nData marker for collcation special primaries data.\nData marker for collation tailorings.\nSee the mask constants in the <code>impl</code> block for the bit â€¦\n<code>CollationElement32</code>s used in expansions and as defaults for â€¦\n<code>CollationElement32</code>s (as <code>u32</code>s) for the Hangul Jamo Unicode â€¦\n<code>CollationElement</code>s used in expansions and offset CE32s â€¦\nDefaults and tries for prefix and contraction matching\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe primaries corresponding to <code>MaxVariable</code> character â€¦\nLimit of last reordered range. 0 if no reordering or no â€¦\nThe high 8 bits of the numeric primary\nPrimary-weight ranges for script reordering, to be used by â€¦\n256-byte table for reordering permutation of primary lead â€¦\nSecondary weights for characters starting from U+0300 up â€¦\nMapping from <code>char</code> to <code>CollationElement32</code> (represented as â€¦")