searchState.loadedDescShard("icu_datetime", 0, "Localized formatting of dates, times, and time zones.\nAn error while loading some other required data, such as ‚Ä¶\n<code>DateTimeFormatter</code> is a formatter capable of formatting ‚Ä¶\nAn error from constructing a formatter.\nThe user locale preferences for datetime formatting.\n<code>FixedCalendarDateTimeFormatter</code> is a formatter capable of ‚Ä¶\nAn intermediate type during a datetime formatting ‚Ä¶\nAn error from mixing calendar types in a formatter.\nAn error while loading display names for a field.\nA formatter optimized for time and time zone formatting, ‚Ä¶\nReturns the calendar used in this formatter.\nThe user‚Äôs preferred calendar system\nMaps a <code>FixedCalendarDateTimeFormatter</code> of a specific <code>FSet</code> ‚Ä¶\nMaps a <code>DateTimeFormatter</code> of a specific <code>FSet</code> to a more ‚Ä¶\nThe calendar kind of the input object (date being ‚Ä¶\nExtends the preferences with the values from another set ‚Ä¶\nAll available field sets for datetime formatting.\nFormats a datetime. Calendars and fields must match at ‚Ä¶\nFormats a datetime after first converting it to the ‚Ä¶\nFormats a datetime, checking that the calendar system is ‚Ä¶\nFormats a datetime without enforcing either the field set ‚Ä¶\nFormats a datetime without enforcing either the field set ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe user‚Äôs preferred hour cycle.\nTypes that can be fed to <code>DateTimeFormatter</code>/‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMake this <code>FixedCalendarDateTimeFormatter</code> adopt a calendar ‚Ä¶\nLocale Preferences for the Preferences structure.\nThe user‚Äôs preferred numbering system.\nOptions types for date/time formatting.\nParts of a formatted date/time.\nLower-level, power-user APIs for formatting datetimes with ‚Ä¶\nGets the pattern used in this formatted value.\nLocale preferences used by this crate\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nScaffolding traits and types for the datetime crate.\nThe calendar kind of the target object (formatter).\nGets a <code>FieldSetBuilder</code> corresponding to the fields and ‚Ä¶\nGets a <code>FieldSetBuilder</code> corresponding to the fields and ‚Ä¶\nConverts the given value to a <code>String</code>.\nAttempt to convert this <code>DateTimeFormatter</code> into one with a ‚Ä¶\nCreates a new <code>FixedCalendarDateTimeFormatter</code> from compiled ‚Ä¶\nCreates a new <code>DateTimeFormatter</code> from compiled data with ‚Ä¶\nA version of <code>Self::try_new</code> that uses custom data provided ‚Ä¶\nA version of <code>Self::try_new</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: try_new</code>] that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new</code>] that uses custom data ‚Ä¶\nDatetime formatting without static checking of invariants.\nStruct for combining date/time fields with zone fields.\n<strong>‚Äú17</strong>‚Äù ‚áí day of month (standalone)\n<strong>‚Äú17 Friday</strong>‚Äù ‚áí day of month and weekday\n<strong>‚Äú17 Friday, 3:47:50‚ÄØPM</strong>‚Äù ‚áí day of month and weekday ‚Ä¶\n<strong>‚Äú17, 3:47:50‚ÄØPM</strong>‚Äù ‚áí day of month (standalone) with ‚Ä¶\n<strong>‚ÄúFriday</strong>‚Äù ‚áí weekday (standalone)\n<strong>‚ÄúFriday 3:47:50‚ÄØPM</strong>‚Äù ‚áí weekday (standalone) with ‚Ä¶\n<strong>‚ÄúMay</strong>‚Äù ‚áí month (standalone)\n<strong>‚ÄúMay 17</strong>‚Äù ‚áí month and day\n<strong>‚ÄúFri, May 17</strong>‚Äù ‚áí month, day, and weekday\n<strong>‚ÄúFri, May 17, 3:47:50‚ÄØPM</strong>‚Äù ‚áí month, day, and ‚Ä¶\n<strong>‚ÄúMay 17, 3:47:50‚ÄØPM</strong>‚Äù ‚áí month and day with time\n<strong>‚Äú3:47:50‚ÄØPM</strong>‚Äù ‚áí time (locale-dependent hour cycle)\n<strong>‚Äú2024</strong>‚Äù ‚áí year (standalone)\n<strong>‚ÄúMay 2024</strong>‚Äù ‚áí year and month\n<strong>‚Äú5/17/24</strong>‚Äù ‚áí year, month, and day\n<strong>‚ÄúFri, 5/17/24</strong>‚Äù ‚áí year, month, day, and weekday\n<strong>‚ÄúFri, 5/17/24, 3:47:50‚ÄØPM</strong>‚Äù ‚áí year, month, day, and ‚Ä¶\n<strong>‚Äú5/17/24, 3:47:50‚ÄØPM</strong>‚Äù ‚áí year, month, and day with ‚Ä¶\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nWhether fields should be aligned for a column-like layout.\nBuilder APIs for dynamic field sets.\nEnumerations over field sets.\nCreates a D skeleton with the given formatting length.\nCreates a DT skeleton with the given formatting length.\nCreates a E skeleton with the given formatting length.\nCreates a ET skeleton with the given formatting length.\nCreates a DE skeleton with the given formatting length.\nCreates a DET skeleton with the given formatting length.\nCreates a MD skeleton with the given formatting length.\nCreates a MDT skeleton with the given formatting length.\nCreates a MDE skeleton with the given formatting length.\nCreates a MDET skeleton with the given formatting length.\nCreates a YMD skeleton with the given formatting length.\nCreates a YMDT skeleton with the given formatting length.\nCreates a YMDE skeleton with the given formatting length.\nCreates a YMDET skeleton with the given formatting length.\nCreates a Y skeleton with the given formatting length.\nCreates a M skeleton with the given formatting length.\nCreates a YM skeleton with the given formatting length.\nCreates a T skeleton with the given formatting length.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a $r#type that formats hours and minutes with the ‚Ä¶\nCreates a $r#type that formats hours, minutes, and seconds ‚Ä¶\nCreates a $r#type that formats hours, minutes, seconds, ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nConvert this specific <code>Combo</code> into a more general <code>Combo</code>. ‚Ä¶\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nThe desired length of the formatted string.\nCreates a D skeleton with a long length.\nCreates a DT skeleton with a long length.\nCreates a E skeleton with a long length.\nCreates a ET skeleton with a long length.\nCreates a DE skeleton with a long length.\nCreates a DET skeleton with a long length.\nCreates a MD skeleton with a long length.\nCreates a MDT skeleton with a long length.\nCreates a MDE skeleton with a long length.\nCreates a MDET skeleton with a long length.\nCreates a YMD skeleton with a long length.\nCreates a YMDT skeleton with a long length.\nCreates a YMDE skeleton with a long length.\nCreates a YMDET skeleton with a long length.\nCreates a Y skeleton with a long length.\nCreates a M skeleton with a long length.\nCreates a YM skeleton with a long length.\nCreates a T skeleton with a long length.\nCreates a D skeleton with a medium length.\nCreates a DT skeleton with a medium length.\nCreates a E skeleton with a medium length.\nCreates a ET skeleton with a medium length.\nCreates a DE skeleton with a medium length.\nCreates a DET skeleton with a medium length.\nCreates a MD skeleton with a medium length.\nCreates a MDT skeleton with a medium length.\nCreates a MDE skeleton with a medium length.\nCreates a MDET skeleton with a medium length.\nCreates a YMD skeleton with a medium length.\nCreates a YMDT skeleton with a medium length.\nCreates a YMDE skeleton with a medium length.\nCreates a YMDET skeleton with a medium length.\nCreates a Y skeleton with a medium length.\nCreates a M skeleton with a medium length.\nCreates a YM skeleton with a medium length.\nCreates a T skeleton with a medium length.\nCreates a D skeleton with a short length.\nCreates a DT skeleton with a short length.\nCreates a E skeleton with a short length.\nCreates a ET skeleton with a short length.\nCreates a DE skeleton with a short length.\nCreates a DET skeleton with a short length.\nCreates a MD skeleton with a short length.\nCreates a MDT skeleton with a short length.\nCreates a MDE skeleton with a short length.\nCreates a MDET skeleton with a short length.\nCreates a YMD skeleton with a short length.\nCreates a YMDT skeleton with a short length.\nCreates a YMDE skeleton with a short length.\nCreates a YMDET skeleton with a short length.\nCreates a Y skeleton with a short length.\nCreates a M skeleton with a short length.\nCreates a YM skeleton with a short length.\nCreates a T skeleton with a short length.\nHow precisely to display the time of day\nHow precisely to display the time of day\nHow precisely to display the time of day\nHow precisely to display the time of day\nHow precisely to display the time of day\nHow precisely to display the time of day\nHow precisely to display the time of day\nHow precisely to display the time of day\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the alignment option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nSets the length option.\nAssociates this field set with a time precision.\nAssociates this field set with a time precision.\nAssociates this field set with a time precision.\nAssociates this field set with a time precision.\nAssociates this field set with a time precision.\nAssociates this field set with a time precision.\nAssociates this field set with a time precision.\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nShorthand to associate this field set with ‚Ä¶\nSets the time precision option.\nSets the time precision option.\nSets the time precision option.\nSets the time precision option.\nSets the time precision option.\nSets the time precision option.\nSets the time precision option.\nSets the time precision option.\nSets the year style option.\nSets the year style option.\nSets the year style option.\nSets the year style option.\nSets the year style option.\nSets the year style option.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nWhen to display the era field in the formatted string.\nWhen to display the era field in the formatted string.\nWhen to display the era field in the formatted string.\nWhen to display the era field in the formatted string.\nWhen to display the era field in the formatted string.\nWhen to display the era field in the formatted string.\nTime zone field sets\nAn error that occurs when creating a field set from a ‚Ä¶\nThe day of the month, as in ‚Äúon the 1st‚Äù.\nThe day of the month and day of the week, as in ‚Ä¶\nAn enumeration over all possible date and calendar period ‚Ä¶\nThe day of the week alone, as in ‚ÄúSaturday‚Äù.\nThe exemplar city format, as in ‚ÄúLos Angeles‚Äù.\nA builder for dynamic field sets.\nThe long generic non-location format, as in ‚ÄúPacific ‚Ä¶\nThe short generic non-location format, as in ‚ÄúPT‚Äù.\nThe value in <code>DateFields</code> is not a valid for the specified ‚Ä¶\nThe long offset format, as in ‚ÄúGMT‚àí8:00‚Äù.\nThe short offset format, as in ‚ÄúGMT‚àí8‚Äù.\nThe location format, as in ‚ÄúLos Angeles time‚Äù.\nA standalone month, as in ‚ÄúJanuary‚Äù.\nThe month and day of the month, as in ‚ÄúJanuary 1st‚Äù.\nThe month, day of the month, and day of the week, as in ‚Ä¶\nThe builder needs <code>DateFields</code> in order to build the ‚Ä¶\nThe builder needs <code>TimePrecision</code> in order to build the ‚Ä¶\nThe builder needs <code>ZoneStyle</code> in order to build the ‚Ä¶\nThe long specific non-location format, as in ‚ÄúPacific ‚Ä¶\nThe short specific non-location format, as in ‚ÄúPDT‚Äù.\nSuperfluous options were specified.\nAll values of this enumeration.\nAll values of this enumeration.\nA year, as in ‚Äú2000‚Äù.\nA month and year, as in ‚ÄúJanuary 2000‚Äù.\nThe year, month, and day of the month, as in ‚ÄúJanuary ‚Ä¶\nThe year, month, day of the month, and day of the week, as ‚Ä¶\nAn enumeration over all possible time zone styles.\nThe alignment context, such as when displaying dates in a ‚Ä¶\nBuilds a <code>CalendarPeriodFieldSet</code>.\nBuilds a <code>CompositeFieldSet</code>.\nBuilds a <code>CompositeDateTimeFieldSet</code>.\nBuilds a <code>DateFieldSet</code>.\nBuilds a <code>DateAndTimeFieldSet</code>.\nBuilds a <code>TimeFieldSet</code>.\nBuilds a <code>ZoneFieldSet</code>.\nBuilds a <code>Combo</code> for a zoned date.\nBuilds a <code>Combo</code> for a zoned date and time.\nBuilds a <code>Combo</code> for a zoned time.\nThe set of date fields, such as ‚Äúyear and month‚Äù or ‚Äú‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether this <code>DateFields</code> variant represents a ‚Ä¶\nThe length of a formatted date/time string.\nCreates a new, empty <code>FieldSetBuilder</code>.\nThe precision to display the time of day.\nHow to display the year and era.\nThe style to display the time zone.\nAll attributes associated with this enum.\nAll attributes associated with this enum.\nAll attributes associated with this enum.\nAll attributes associated with this enum.\nField set for a calendar period.\nField set for a calendar period.\nAn enumeration over all possible calendar period field ‚Ä¶\nAn enum supporting date, calendar period, time, and ‚Ä¶\nAn enum supporting all possible field sets and options.\nThe day of the month, as in ‚Äúon the 1st‚Äù.\nThe day of the month and day of the week, as in ‚Ä¶\nThe day of the month and day of the week with time of day, ‚Ä¶\nThe day of the month with time of day, as in ‚Äúon the 1st ‚Ä¶\nField set for a date.\nField set for a date.\nAn enumeration over all possible date+time composite field ‚Ä¶\nAn enumeration over all possible date field sets.\nField set for a date and a time together.\nField set for a date and a time together.\nField set for a date, a time, and a time zone together.\nField set for a date and a time zone together.\nThe day of the week alone, as in ‚ÄúSaturday‚Äù.\nThe day of the week alone with time of day, as in ‚Ä¶\nThe exemplar city format, as in ‚ÄúLos Angeles.\nThe long generic non-location format, as in ‚ÄúPacific ‚Ä¶\nThe short generic non-location format, as in ‚ÄúPT‚Äù.\nThe long offset format, as in ‚ÄúGMT‚àí8:00‚Äù.\nThe short offset format, as in ‚ÄúGMT‚àí8‚Äù.\nThe location format, as in ‚ÄúLos Angeles Time‚Äù.\nA standalone month, as in ‚ÄúJanuary‚Äù.\nThe month and day of the month, as in ‚ÄúJanuary 1st‚Äù.\nThe month, day of the month, and day of the week, as in ‚Ä¶\nThe month, day of the month, and day of the week with time ‚Ä¶\nThe month and day of the month with time of day, as in ‚Ä¶\nThe long specific non-location format, as in ‚ÄúPacific ‚Ä¶\nThe short specific non-location format, as in ‚ÄúPDT‚Äù.\nA time of day.\nField set for a time.\nField set for a time.\nAn enumeration over all possible time field sets.\nField set for a time and a time zone together.\nA year, as in ‚Äú2000‚Äù.\nA month and year, as in ‚ÄúJanuary 2000‚Äù.\nThe year, month, and day of the month, as in ‚ÄúJanuary ‚Ä¶\nThe year, month, day of the month, and day of the week, as ‚Ä¶\nThe year, month, day of the month, and day of the week ‚Ä¶\nThe year, month, and day of the month with time of day, as ‚Ä¶\nField set for a time zone.\nAn enumeration over all possible zone field sets.\nType alias representing all possible date + time + time ‚Ä¶\nType alias representing all possible date + time zone ‚Ä¶\nType alias representing all possible time + time zone ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>CompositeFieldSet</code> corresponding to this ‚Ä¶\nIf the <code>CompositeFieldSet</code> does not contain a time zone, ‚Ä¶\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\nAssociates this field set with a time zone field set.\n<strong>‚ÄúChicago</strong>‚Äù ‚áí time zone in exemplar city format\n<strong>‚ÄúCentral Time</strong>‚Äù ‚áí time zone in generic non-location ‚Ä¶\n<strong>‚ÄúCT</strong>‚Äù ‚áí time zone in generic non-location format, ‚Ä¶\n<strong>‚ÄúGMT-05:00</strong>‚Äù ‚áí UTC offset, long length\n<strong>‚ÄúGMT-5</strong>‚Äù ‚áí UTC offset, short length\n<strong>‚ÄúChicago Time</strong>‚Äù ‚áí time zone in location format\n<strong>‚ÄúCentral Daylight Time</strong>‚Äù ‚áí time zone in specific ‚Ä¶\n<strong>‚ÄúCDT</strong>‚Äù ‚áí time zone in specific non-location format, ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA date for a given calendar.\nA date and time for a given calendar.\nA representation of a time in hours, minutes, seconds, and ‚Ä¶\nA CLDR time zone identity.\nA utility type that can hold time zone information.\nThe synthetic <code>Etc/Unknown</code> time zone.\nAn offset from Coordinated Universal Time (UTC).\nA date and time for a given calendar, local to a specified ‚Ä¶\nWrap the calendar type in <code>Ref&lt;T&gt;</code>, making it cheaper to ‚Ä¶\nSets the <code>ZoneNameTimestamp</code> to the given local datetime.\nGet a reference to the contained calendar\nGet a reference to the contained calendar wrapper\nConvert this <code>Date&lt;AnyCalendar&gt;</code> to another <code>AnyCalendar</code>, if ‚Ä¶\nReturns information about the year cycle, for cyclic ‚Ä¶\nThe date\nThe date, local to the time zone\nThe calendar-specific day-of-month represented by <code>self</code>\nThe day of the week for this date\nThe calendar-specific day-of-month represented by <code>self</code>\nThe number of days in the month of this date\nThe number of days in the year of this date\nReturns information about the era for calendars using eras.\nThe ‚Äúextended year‚Äù, typically anchored with year 1 as ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>ZonedDateTime</code> from an absolute time, in ‚Ä¶\nConstruct a date from a <code>RataDie</code> and some calendar ‚Ä¶\nConstruct a date from raw values for a given calendar. ‚Ä¶\nCreate a <code>UtcOffset</code> from a seconds input without checking ‚Ä¶\nHour\nReturns the hours part of if the <code>UtcOffset</code>\nThe BCP47 time-zone identifier.\nSets the zone variant by calculating it using a ‚Ä¶\nGet the inner date implementation. Should not be called ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWrap the contained calendar type in <code>Arc&lt;T&gt;</code>, making it ‚Ä¶\nWrap the contained calendar type in <code>Rc&lt;T&gt;</code>, making it ‚Ä¶\nReturns whether <code>self</code> is in a calendar-specific leap year\nWhether the <code>UtcOffset</code> is non-negative.\nWhether this <code>TimeZone</code> equals <code>TimeZone::UNKNOWN</code>.\nWhether the <code>UtcOffset</code> is zero.\nMinute\nReturns the minutes part of if the <code>UtcOffset</code>.\nThe calendar-specific month represented by <code>self</code>\nThe number of months in the year of this date\nConstruct a new <code>Time</code>, without validating that all ‚Ä¶\nConstruct a date from an ISO date and some calendar ‚Ä¶\nConstruct a new <code>Time</code> representing noon (12:00:00.000)\nThe UTC offset, if known.\nSecond\nReturns the seconds part of if the <code>UtcOffset</code>.\nConstruct a new <code>Time</code> representing the start of the day ‚Ä¶\nSubsecond\nThe time\nThe time, local to the time zone\nType-erase the date, converting it to a date for ‚Ä¶\nConvert the Date to a date in a different calendar\nConvert the Date to an ISO Date\nConvert the date to a <code>RataDie</code>\nReturns the raw offset value in seconds.\nAttempt to create a <code>UtcOffset</code> from a seconds input.\nCreates a <code>Date</code> in the given calendar from an RFC 9557 ‚Ä¶\nParse a <code>UtcOffset</code> from bytes.\nCreates a <code>Time</code> from an RFC 9557 string of a time.\nCreates a <code>DateTime</code> in any calendar from an RFC 9557 string.\nCreates a <code>Date</code> in the given calendar from an RFC 9557 ‚Ä¶\nSee <code>Self::try_from_str</code>\nCreates a <code>Time</code> in the ISO-8601 calendar from an RFC 9557 ‚Ä¶\nCreates a <code>DateTime</code> in any calendar from an RFC 9557 string.\nCreate a <code>ZonedDateTime</code> in any calendar from an RFC 9557 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from RFC 9557 UTF-8 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from an RFC 9557 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from RFC 9557 UTF-8 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from an RFC 9557 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from RFC 9557 UTF-8 ‚Ä¶\nConstruct a new <code>Time</code>, whilst validating that all ‚Ä¶\nConstruct a new Buddhist Date.\nConstruct a new Chinese date from a <code>year</code>, <code>month</code>, and <code>day</code>. ‚Ä¶\nConstruct new Coptic Date.\nConstruct a new Dangi date from a <code>year</code>, <code>month</code>, and <code>day</code>. ‚Ä¶\nConstruct new Ethiopian Date.\nConstruct a date from from era/month codes and fields, and ‚Ä¶\nConstruct a new Gregorian Date.\nConstruct new Hebrew Date.\nConstruct new Tabular Hijri Date.\nConstruct new Indian Date, with year provided in the ≈öaka ‚Ä¶\nConstruct a new ISO date from integers.\nConstruct a new Japanese Date with all eras.\nConstruct a new Japanese Date.\nConstruct new Julian Date.\nConstruct new Persian Date.\nConstruct a new Republic of China calendar Date.\nConstruct new simulated Hijri Date.\nConstruct new Hijri Umm al-Qura Date.\nCreate a <code>ZonedDateTime</code> in any calendar from an RFC 9557 ‚Ä¶\nCreate a <code>ZonedDateTime</code> in any calendar from RFC 9557 ‚Ä¶\nCreates a time zone info with no information.\nCreates a new <code>TimeZoneInfo</code> for the UTC time zone.\nThe time variant e.g. daylight or standard, if known.\nThe ISO week of the year containing this date.\nAssociates this <code>TimeZone</code> with a UTC offset, returning a ‚Ä¶\nSets a <code>TimeZoneVariant</code> on this time zone.\nSets the <code>ZoneNameTimestamp</code> field.\nConverts this <code>TimeZone</code> into a <code>TimeZoneInfo</code> without an ‚Ä¶\nThe calendar-specific year-info.\nCreates a <code>UtcOffset</code> of zero.\nThe time zone\nThe time at which to interpret the time zone.\nThe alignment context of the formatted string.\nAlign fields as the locale specifies them to be aligned.\nDisplay the century and/or era when needed to disambiguate ‚Ä¶\nAlign fields as appropriate for a column layout. For ‚Ä¶\nAlways display the century, and display the era when ‚Ä¶\nDisplay the hour. Hide all other time fields.\nThe length of a formatted date/time string.\nA long date; typically spelled-out, as in ‚ÄúJanuary 1, ‚Ä¶\nA medium-sized date; typically abbreviated, as in ‚ÄúJan. ‚Ä¶\nDisplay the hour and minute. Hide the second.\nDisplay the hour; display the minute if nonzero. Hide the ‚Ä¶\nOne fractional digit (tenths of a second).\nTwo fractional digits (hundredths of a second).\nThree fractional digits (milliseconds).\nFour fractional digits.\nFive fractional digits.\nSix fractional digits (microseconds).\nSeven fractional digits.\nEight fractional digits.\nNine fractional digits (nanoseconds)\nDisplay the hour, minute, and second. Hide fractional ‚Ä¶\nA short date; typically numeric, as in ‚Äú1/1/2000‚Äù.\nDisplay the hour, minute, and second with the given number ‚Ä¶\nA specification for how many fractional second digits to ‚Ä¶\nA specification for how precisely to display the time of ‚Ä¶\nAlways display the century and era.\nA specification of how to render the year and the era.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a <code>SubsecondDigits</code> from an integer number of ‚Ä¶\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nA <code>Part</code> used by <code>FormattedDateTime</code>.\nAn abbreviated calendar-dependent year or era name.\nAn abbreviated calendar-dependent month name for ‚Ä¶\nAn abbreviated weekday name for formatting with other ‚Ä¶\nAn abbreviated 12-hour day period name, including display ‚Ä¶\nA field conflicts with a previous field.\nAn error arising from the <code>data provider</code> for loading names.\nA low-level type that formats datetime patterns with ‚Ä¶\nA pattern for formatting a datetime in a calendar.\nA formatter for a specific <code>DateTimePattern</code>.\nChoices for loading day period names.\nThe <code>DecimalFormatter</code> has not been loaded.\nThe specific field for which an error occurred.\nA low-level type that formats datetime patterns with ‚Ä¶\nA pattern that has been interpolated and implements ‚Ä¶\nError for the <code>TryWriteable</code> implementation of ‚Ä¶\nThe specific formatter does not support this field.\nThe <code>CyclicYear::year</code> of the input is not valid for this ‚Ä¶\nThe era code of the input is not valid for this calendar.\nThe <code>MonthCode</code> of the input is not valid for this calendar.\nAn input field (such as ‚Äúhour‚Äù or ‚Äúmonth‚Äù) is ‚Ä¶\nChoices for loading month names.\nThe localized names for a field have not been loaded.\nA narrow calendar-dependent year or era name. Not ‚Ä¶\nA narrow calendar-dependent month name for formatting with ‚Ä¶\nA narrow weekday name for formatting with other fields. ‚Ä¶\nAn abbreviated 12-hour day period name, including display ‚Ä¶\nError returned from <code>FixedCalendarDateTimeNames</code>‚Äôs pattern ‚Ä¶\nA short weekday name for formatting with other fields.\nAn abbreviated calendar-dependent month name for ‚Ä¶\nAn abbreviated weekday name for stand-alone display.\nA narrow calendar-dependent month name for stand-alone ‚Ä¶\nA narrow weekday name for stand-alone display. Not ‚Ä¶\nA short weekday name for stand-alone display.\nA wide calendar-dependent month name for stand-alone ‚Ä¶\nA wide weekday name for stand-alone display.\nError returned from constructors that map from AnyCalendar ‚Ä¶\nThe pattern contains a field symbol for which formatting ‚Ä¶\nThe field symbol is not supported in that length.\nThe pattern contains a field that has a valid symbol but ‚Ä¶\nChoices for loading weekday names.\nA wide calendar-dependent year or era name.\nA wide calendar-dependent month name for formatting with ‚Ä¶\nA wide weekday name for formatting with other fields.\nA wide 12-hour day period name, including display names ‚Ä¶\nChoices for loading year names.\nMaps a <code>FixedCalendarDateTimeNames</code> of a specific <code>FSet</code> to a ‚Ä¶\nMaps a <code>FixedCalendarDateTimeNames</code> of a specific <code>FSet</code> to a ‚Ä¶\nFormats a date and time of day with a custom date/time ‚Ä¶\nCreate an <code>ErrorField</code> (stable wrapper) from a <code>Field</code> ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an instance with the names loaded in a ‚Ä¶\nCreates an instance with the names and calendar loaded in ‚Ä¶\nIncludes day period names for the specified length with ‚Ä¶\nLoads a <code>DecimalFormatter</code> with compiled data.\nAssociates this <code>FixedCalendarDateTimeNames</code> with a pattern ‚Ä¶\nIncludes month names for the specified symbol and length ‚Ä¶\nIncludes shared essential patterns for time zone ‚Ä¶\nIncludes exemplar city names for time zone formatting with ‚Ä¶\nIncludes generic non-location long time zone names with ‚Ä¶\nIncludes generic non-location long time zone names and all ‚Ä¶\nIncludes generic non-location short time zone names with ‚Ä¶\nIncludes generic non-location short time zone names and ‚Ä¶\nIncludes all data for short and long localized offset time ‚Ä¶\nIncludes location names for time zone formatting with ‚Ä¶\nIncludes specific non-location long time zone names with ‚Ä¶\nIncludes specific non-location long time zone names and ‚Ä¶\nIncludes specific non-location short time zone names with ‚Ä¶\nIncludes specific non-location short time zone names and ‚Ä¶\nIncludes weekday names for the specified symbol and length ‚Ä¶\nIncludes year (era or cycle) names for the specified ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe calendar kind that is not supported.\nLoads day period names for the specified length.\nLoads a <code>DecimalFormatter</code> from a data provider.\nAssociates this <code>FixedCalendarDateTimeNames</code> with a datetime ‚Ä¶\nLoads month names for the specified symbol and length.\nLoads shared essential patterns for time zone formatting.\nLoads exemplar city names for time zone formatting.\nLoads generic non-location long time zone names.\nLoads generic non-location long time zone names and all ‚Ä¶\nLoads generic non-location short time zone names.\nLoads generic non-location short time zone names and all ‚Ä¶\nLoads all data for short and long localized offset time ‚Ä¶\nLoads location names for time zone formatting.\nLoads specific non-location long time zone names.\nLoads specific non-location long time zone names and all ‚Ä¶\nLoads specific non-location short time zone names.\nLoads specific non-location short time zone names and all ‚Ä¶\nLoads weekday names for the specified symbol and length.\nLoads year (era or cycle) names for the specified length.\nCreates a completely empty instance, not even with number ‚Ä¶\nConverts the given value to a <code>String</code>.\nCreates a <code>DateTimePattern</code> from a pattern string.\nLoads a pattern for the given field set with compiled data ‚Ä¶\nLoads a pattern for the given field set with compiled data ‚Ä¶\nA version of <code>Self::try_into_formatter</code> that uses custom ‚Ä¶\nA version of <code>Self::try_into_formatter</code> that uses custom ‚Ä¶\nA version of <code>Self::try_into_formatter</code> that uses custom ‚Ä¶\nA version of <code>Self::try_into_formatter</code> that uses custom ‚Ä¶\nConstructor that takes a selected locale and creates an ‚Ä¶\nA version of <code>Self::try_new</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: try_new</code>] that uses custom data ‚Ä¶\nCreates a completely empty instance, not even with number ‚Ä¶\nAssociates this <code>FixedCalendarDateTimeNames</code> with a pattern ‚Ä¶\nMax\nValue\nThe field that was not able to be loaded.\nThe field that prevented the new field from being loaded.\nThai Buddhist calendar (same as Gregorian except for the ‚Ä¶\n<strong>This is a reexport of a type in <code>icu::locale</code></strong>.\nTraditional Chinese calendar\nHijri calendar, tabular (intercalary years ‚Ä¶\nCoptic calendar\nTraditional Korean calendar\nEthiopic calendar, Amete Alem (epoch approx. 5493 B.C.E)\nEthiopic calendar, Amete Mihret (epoch approx, 8 C.E.)\nGregorian calendar\nVariant of the 12-hour clock, sometimes used in Japan. ‚Ä¶\nThe typical 12-hour clock. Hours are numbered 1‚Äì12. ‚Ä¶\nThe 24-hour clock. Hour are numbered 0‚Äì23. Corresponds ‚Ä¶\nTraditional Hebrew calendar\nHijri calendar\n<strong>This is a reexport of a type in <code>icu::locale</code></strong>.\n<strong>This is a reexport of a type in <code>icu::locale</code></strong>.\nIndian calendar\nISO calendar (Gregorian calendar using the ISO 8601 ‚Ä¶\nJapanese Imperial calendar\n<strong>This is a reexport of a type in <code>icu::locale</code></strong>.\nPersian calendar\nHijri calendar, Saudi Arabia sighting\nRepublic of China calendar\nHijri calendar, tabular (intercalary years ‚Ä¶\nHijri calendar, Umm al-Qura\nA helper function for displaying as a <code>&amp;str</code>.\nA helper function for displaying as a <code>&amp;str</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBaked data\n<code>DatetimePatternsDateBuddhistV1</code>\n<code>DatetimePatternsDateChineseV1</code>\n<code>DatetimePatternsDateCopticV1</code>\n<code>DatetimePatternsDateDangiV1</code>\n<code>DatetimePatternsDateEthiopianV1</code>\n<code>DatetimePatternsDateGregorianV1</code>\n<code>DatetimePatternsDateHebrewV1</code>\n<code>DatetimePatternsDateHijriV1</code>\n<code>DatetimePatternsDateIndianV1</code>\n<code>DatetimePatternsDateJapaneseV1</code>\n<code>DatetimePatternsDateJapanextV1</code>\n<code>DatetimePatternsDatePersianV1</code>\n<code>DatetimePatternsDateRocV1</code>\n<code>DatetimePatternsTimeV1</code>\nA field of <code>PackedPatternsBuilder</code>.\nüìè This item has a stack size of 32 bytes on the stable ‚Ä¶\nA builder for a <code>PackedPatterns</code>.\nBuilds a packed pattern representation from the builder.\nData structs for calendar-specific symbols and patterns.\nThe list of patterns. Length should be between 1 and 9, ‚Ä¶\nEnums representing the fields in a date pattern, including ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAn encoding of which standard/variant cell corresponds to ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe ‚Äúlong‚Äù length pattern plural elements.\nThe ‚Äúmedium‚Äù length pattern plural elements.\nData structs and markers for semantic skeletons and ‚Ä¶\nStructured datetime pattern types for datagen and the data ‚Ä¶\nThe ‚Äúshort‚Äù length pattern plural elements.\nPatterns always available.\nData provider structs for time zones.\nConverts this packed data to a builder that can be mutated.\nPatterns for variant 0. If <code>None</code>, falls back to standard.\nPatterns for variant 1. If <code>None</code>, falls back to standard.\nPattern data for dates.\nSymbol data for the months, weekdays, and eras needed to ‚Ä¶\nString data for the name, abbreviation, and narrow form of ‚Ä¶\nPattern data for times.\nSymbol data for the day periods needed to format a time.\nSymbol data for era abbreviations.\nDate pattern data, broken down by pattern length.\nFormatting symbols for <code>DayPeriod</code>.\nSymbol data for day periods.\nSymbol data for eras.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPatterns used to combine date and time length patterns ‚Ä¶\nFormatting symbols for <code>Month</code>.\nSymbol data for months.\nSymbol data for era names.\nSymbol data for era narrow forms.\nData structs for date / time patterns that store data ‚Ä¶\nBy default a locale will prefer one hour cycle type over ‚Ä¶\nThese patterns are common uses of time formatting, broken ‚Ä¶\nThese patterns are common uses of time formatting, broken ‚Ä¶\nFormatting symbols for <code>Weekday</code>.\nSymbol data for weekdays.\nThe struct containing the symbol data for DayPeriod that ‚Ä¶\nSymbol data for the ‚Äúformat‚Äù style formatting of ‚Ä¶\nSymbol data for the ‚Äústand-alone‚Äù style formatting of ‚Ä¶\nLocale data for DayPeriod corresponding to the symbols.\nAbbreviated length symbol for ‚Äústand-alone‚Äù style ‚Ä¶\nAbbreviated length symbol for ‚Äúformat‚Äù style symbol ‚Ä¶\nDay period for AM (before noon).\nThe symbol data for ‚Äúformat‚Äù style symbols.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDay period for midnight, in locales that support it.\nNarrow length symbol for ‚Äústand-alone‚Äù style symbol ‚Ä¶\nNarrow length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\nDay period for noon, in locales that support it.\nDay period for PM (after noon).\nShort length symbol for ‚Äústand-alone‚Äù style symbol for ‚Ä¶\nShort length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\nThe symbol data for ‚Äústand-alone‚Äù style symbols.\nWide length symbol for ‚Äústand-alone‚Äù style symbol for ‚Ä¶\nWide length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\nThe struct containing the symbol data for Month that ‚Ä¶\nSymbol data for the ‚Äúformat‚Äù style formatting of Month.\nA calendar with an arbitrary number of months, potentially ‚Ä¶\nTwelve symbols for a solar calendar\nSymbol data for the ‚Äústand-alone‚Äù style formatting of ‚Ä¶\nLocale data for Month corresponding to the symbols.\nAbbreviated length symbol for ‚Äústand-alone‚Äù style ‚Ä¶\nAbbreviated length symbol for ‚Äúformat‚Äù style symbol ‚Ä¶\nThe symbol data for ‚Äúformat‚Äù style symbols.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the symbol for the given month code\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNarrow length symbol for ‚Äústand-alone‚Äù style symbol ‚Ä¶\nNarrow length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\nShort length symbol for ‚Äústand-alone‚Äù style symbol for ‚Ä¶\nShort length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\nThe symbol data for ‚Äústand-alone‚Äù style symbols.\nWide length symbol for ‚Äústand-alone‚Äù style symbol for ‚Ä¶\nWide length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\n‚Äúfull‚Äù length\nAn enum containing four lengths (full, long, medium, ‚Ä¶\nData struct for generic date/time patterns, broken down by ‚Ä¶\nData struct for date/time patterns broken down by pattern ‚Ä¶\n‚Äúlong‚Äù length\n‚Äúmedium‚Äù length\n‚Äúshort‚Äù length\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA full length date/time pattern.\nA full length glue pattern of other formatted elements.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA long length date/time pattern.\nA long length glue pattern of other formatted elements.\nA medium length date/time pattern.\nA medium length glue pattern of other formatted elements.\nA short length date/time pattern.\nA short length glue pattern of other formatted elements.\nThe struct containing the symbol data for Weekday that ‚Ä¶\nSymbol data for the ‚Äúformat‚Äù style formatting of ‚Ä¶\nSymbol data for the ‚Äústand-alone‚Äù style formatting of ‚Ä¶\nLocale data for Weekday corresponding to the symbols.\nAbbreviated length symbol for ‚Äústand-alone‚Äù style ‚Ä¶\nAbbreviated length symbol for ‚Äúformat‚Äù style symbol ‚Ä¶\nThe symbol data for ‚Äúformat‚Äù style symbols.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNarrow length symbol for ‚Äústand-alone‚Äù style symbol ‚Ä¶\nNarrow length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\nShort length symbol for ‚Äústand-alone‚Äù style symbol for ‚Ä¶\nShort length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\nThe symbol data for ‚Äústand-alone‚Äù style symbols.\nWide length symbol for ‚Äústand-alone‚Äù style symbol for ‚Ä¶\nWide length symbol for ‚Äúformat‚Äù style symbol for ‚Ä¶\nField symbol for the AM, PM day period.  (Does not include ‚Ä¶\nField symbol for calendar year (numeric).\nField symbol for cyclic year; used in calendars where ‚Ä¶\nAn enum for the possible symbols of a day field in a date ‚Ä¶\nDay number relative to a time period longer than a week ‚Ä¶\nField symbol for day of month (numeric).\nField symbol for the day of week occurrence relative to ‚Ä¶\nField symbol for day of year (numeric).\nAn enum for the possible symbols of a day period field in ‚Ä¶\nName of a period within a day.\n<code>ULE</code> type for DayPeriod\n<code>ULE</code> type for Day\nA second field with fractional digits.\nSeconds with fractional digits. If seconds are an integer, ‚Ä¶\n<code>ULE</code> type for DecimalSecond\nEra name.\nAn error relating to the field for a date pattern field as ‚Ä¶\nA field within a date pattern string, also referred to as ‚Ä¶\nAn enum representing the length of a field within a date ‚Ä¶\nVarious numeric overrides for datetime patterns as found ‚Ä¶\nA field symbol for a date formatting pattern.\n<code>ULE</code> type for <code>FieldSymbol</code>\n<code>ULE</code> type for <code>Field</code>\nNumeric: pad to 5 digits\nField symbol for month number or name in a pattern that ‚Ä¶\nField symbol for day of week (text format only).\nNumeric: pad to 4 digits\nField symbol for the generic non-location format of a time ‚Ä¶\nField symbol for numeric hour [0-11].\nField symbol for numeric hour [1-12].\nField symbol for numeric hour [0-23].\n<code>hanidays</code>\n<code>hanidec</code>\n<code>hebr</code>\nAn enum for the possible symbols of an hour field in a ‚Ä¶\nHour number within a day, possibly with day period.\n<code>ULE</code> type for Hour\nInvalid character for a field symbol.\nInvalid field symbol index.\nThe length of the field string within the pattern is ‚Ä¶\nAn error originating inside of the data provider.\nField symbol for either the ISO-8601 basic format or ‚Ä¶\nField symbol for either the ISO-8601 basic format or ‚Ä¶\n<code>jpnyear</code>\nAn error relating to the length of a field within a date ‚Ä¶\nField symbol for day of week; numeric formats produce a ‚Ä¶\nField symbol for the localized offset format of a time ‚Ä¶\nField symbol for any of: the time zone id, time zone ‚Ä¶\nField symbol for milliseconds in day (numeric).\nMinute number within an hour.\nAn enum for the possible symbols of a month field in a ‚Ä¶\nMonth number or month name.\n<code>ULE</code> type for Month\nField symbol for the am, pm, noon, midnight day period.\nFieldLength::One (numeric), but overridden with a ‚Ä¶\nNumeric: minimum digits\nField symbol for related ISO; some calendars which use ‚Ä¶\n<code>romanlow</code>\nAn enum for the possible symbols of a second field in a ‚Ä¶\nSeconds integer within a minute or milliseconds within a ‚Ä¶\nField symbol for second (numeric).\n<code>ULE</code> type for Second\nNumeric: pad to 6 digits\nField symbol for the specific non-location format of a ‚Ä¶\nField symbol for a ‚Äústand-alone‚Äù month number or name.\nField symbol for stand-alone local day of week number/name.\nA second with 1 fractional digit: ‚Äú1.0‚Äù\nA second with 2 fractional digits: ‚Äú1.00‚Äù\nA second with 3 fractional digits: ‚Äú1.000‚Äù\nA second with 4 fractional digits: ‚Äú1.0000‚Äù\nA second with 5 fractional digits: ‚Äú1.00000‚Äù\nA second with 6 fractional digits: ‚Äú1.000000‚Äù\nA second with 7 fractional digits: ‚Äú1.0000000‚Äù\nA second with 8 fractional digits: ‚Äú1.00000000‚Äù\nA second with 9 fractional digits: ‚Äú1.000000000‚Äù\nAn error relating to the field symbol for a date pattern ‚Ä¶\nNumeric: pad to 3 digits\nAn enum for the possible symbols of a time zone field in a ‚Ä¶\nTime zone as a name, a zone ID, or a ISO 8601 numerical ‚Ä¶\n<code>ULE</code> type for TimeZone\nNumeric: pad to 2 digits\nUnknown field symbol.\nAn enum for the possible symbols of a week field in a date ‚Ä¶\nWeek number or week name.\nAn enum for the possible symbols of a weekday field in a ‚Ä¶\nDay number or day name relative to a week.\n<code>ULE</code> type for Weekday\nAn enum for the possible symbols of a year field in a date ‚Ä¶\nYear number or year name.\n<code>ULE</code> type for Year\nConvert this to the corresponding string code\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRecover a <code>Field</code> (unstable) from an <code>ErrorField</code> (stable ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe length of the <code>Field</code>, which in conjunction with the ‚Ä¶\nThe field symbol for the <code>Field</code>, which corresponds to the ‚Ä¶\nConverts the given value to a <code>String</code>.\nThis calendar is cyclic (Chinese, Dangi), so it uses ‚Ä¶\n<code>DatetimeNamesDayChineseV1</code>\n<code>DatetimeNamesDayDangiV1</code>\n<code>DatetimeNamesDayPlaceholderV1</code>\n<code>DatetimeNamesDayperiodV1</code>\n<code>DatetimeNamesMonthBuddhistV1</code>\n<code>DatetimeNamesMonthChineseV1</code>\n<code>DatetimeNamesMonthCopticV1</code>\n<code>DatetimeNamesMonthDangiV1</code>\n<code>DatetimeNamesMonthEthiopianV1</code>\n<code>DatetimeNamesMonthGregorianV1</code>\n<code>DatetimeNamesMonthHebrewV1</code>\n<code>DatetimeNamesMonthHijriV1</code>\n<code>DatetimeNamesMonthIndianV1</code>\n<code>DatetimeNamesMonthJapaneseV1</code>\n<code>DatetimeNamesMonthJapanextV1</code>\n<code>DatetimeNamesMonthPersianV1</code>\n<code>DatetimeNamesMonthRocV1</code>\n<code>DatetimeNamesWeekdayV1</code>\n<code>DatetimeNamesYearBuddhistV1</code>\n<code>DatetimeNamesYearChineseV1</code>\n<code>DatetimeNamesYearCopticV1</code>\n<code>DatetimeNamesYearDangiV1</code>\n<code>DatetimeNamesYearEthiopianV1</code>\n<code>DatetimeNamesYearGregorianV1</code>\n<code>DatetimeNamesYearHebrewV1</code>\n<code>DatetimeNamesYearHijriV1</code>\n<code>DatetimeNamesYearIndianV1</code>\n<code>DatetimeNamesYearJapaneseV1</code>\n<code>DatetimeNamesYearJapanextV1</code>\n<code>DatetimeNamesYearPersianV1</code>\n<code>DatetimeNamesYearRocV1</code>\n<code>DatetimePatternsGlueV1</code>\nRe-export of day period names marker for more consistency\nThis calendar has a small, fixed set of eras with numeric ‚Ä¶\nThe default per-length patterns used for combining dates, ‚Ä¶\nMonth codes M01, M02, M03, .. M01L, M02L, ‚Ä¶\nThis represents the formatting to apply to numeric values ‚Ä¶\nMonth codes M01, M02, M03, .. (can allow for M13 onwards)\nNames that can be stored as a simple linear array.\nNames used for representing the month.\nCalendar-agnostic month name data marker\nThis calendar has a variable set of eras with numeric ‚Ä¶\nRe-export of weekday names marker for more consistency\nNames used for representing the year.\nCalendar-agnostic year name data marker\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelpers involving the data marker attributes used for date ‚Ä¶\nThe names, in order. Order specified on the struct docs.\nThe pattern\nField contexts supported in data marker attributes.\nDate, time, and time zone combinations supported in data ‚Ä¶\nField lengths supported in data marker attribute.\nPattern lengths supported in data marker attributes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a name data marker attribute from the enum values.\nParses a name data marker attribute to enum values.\nParses a pattern data marker attribute to enum values.\nUsed to represent either H11/H12, or H23. Skeletons only ‚Ä¶\nA field, like ‚Äúabbreviated months‚Äù. Mostly follows UTS ‚Ä¶\nAn element of a <code>GenericPattern</code>.\nCan either be fields::Hour::H11 or fields::Hour::H12\nfields::Hour::H23\nSmallest time unit = hours.\nA literal code point\nA literal code point.\nSmallest time unit = minutes.\nSmallest time unit = Nanoseconds.\nNo time is in the pattern.\nA low-level pattern parsing error.\nAn element of a <code>Pattern</code>.\nA single digit, 0..=9\nSmallest time unit = seconds.\nThe granularity of time represented in a <code>Pattern</code>. Ordered ‚Ä¶\nFigure out the coarse hour cycle given a pattern, which is ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves the granularity of time represented by a ‚Ä¶\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the other coarse hour cycle (map h11/h12 to h23/h24, ‚Ä¶\nReturns <code>true</code> if the most granular time being displayed ‚Ä¶\nReference <code>Pattern</code> implementation intended to follow Unicode\nRuntime <code>Pattern</code> implementation which is optimized for ‚Ä¶\nA fully-owned, non-zero-copy type corresponding to ‚Ä¶\nA fully-owned, non-zero-copy type corresponding to <code>Pattern</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a <code>Pattern</code> to a vector of pattern items.\nA raw, low-level pattern with literals and placeholders.\nA raw, low-level pattern for datetime formatting.\nMetadata associated with a <code>Pattern</code>.\n<code>VarULE</code> type for <code>Pattern</code>. See <code>Pattern</code> for documentation.\nBorrows a <code>Pattern</code> from another <code>Pattern</code>.\nThe function allows for creation of new DTF pattern from a ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>PatternMetadata</code> from the <code>TimeGranularity</code> enum.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe list of <code>GenericPatternItem</code>s.\nThe list of <code>PatternItem</code>s.\nPre-computed metadata about the pattern.\nConverts the given value to a <code>String</code>.\nConverts the given value to a <code>String</code>.\nAn ICU4X mapping to the CLDR timeZoneNames exemplar cities.\nAn ICU4X mapping to the CLDR timeZoneNames exemplar cities.\nAn ICU4X mapping to generic metazone names. See CLDR-JSON ‚Ä¶\nMetazone ID in a compact format\nAn ICU4X mapping to the metazones at a given period. See ‚Ä¶\nAn ICU4X mapping to specific metazone names. Specific ‚Ä¶\nAn ICU4X mapping to the CLDR timeZoneNames format strings. ‚Ä¶\n<code>TimezoneMetazonePeriodsV1</code>\n<code>TimezoneNamesCitiesOverrideV1</code>\n<code>TimezoneNamesCitiesRootV1</code>\n<code>TimezoneNamesEssentialsV1</code>\n<code>TimezoneNamesGenericLongV1</code>\n<code>TimezoneNamesGenericShortV1</code>\n<code>TimezoneNamesLocationsOverrideV1</code>\n<code>TimezoneNamesLocationsRootV1</code>\n<code>TimezoneNamesSpecificLongV1</code>\n<code>TimezoneNamesSpecificShortV1</code>\n<code>TimezoneNamesStandardLongV1</code>\nThe default mapping between metazone id and localized ‚Ä¶\nThe default mapping between metazone id and localized ‚Ä¶\nPer-zone exemplar city name. This is deduplicated against ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default mapping between period and offsets. The second ‚Ä¶\nPer-zone location display name\nThe localized offset format.\nThe separator sign\nThe localized unknown-offset format.\nThe localized zero-offset format.\nThe override mapping between timezone id and localized ‚Ä¶\nThe override mapping between timezone id and localized ‚Ä¶\nThe format string for a region‚Äôs daylight time.\nThe format string for a region‚Äôs generic time.\nMetazone Name with Location Pattern.\nThe format string for a region‚Äôs standard time.\nThe metazones for which the standard name is in ‚Ä¶\nTrait to consolidate data provider markers external to ‚Ä¶\nTrait to consolidate data provider markers defined by this ‚Ä¶\nTrait to consolidate data provider markers defined by this ‚Ä¶\nTrait to consolidate data provider markers external to ‚Ä¶\nTrait to consolidate data provider markers defined by this ‚Ä¶\nTrait to consolidate data provider markers defined by this ‚Ä¶\nTrait implemented on formattable datetime types.\nThe type for a <code>Buddhist</code> calendar\nA collection of marker types associated with all ‚Ä¶\nThe type for a <code>Chinese</code> calendar\nA calendar that can be found in CLDR.\nThe field is already loaded with a different length\nA type that can be converted into a specific calendar ‚Ä¶\nThe converted type. This can be the same as the receiver ‚Ä¶\nThe type for a <code>Coptic</code> calendar\nAssociated types for date formatting.\nThe type for a <code>Dangi</code> calendar\nAn implementation of <code>MaybePayload</code> that wraps an optional ‚Ä¶\nBorrowed version of <code>DataPayloadWithVariables</code>.\nA trait associating types for date formatting in any ‚Ä¶\nA trait associating types for date formatting in any ‚Ä¶\nMarker for loading date skeleton patterns.\nA trait associating constants and types implementing ‚Ä¶\nA trait for a <code>DateTimeNamesMarker</code> that can be created from ‚Ä¶\nTrait for a type that owns datetime names data, usually in ‚Ä¶\nMarker for resolving the day-of-month input field.\nMarker for resolving the day-of-week input field.\nMarker for resolving the day-of-year input field.\nMarker for loading day period names.\nMarker for loading core time zone data.\nThe type for an <code>Ethiopian</code> calendar (either era style)\nMarker for loading exemplar city names for time zone ‚Ä¶\nMarker for loading exemplar city names for time zone ‚Ä¶\nThe container‚Äôs field set doesn‚Äôt support the field\nImplementation of <code>CalMarkers</code> that includes data for all ‚Ä¶\nMarker for loading generic long time zone names.\nMarker for loading generic short time zone names.\nA type that can return a certain field <code>T</code>.\nMarker for loading the date/time glue pattern.\nThe type for a <code>Gregorian</code> calendar\nThe type for a <code>Hebrew</code> calendar\nThe type for Hirji calendars\nMarker for resolving the day-of-month input field.\nAn input associated with a fixed, static calendar.\nAn input that may be associated with a specific runtime ‚Ä¶\nThe type for a <code>Indian</code> calendar\nA calendar type that is supported by <code>DateTimeFormatter</code>.\nThe type for a <code>Japanese</code> calendar\nMarker for loading location names for time zone formatting\nMarker for loading location names for time zone formatting\nA type that may or may not be a <code>DataPayload</code> and may or may ‚Ä¶\nAn error returned by <code>MaybePayload</code>.\nMarker for loading metazone periods.\nMarker for resolving the day-of-week input field.\nCross-calendar data markers for month names.\nMarker for resolving the month input field.\nThe data marker for loading month symbols for this ‚Ä¶\nMarker for loading month names.\nTrait that associates a container for a payload ‚Ä¶\nMarker for resolving the any-calendar-kind input field.\nImplementation of <code>CalMarkers</code> that includes data for no ‚Ä¶\nThe type for a <code>Persian</code> calendar\nThe type for a <code>Roc</code> calendar\nMarker for resolving the day-of-year input field.\nCross-calendar data markers for date skeleta.\nThe data marker for loading skeleton patterns for this ‚Ä¶\nMarker for loading specific long time zone names.\nMarker for loading generic short time zone names.\nMarker for loading standard long time zone names.\nAssociated types for time formatting.\nA trait associating types for time formatting (input types ‚Ä¶\nMarker for loading time skeleton patterns.\nMarker for resolving the time zone id input field.\nMarker for resolving the time zone non-location display ‚Ä¶\nMarker for resolving the time zone offset input field.\nMarker for resolving the time zone variant input field.\nA trait associating types for date formatting in a ‚Ä¶\nTrait marking other traits that are considered unstable ‚Ä¶\nMarker for loading weekday names.\nMarker for loading weekday names.\nCross-calendar data markers for year names.\nMarker for resolving the year input field.\nThe data marker for loading year symbols for this calendar.\nMarker for loading year names.\nAssociated types for time zone formatting.\nA trait associating types for time zone formatting (input ‚Ä¶\nChecks whether this type is compatible with the given ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value of this trait‚Äôs field <code>T</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>self</code> to the specified <code>AnyCalendar</code>.\nAn input bag with all possible datetime input fields.\nDay of month\nDay of year\nThe <code>DecimalFormatter</code> has not been loaded.\nAn intermediate type during a datetime formatting ‚Ä¶\nError for the <code>TryWriteable</code> implementation of ‚Ä¶\nHour\nThe <code>CyclicYear::year</code> of the input is not valid for this ‚Ä¶\nThe era code of the input is not valid for this calendar.\nThe <code>MonthCode</code> of the input is not valid for this calendar.\nMinute\nAn input field (such as ‚Äúhour‚Äù or ‚Äúmonth‚Äù) is ‚Ä¶\nThe kind of a missing datetime input field.\nMonth\nThe localized names for a field have not been loaded.\nSecond\nSubsecond\nTime zone identifier\nTime zone name timestamp\nTime zone variant\nThe pattern contains a field symbol for which formatting ‚Ä¶\nThe pattern contains a field that has a valid symbol but ‚Ä¶\nWeekday\nYear\nCyclic year\nEra year\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the pattern used in this formatted value.\nSets all fields from a <code>Date</code> input.\nSets all fields from a <code>Time</code> input.\nSets the time zone ID.\nSets the local time for time zone name resolution.\nSets the time zone UTC offset.\nSets the time zone variant.\nMax\nValue")