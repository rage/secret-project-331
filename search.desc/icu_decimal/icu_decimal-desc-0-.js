searchState.loadedDescShard("icu_decimal", 0, "Formatting basic decimal numbers.\nA formatter for <code>Decimal</code>, rendering decimal digits in an â€¦\nThe preferences for fixed decimal formatting.\nAn intermediate structure returned by <code>DecimalFormatter</code>. â€¦\nExtends the preferences with the values from another set â€¦\nFormats a <code>Decimal</code>, returning a <code>FormattedDecimal</code>.\nFormats a <code>Decimal</code>, returning a <code>String</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTypes that can be fed to <code>DecimalFormatter</code> and their â€¦\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocale Preferences for the Preferences structure.\nThe userâ€™s preferred numbering system.\nOptions for <code>DecimalFormatter</code>.\nParts of a formatted decimal.\nLocale preferences used by this crate\nðŸš§ [Unstable] Data provider struct definitions for this â€¦\nConverts the given value to a <code>String</code>.\nCreates a new <code>DecimalFormatter</code> from compiled data and an â€¦\nA version of <code>Self::try_new</code> that uses custom data provided â€¦\nA version of [<code>Self :: try_new</code>] that uses custom data â€¦\nShow a minus sign on negative numbers and a plus sign on â€¦\nRender the sign according to locale preferences. In most â€¦\nA Type containing a <code>UnsignedDecimal</code> and a <code>Sign</code> to â€¦\nShow a minus sign on negative numbers and a plus sign on â€¦\nShow a minus sign on strictly negative numbers. Do not â€¦\nDo not display the sign. Positive and negative numbers are â€¦\nConfiguration for when to render the minus sign or plus â€¦\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAlways render grouping separators.\nRender grouping separators according to locale preferences.\nA bag of options defining how numbers will be formatted by â€¦\nConfiguration for how often to render grouping separators.\nRender grouping separators only if there are at least 2 â€¦\nNever render grouping separators.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhen to render grouping separators.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA <code>Part</code> used by <code>FormattedDecimal</code>.\nA <code>Part</code> used by <code>FormattedDecimal</code>.\nA <code>Part</code> used by <code>FormattedDecimal</code>.\nA <code>Part</code> used by <code>FormattedDecimal</code>.\nA <code>Part</code> used by <code>FormattedDecimal</code>.\nA <code>Part</code> used by <code>FormattedDecimal</code>.\n<strong>This is a reexport of a type in <code>icu::locale</code></strong>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBaked data\nThe digits for a given numbering system. This data ought â€¦\nA stack representation of the strings used in â€¦\nSymbols and metadata required for formatting a <code>Decimal</code>.\n<code>VarULE</code> type for <code>DecimalSymbolStrsBuilder</code>. See â€¦\nData marker for decimal symbols\nA collection of settings expressing where to put grouping â€¦\nBuild a <code>DecimalSymbolsStrs</code>\nAccess the VarULE type behind the unsized <code>decimal_separator</code>â€¦\nReturn thhe decimal separator\nCharacter used to separate the integer and fraction parts â€¦\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAccess the VarULE type behind the unsized â€¦\nReturn thhe decimal separator\nCharacter used to separate groups in the integer part of â€¦\nSettings used to determine where to place groups in the â€¦\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe minimum number of digits required before the first â€¦\nReturn (prefix, suffix) for the minus sign\nAccess the VarULE type behind the unsized <code>minus_sign_prefix</code>â€¦\nPrefix to apply when a negative sign is needed.\nAccess the VarULE type behind the unsized <code>minus_sign_suffix</code>â€¦\nSuffix to apply when a negative sign is needed.\nAccess the VarULE type behind the unsized <code>numsys</code> field\nReturn the numbering system\nThe numbering system to use.\nReturn (prefix, suffix) for the minus sign\nAccess the VarULE type behind the unsized <code>plus_sign_prefix</code> â€¦\nPrefix to apply when a positive sign is needed.\nAccess the VarULE type behind the unsized <code>plus_sign_suffix</code> â€¦\nSuffix to apply when a positive sign is needed.\nThe size of the first (lowest-magnitude) group.\nThe size of groups after the first group.\nString data for the symbols: +/- affixes and separators")