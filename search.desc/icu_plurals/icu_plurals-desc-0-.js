searchState.loadedDescShard("icu_plurals", 0, "Determine the plural category appropriate for a given ‚Ä¶\nCardinal plural forms express quantities of units such as ‚Ä¶\nAn error originating from <code>icu_provider</code>.\nCLDR ‚Äúfew‚Äù plural category. Used in Romanian, Polish, ‚Ä¶\nCLDR ‚Äúmany‚Äù plural category. Used in Polish, Russian, ‚Ä¶\nCLDR ‚Äúone‚Äù plural category. Signifies the singular ‚Ä¶\nOrdinal plural forms denote the order of items in a set ‚Ä¶\nCLDR ‚Äúother‚Äù plural category, used as a catch-all. ‚Ä¶\nThe plural categories are used to format messages with ‚Ä¶\n<code>ULE</code> type for PluralCategory\nA full plural operands representation of a number. See ‚Ä¶\nA type of a plural rule which can be associated with the ‚Ä¶\nA struct which provides an ability to retrieve an ‚Ä¶\nA list of error outcomes for various operations in this ‚Ä¶\nCLDR ‚Äútwo‚Äù plural category. Used in Arabic, Hebrew, ‚Ä¶\nCLDR ‚Äúzero‚Äù plural category. Used in Arabic and ‚Ä¶\nReturns an ordered iterator over variants of ‚Ä¶\nReturns all <code>Plural Categories</code> appropriate for a <code>PluralRules</code>‚Ä¶\nReturns the <code>Plural Category</code> appropriate for the given ‚Ä¶\nReturns the argument unchanged.\nConverts a <code>fixed_decimal::CompactDecimal</code> to <code>PluralOperands</code>‚Ä¶\nConverts a <code>fixed_decimal::FixedDecimal</code> to <code>PluralOperands</code>. ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the PluralCategory corresponding to given TR35 ‚Ä¶\nReturns the PluralCategory corresponding to given TR35 ‚Ä¶\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nüöß [Unstable] Data provider struct definitions for this ‚Ä¶\nüöß [Experimental] APIs and Data Structures for Plural ‚Ä¶\nConstructs a new <code>PluralRules</code> for a given locale and type ‚Ä¶\nConstructs a new <code>PluralRules</code> for a given locale for ‚Ä¶\nA version of <code>Self::try_new_cardinal</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_cardinal</code>] that uses custom ‚Ä¶\nA version of [<code>Self :: try_new_cardinal</code>] that uses custom ‚Ä¶\nConstructs a new <code>PluralRules</code> for a given locale for ‚Ä¶\nA version of <code>Self::try_new_ordinal</code> that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new_ordinal</code>] that uses custom ‚Ä¶\nA version of [<code>Self :: try_new_ordinal</code>] that uses custom ‚Ä¶\nA version of <code>Self::try_new</code> that uses custom data provided ‚Ä¶\nA version of [<code>Self :: try_new</code>] that uses custom data ‚Ä¶\nA version of [<code>Self :: try_new</code>] that uses custom data ‚Ä¶\nBaked data\nMarker type for <code>PluralRulesV1</code>: ‚Äúplurals/cardinal@1‚Äù\nMarker type for <code>PluralRulesV1</code>: ‚Äúplurals/ordinal@1‚Äù\nPlural rule strings conforming to UTS 35 syntax. Includes ‚Ä¶\nRule that matches <code>PluralCategory::Few</code>, or <code>None</code> if not ‚Ä¶\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRule that matches <code>PluralCategory::Many</code>, or <code>None</code> if not ‚Ä¶\nRule that matches <code>PluralCategory::One</code>, or <code>None</code> if not ‚Ä¶\nRule that matches <code>PluralCategory::Two</code>, or <code>None</code> if not ‚Ä¶\nRule that matches <code>PluralCategory::Zero</code>, or <code>None</code> if not ‚Ä¶")