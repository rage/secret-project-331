searchState.loadedDescShard("tokio_rustls", 0, "Asynchronous TLS/SSL streams for Tokio using Rustls.\nUnified TLS stream type\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFuture returned from <code>TlsConnector::connect</code> which will …\nLike Connect, but returns <code>IO</code> on failure.\nA wrapper around a <code>rustls::ClientConfig</code>, providing an …\nA wrapper around an underlying raw stream which implements …\nGet a read-only reference to underlying config\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNote: that it does not guarantee the final data to be sent.\nNote: that it does not guarantee the final data to be sent.\nFuture returned from <code>TlsAcceptor::accept</code> which will resolve\nLike Accept, but returns <code>IO</code> on failure.\nAn incoming connection received through <code>LazyConfigAcceptor</code>.\nA wrapper around a <code>rustls::ServerConfig</code>, providing an …\nA wrapper around an underlying raw stream which implements …\nGet a read-only reference to underlying config\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new object from an <code>IO</code> transport and prior TLS …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNote: that it does not guarantee the final data to be sent.\nNote: that it does not guarantee the final data to be sent.\nTakes back the client connection. Will return <code>None</code> if …")