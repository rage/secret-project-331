[package]
name = "headless-lms-actix"
version = "0.1.0"
authors = ["Henrik Nygren <nygrenh@gmail.com>"]
edition = "2018"
default-run = "headless-lms-actix"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
# To add a new dependency, search for it using `cargo search` and take the latest version of the package
# and the comment from there.

[dependencies]
# Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust
actix-web = "=4.0.0-beta.5"
# Tokio-based single-threaded async runtime for the Actix ecosystem
actix-rt = "2.1.0"
# Static file serving for Actix Web
actix-files = "0.5.0"
# Multipart form support for Actix web.
actix-multipart = "0.4.0-beta.4"
# Strongly Typed Mimes
mime = "0.3.16"
# An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications.
tokio = { version = "1.2.0", features = ["fs", "io-util"] }
# Additional utilities for working with Tokio.
tokio-util = { version = "0.6.3", features = ["io"] }
# Utilities to work with `Stream` and `tokio`.
tokio-stream = "0.1.6"
# An implementation of futures and streams featuring zero allocations, composability, and iteraâ€¦
futures = "0.3.13"
# A `dotenv` implementation for Rust
dotenv = "0.15.0"
# A simple library to work with listenfds passed from the outside (systemd/catflap socket activation)
listenfd = "0.3.3"
# Flexible concrete Error type built on std::error::Error
anyhow = "1.0.38"
# ðŸ§° The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries
sqlx = { version = "0.5.1", features = [ "postgres", "runtime-actix-rustls", "uuid", "chrono", "json", "offline" ] }
# A library to generate and parse UUIDs.
uuid = { version = "0.8.2", features = ["serde", "v4"] }
# A generic serialization/deserialization framework
serde = { version = "1.0.123", features = ["derive"]}
# Date and time library for Rust
chrono = { version = "0.4.19", features = ["serde"] }
# A JSON serialization file format
serde_json = "1.0.62"
# Adds #[derive(x)] macros for more traits
derive_more = "0.99.11"
# A library to create HTTP error response content for APIs based on RFC 7807
http-api-problem = "0.21.0"
# A crate for uploading files to Google cloud storage, and for generating download urls.
cloud-storage = "0.8.0"
# A library for managing a temporary directory and deleting all contents when it's dropped.
tempdir = "0.3.7"
# Type erasure for async trait methods
async-trait = "0.1.42"
# Types and traits for working with bytes
bytes = "1.0.1"
# Extra iterator adaptors, iterator methods, free functions, and macros.
itertools = "0.10.0"
# Random number generators and other randomness functionality.
rand = "0.8.3"
# the BLAKE3 hash function
blake3 = "0.3.7"
# Recursively walk a directory.
walkdir = "2.3.2"
# higher level HTTP client library
reqwest = { version = "0.11.3", features=["brotli", "gzip"] }
# Sessions for Actix web
actix-session = "0.5.0-beta.1"
# An extensible, strongly-typed implementation of OAuth2
oauth2 = "4"
# URL library for Rust, based on the WHATWG URL Standard
url = "2"
# Application-level tracing for Rust.
tracing = "0.1"
# Utilities for implementing and composing `tracing` subscribers.
tracing-subscriber = "0.2"
# Structured logging middleware for actix-web.
tracing-actix-web = "=0.4.0-beta.4"
# Utilities for enriching errors with `tracing`.
tracing-error = "0.1"
# Provides compatibility between `tracing` and the `log` crate.
tracing-log = "0.1"
# This library provides a convenient derive macro for the standard library's std::error::Error trait.
thiserror = "1"

# restricting the transitive dependencies of actix-web during beta
actix-http = "=3.0.0-beta.5"
actix-service = "=2.0.0-beta.5"

[dev-dependencies]
# Overwrite `assert_eq!` and `assert_ne!` with drop-in replacements, adding colorful diffs.
pretty_assertions = "0.7.1"
