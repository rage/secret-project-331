[package]
name = "headless-lms-certificates"
version = "0.1.0"
authors = ["Henrik Nygren <nygrenh@gmail.com>"]
edition = "2021"
rust-version = "1.56.0"  # minimum required Rust version, update if you use a new API
license = "Apache-2.0"

[dependencies]
headless-lms-utils = { path = "../utils" }
headless-lms-models = { path = "../models" }

# An SVG rendering library.
resvg = "0.32.0"
# An SVG simplification library.
usvg = "0.32.0"
# A tiny Skia subset ported to Rust.
tiny-skia = "0.9.0"
# A simple, streaming XML writer.
xmlwriter = "0.1.0"
# High performance xml reader and writer
quick-xml = "0.28.2"
# International Components for Unicode
icu = { version = "1.2.0", features=["std", "serde"]}
# Pre-built test data for ICU4X
icu_testdata = "1.2.0"
# Trait and struct definitions for the ICU data provider
icu_provider = "1.2.0"
# Single assignment cells and lazy values.
once_cell = "1.17.1"
# URL library for Rust, based on the WHATWG URL Standard
url = "2.3.1"
# Application-level tracing for Rust.
tracing = "0.1.37"
# Flexible concrete Error type built on std::error::Error
anyhow = "1.0.71"
# Date and time library for Rust
chrono = "0.4.24"
# A library to generate and parse UUIDs.
uuid = { version = "1.3.2", features = ["serde", "v4", "v5"] }
# An implementation of futures and streams featuring zero allocations, composability, and iteraâ€¦
futures = "0.3.28"
# supports loading ICU4X data from a single serialized blob
icu_provider_blob = "1.2.0"
