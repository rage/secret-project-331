-- organizations
COMMENT ON COLUMN organizations.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN organizations.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN organizations.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN organizations.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN organizations.name IS 'Human readable name of the organization e.g. "University of Helsinki, Department of Computer Science".';
COMMENT ON COLUMN organizations.slug IS 'A unique abbreviation of the organization name that''s visible in URLs e.g. "uh-cs".';
-- courses
COMMENT ON COLUMN courses.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN courses.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN courses.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN courses.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN courses.name IS 'Human readable name of the course e.g. "Introduction to Birds".';
COMMENT ON COLUMN courses.slug IS 'A unique abbreviation of the course name that''s visible in URLs e.g. "introduction-to-birds".';
COMMENT ON COLUMN courses.organization_id IS 'Organization that manages and organizes this course.';
-- pages
COMMENT ON COLUMN pages.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN pages.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN pages.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN pages.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN pages.course_id IS 'Course which this page is part of. Students access the page through the course.';
COMMENT ON COLUMN pages.content IS 'Page content in an abstract form. It is an array of JSON objects that are blocks. A block could be a for example a paragraph, or a image or an exercise.';
COMMENT ON COLUMN pages.url_path IS 'Relative url to the page within a course. It is autogenerated by default in frontend for ease of use, but can be customized if desired. Example: "/part-1/3-hawaiian-crow".';
COMMENT ON COLUMN pages.title IS 'Showed as the main heading to the students visiting the page. Also used in the html title attribute.';
COMMENT ON COLUMN pages.chapter_id IS 'Which chapter this page is part of. If null, the page is considered a top level page which is meant for generic information about the course. A top level page could be for example the course front page ("/") or a frequently asked questions page ("/faq").';
COMMENT ON COLUMN pages.order_number IS 'A number used for sorting the pages when listing them. Pages are sorted within a chapter, or within the group of top level pages.';
-- submissions
COMMENT ON COLUMN submissions.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN submissions.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN submissions.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN submissions.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN submissions.exercise_id IS 'Which exercise this submission belongs to. The field is here for making certain SQL queries easier, the same information is available from submission.exercise_task.exercise_id.';
COMMENT ON COLUMN submissions.course_id IS 'Which course this submission belongs to. The field is here for making certain SQL queries easier, the same information is available from submission.exercise_task.exercise.course_id.';
COMMENT ON COLUMN submissions.exercise_task_id IS 'Exercise task that was attempted in this submission.';
COMMENT ON COLUMN submissions.data_json IS 'The content of the submission. We don''t know what''s the structure of this field as it depends on the exercise service.';
COMMENT ON COLUMN submissions.grading_id IS 'A submission can have many gradings. This points to the latest grading for this submission where we''re determining the given score for this submission. If the system grades the submission again and wishes to update the score, it will update this id to point to the new grading.';
COMMENT ON COLUMN submissions.metadata IS 'Additional data attached to the submission';
COMMENT ON COLUMN submissions.user_id IS 'The user that returned the submission';
COMMENT ON COLUMN submissions.course_instance_id IS 'Which course instance this submission was returned to. We need this field because each course instance has different submission lists. A submission to one course instance should not influence other submissions made later on to other course instance. This is useful for example if we have a course that never changes but it has a yearly run with a course variant for each year. Associating the submission with the course instance allows students to take the course even if they have tried a previous variant.';
-- exercises
COMMENT ON COLUMN exercises.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN exercises.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN exercises.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN exercises.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN exercises.course_id IS 'Course where this exercise belongs to. Exercises are related to courses and not to course instances because if a course instance wants to have a different exercise from other course instances, the teacher is supposed to clone the course to create a new one.';
COMMENT ON COLUMN exercises.name IS 'A human readable name of the exercise.';
COMMENT ON COLUMN exercises.deadline IS 'Overrides the deadline from the chapter. Should be null if we want to use the same deadline as in the chapter.';
COMMENT ON COLUMN exercises.page_id IS 'Page, where this exercise can be found on.';
COMMENT ON COLUMN exercises.score_maximum IS 'Maximum number of points that can be obtained from this exercise.';
COMMENT ON COLUMN exercises.order_number IS 'Used for sorting the exercises within a chapter.';
-- exercise_tasks
COMMENT ON COLUMN exercise_tasks.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN exercise_tasks.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN exercise_tasks.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN exercise_tasks.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN exercise_tasks.exercise_id IS 'Exercise where this task is an option.';
COMMENT ON COLUMN exercise_tasks.exercise_type IS 'Identifier for the exercise service type used for this task. The same identifier needs to exist in exercise_services.slug for the exercise task to work.';
COMMENT ON COLUMN exercise_tasks.assignment IS 'Exercise assignment (e.g. "In this exercise solve prove the statement P=NP.") in an abstract form. Uses exactly the same format as pages.content.';
COMMENT ON COLUMN exercise_tasks.private_spec IS 'Fully defines an exercise task: tells how the exercise is structured and how it should be checked for correctness. All other specs can be derived from this one. The system will never share this spec to students because it contains all correctness checking specifications, including the ones that are meant for server-only checks.';
COMMENT ON COLUMN exercise_tasks.spec_file_id IS 'Should be called private_spec_file_path. Same as private_spec but the specification is in a file due to its large size or because it''s binary.';
COMMENT ON COLUMN exercise_tasks.public_spec IS 'Defines how the initial exercise is specified so that a frontend can show an exercise in its initial state. Derived from private_spec.';
-- chapters
COMMENT ON COLUMN chapters.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN chapters.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN chapters.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN chapters.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN chapters.name IS 'A human readable name of the chapter. Shown in the chapter lists.';
COMMENT ON COLUMN chapters.course_id IS 'Which course this chapter belongs to.';
COMMENT ON COLUMN chapters.front_page_id IS 'Page which is the front page of the chapter i.e. the page where the students end up when they select a chapter in the course material.';
COMMENT ON COLUMN chapters.opens_at IS 'If set, the chapter is closed to students before the timestamp and opens automatically at the given time. Students are informed of the opening time. If null, the chapter is always open.';
-- gradings
COMMENT ON COLUMN gradings.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN gradings.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN gradings.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger';
COMMENT ON COLUMN gradings.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN gradings.submission_id IS 'The submission that this grading grades.';
COMMENT ON COLUMN gradings.course_id IS 'The course of this grading. Exists to make certain SQL queries easier. The same information can be obtained though grading.submission.course_instance.course_id.';
COMMENT ON COLUMN gradings.exercise_id IS 'Exercise this grading is related to. Here to make certain SQL queries easier. The same information can be obtained though gradings.exercise_task.exercise_id.';
COMMENT ON COLUMN gradings.grading_priority IS 'If there is queue with the gradings, processing priority where gradings with lower value will be processed first.';
COMMENT ON COLUMN gradings.grading_progress IS 'How the grading progress is progressing. See https://rage.github.io/secret-project-331/headless_lms_actix/models/exercises/enum.GradingProgress.html.';
COMMENT ON COLUMN gradings.score_given IS 'How many points were given from in this grading. This has been scaled to the max point that are specified in the exercise editor.';
-- column will be renamed in the next pr
COMMENT ON COLUMN gradings.unscaled_max_points IS 'Score maximum we got from exercise service when doing to grading. This has not been adjusted to the max score that was specified in the exercise editor.';
-- column will be renamed in the next pr
COMMENT ON COLUMN gradings.unscaled_score_maximum IS 'How many points exercise service wanted to give from this exercise. This has not been adjusted to the max score that was specified in the exercise editor.';
COMMENT ON COLUMN gradings.grading_started_at IS 'When the grading request was sent to the exercise service.';
COMMENT ON COLUMN gradings.grading_completed_at IS 'When we got the grading result from the exercise service.';
COMMENT ON COLUMN gradings.feedback_json IS 'Feedback from grading in a general form. We don''t know the structure of this and it is up to the frontend to decide how to render this. Alternatively this can be omitted and feedback_text can be set.';
COMMENT ON COLUMN gradings.feedback_text IS 'Feedback from grading in a textual form. We know how to render this to the student, but while simplifying the rendering, this limits the sophistication of the feedback we can display. For more fancy feedback this is left null and feedback_json is used instead.';
COMMENT ON COLUMN gradings.user_points_update_strategy IS 'When we get results from a grading, how should we update the user''s points. See https://rage.github.io/secret-project-331/headless_lms_actix/models/gradings/enum.UserPointsUpdateStrategy.html.';
-- regradings
COMMENT ON COLUMN regradings.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN regradings.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN regradings.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN regradings.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN regradings.regrading_started_at IS 'When we started to post the grading tasks in this regrading to exercise services';
COMMENT ON COLUMN regradings.regrading_completed_at IS 'When we got all results from all the grading tasks from exercise services.';
COMMENT ON COLUMN regradings.total_grading_progress IS 'What is the overall status of the regrading operation. See https://rage.github.io/secret-project-331/headless_lms_actix/models/exercises/enum.GradingProgress.html.';
-- regrading_submissions
COMMENT ON COLUMN regrading_submissions.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN regrading_submissions.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN regrading_submissions.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN regrading_submissions.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN regrading_submissions.regrading_id IS 'The regrading operation where the submission specified in submission_id belongs to.';
COMMENT ON COLUMN regrading_submissions.submission_id IS 'The submission that is regraded in the regrading operation specified in regrading_id.';
COMMENT ON COLUMN regrading_submissions.grading_before_regrading IS 'The grading object that was set to submission.grading_id before the regrading operation started i.e. the grading where the submission got its points before the regrading operation started.';
COMMENT ON column regrading_submissions.grading_after_regrading IS 'The grading object that was created in this grading operation.';
-- users
COMMENT ON COLUMN users.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN users.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN users.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN users.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN users.upstream_id IS 'User''s id in upstream system (currently TMC). Only used to interact with the upstream authentication system. Internally the preferred identifier is user.id.';
-- roles
COMMENT ON COLUMN roles.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN roles.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN roles.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN roles.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN roles.user_id IS 'User to whom the role applies.';
COMMENT ON COLUMN roles.organization_id IS 'If not null, scopes the role to be valid only inside an organization. If course_id is not null, it takes precedence and this is ignored.';
COMMENT ON COLUMN roles.course_id IS 'If not null, scopes the role to be valid only withing a course.';
COMMENT ON COLUMN roles.role IS 'The role that this row gives membership to. See https://rage.github.io/secret-project-331/headless_lms_actix/models/roles/enum.UserRole.html.';
-- course_instances
COMMENT ON COLUMN course_instances.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN course_instances.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN course_instances.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN course_instances.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN course_instances.course_id IS 'The course instance is an instance of this course.';
COMMENT ON COLUMN course_instances.starts_at IS 'Timestamp when the course instance begins to be available for the students.';
COMMENT ON COLUMN course_instances.ends_at IS 'Timestamp when the course instance ceases to be available for the students.';
COMMENT ON COLUMN course_instances.name IS 'If null, the course instance is a default instance. Database enforces that there can be only one default course instance per course. Otherwise this is a human readable name of the course instance e.g. "Introduction to Birds, Fall 2021 -- Open University". Note that we can have a course with no default course instance.';
COMMENT ON COLUMN course_instances.name IS 'A human readable description of the course instance, should tell students who are supposed to pick this course instance e.g. "For students that are participating in the Open University course BIRD-001.".';
COMMENT ON COLUMN course_instances.variant_status IS 'Tells whether the course variant is active or not. Might be removed from db in favor of starts_at and ends_at. See https://rage.github.io/secret-project-331/headless_lms_actix/models/course_instances/enum.VariantStatus.html.';
-- user_exercise_states
COMMENT ON COLUMN user_exercise_states.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN user_exercise_states.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN user_exercise_states.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN user_exercise_states.user_id IS 'The user whose exercise state is defined in this row. Part of the primary key.';
COMMENT ON COLUMN user_exercise_states.exercise_id IS 'The exercise which the exercise state is about. Part of the primary key.';
COMMENT ON COLUMN user_exercise_states.course_instance_id IS 'The course instance related to this state. All course instances have their separate states so that students can take courses multiple times in different instances. Part of the primary key.';
COMMENT ON COLUMN user_exercise_states.score_given IS 'If not null, indicates how many points the student has gotten from this exercise.';
COMMENT ON COLUMN user_exercise_states.grading_progress IS 'Tells how grading of this exercise is progressing towards completion. See https://rage.github.io/secret-project-331/headless_lms_actix/models/exercises/enum.GradingProgress.html. Takes into account more holistic picture of the grading progress than gradings.grading_progress. For example, this takes peer reviews into account and other extra requirements into account.';
COMMENT ON COLUMN user_exercise_states.activity_progress IS 'Tells how close the activity required from the user is from completion. See: https://rage.github.io/secret-project-331/headless_lms_actix/models/exercises/enum.ActivityProgress.html. The activity is not done before the student has completed everything that is required of them (like giving a peer review).';
COMMENT ON COLUMN user_exercise_states.selected_exercise_task_id IS 'If an exercise has multiple possible exercise tasks and we''re students a random exercise task, we save the given exercise task here so that we can give the same task back if the user reloads the page and so that we can check during submission that the user is not posting an answer to a task that has not been given to them.';
-- exercise_services
COMMENT ON COLUMN exercise_services.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN exercise_services.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN exercise_services.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN exercise_services.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN exercise_services.name IS 'Human readable name of the exercise service e.g. "Test My Code" or "Quizzes".';
COMMENT ON COLUMN exercise_services.slug IS 'Identifier for the exercise_service e.g. "test-my-code" or "example-exercise". The same string must be used in exercise_tasks.exercise_type.';
COMMENT ON COLUMN exercise_services.public_url IS 'An url to the service info endpoint that is accessible from the internet for enabling communication with the services outside the cluster. The base url of the service is derived from this and given to browser frontends so that they can access the iframes of this exercise service.';
COMMENT ON COLUMN exercise_services.internal_url IS 'An url to the service info endpoint that is accessible only from inside the cluster for enabling communication with the service without leaving the cluster. If not set, public_url will be used instead.';
COMMENT ON COLUMN exercise_services.max_reprocessing_submissions_at_once IS 'When reprocessing submissions limit the number of concurrent posted submissions to this number. Note that this only affects reprocessing.';
-- exercise_service_info
COMMENT ON COLUMN exercise_service_info.exercise_iframe_path IS 'A unique, stable identifier for the record. Exercise service id is the primary key because each exercise service can only have one exercise service info record.';
COMMENT ON COLUMN exercise_service_info.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN exercise_service_info.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN exercise_service_info.editor_iframe_path IS 'URL to the iframe where the exercises from this exercise service can be edited';
COMMENT ON COLUMN exercise_service_info.exercise_iframe_path IS 'URL to the iframe where the students can complete an exercise from this exercise service.';
COMMENT ON COLUMN exercise_service_info.grade_endpoint_path IS 'URL to an endpoint which will grade submissions for the exercises of this exercise service. Used by the backend.';
-- course_instance_enrollments
COMMENT ON COLUMN course_instance_enrollments.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN course_instance_enrollments.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN course_instance_enrollments.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN course_instance_enrollments.user_id IS 'The user that has enrolled to a course instance. Part of the primary key.';
COMMENT ON COLUMN course_instance_enrollments.course_instance_id IS 'The course instance where the user has enrolled to. Part of the primary key.';
COMMENT ON COLUMN course_instance_enrollments.current IS 'Whether this enrollment is the latest one. Only one enrollment can be current so that we can figure out which course instance the user is doing without having to delete old enrollments.';
-- email_deliveries
COMMENT ON COLUMN email_deliveries.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN email_deliveries.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN email_deliveries.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN email_deliveries.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN email_deliveries.email_template_id IS 'The email template that is being sent in this email delivery.';
COMMENT ON COLUMN email_deliveries.error IS 'If null, no error has occurred with sending. Otherwise the field contains the error as a string.';
COMMENT ON COLUMN email_deliveries.sent IS 'Whether the email was sent or not. If false, a background daemon will try to send this email message.';
COMMENT ON COLUMN email_deliveries.user_id IS 'The user to whom the email should be sent to. If the email template contains dynamic portions with user-specific information (like a grade from a course) this user_id will be used to derive the information.';
-- email_templates
COMMENT ON COLUMN email_templates.id IS 'A unique, stable identifier for the record.';
COMMENT ON COLUMN email_templates.created_at IS 'Timestamp when the record was created.';
COMMENT ON COLUMN email_templates.updated_at IS 'Timestamp when the record was last updated. The field is updated automatically by the set_timestamp trigger.';
COMMENT ON COLUMN email_templates.deleted_at IS 'Timestamp when the record was deleted. If null, the record is not deleted.';
COMMENT ON COLUMN email_templates.content IS 'Content of the email in an abstract form. Same structure for the data as in pages.content but the allowed blocks here is limited. The html and plain text versions of the email are generated from this.';
COMMENT ON COLUMN email_templates.name IS 'Human readable name of the email template for telling the templates apart from each other in the teacher dashboard.';
COMMENT ON COLUMN email_templates.subject IS 'Subject of the email. This is what the receiver will see when they get the message.';
COMMENT ON COLUMN email_templates.exercise_completions_threshold IS 'If sending the email is automated, send the email when the student has completed at least n exercise from a course instance.';
COMMENT ON COLUMN email_templates.points_threshold IS 'If the sending of the email is automated, send the email once the student has gotten at least n points from a course instance.';
COMMENT ON COLUMN email_templates.course_instance_id IS 'Which course instance this email is from. Used for bookkeeping, deriving dynamic parts of the message and also used for the automatic email sending thresholds.';
