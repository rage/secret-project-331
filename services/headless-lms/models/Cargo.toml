[package]
name = "headless-lms-models"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
# To add a new dependency, search for it using `cargo search` and take the latest version of the package
# and the comment from there.
[dependencies]
headless-lms-utils = { path = "../utils" }

# An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications.
tokio = { version = "1.32.0", features = [
  "fs",
  "io-util",
  "sync",
  "parking_lot",
] }
# An implementation of futures and streams featuring zero allocations, composability, and iteraâ€¦
futures = "0.3.28"
# A `dotenv` implementation for Rust
dotenv = "0.15.0"
# ðŸ§° The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries
sqlx = { version = "0.7.1", features = [
  "postgres",
  "runtime-tokio",
  "tls-rustls",
  "uuid",
  "chrono",
  "json",
] }
# A library to generate and parse UUIDs.
uuid = { version = "1.4.1", features = ["serde", "v4", "v5"] }
# A generic serialization/deserialization framework
serde = { version = "1.0.188", features = ["derive"] }
# Date and time library for Rust
chrono = { version = "0.4.30", features = ["serde"] }
# A JSON serialization file format
serde_json = "1.0.105"
# Adds #[derive(x)] macros for more traits
derive_more = "0.99.17"
# Extra iterator adaptors, iterator methods, free functions, and macros.
itertools = "0.11.0"
# URL library for Rust, based on the WHATWG URL Standard
url = "2.4.1"
# Application-level tracing for Rust.
tracing = "0.1.37"
# Utilities for enriching errors with `tracing`.
tracing-error = "0.2.0"
#  A library to acquire a stack trace (backtrace) at runtime in a Rust program. Should be removed after Rust 1.65.
backtrace = "0.3.69"
# This library provides a convenient derive macro for the standard library's std::error::Error trait.
thiserror = "1.0.48"
# generate typescript bindings from rust types
ts-rs = { git = "https://github.com/Heliozoa/ts-rs", rev = "07712bf04007472aeeb065091261b3b64c019381", features = [
  "bytes-impl",
  "chrono-impl",
  "serde-compat",
  "serde-json-impl",
  "uuid-impl",
], optional = true }
# Email client
lettre = "0.10.4"
# Random number generators and other randomness functionality.
rand = "0.8.5"
# Flexible concrete Error type built on std::error::Error
anyhow = "1.0.75"

[dev-dependencies]
# Overwrite `assert_eq!` and `assert_ne!` with drop-in replacements, adding colorful diffs.
pretty_assertions = "1.4.0"
# Provides compatibility between `tracing` and the `log` crate.
tracing-log = "0.1.3"
# Utilities for enriching errors with `tracing`.
tracing-error = "0.2.0"
# Utilities for implementing and composing `tracing` subscribers.
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
# HTTP mocking for Rust.
mockito = "1.1.0"

[features]
ts_rs = ["ts-rs", "headless-lms-utils/ts_rs"]
