[package]
name = "headless-lms-server"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
# To add a new dependency, search for it using `cargo search` and take the latest version of the package
# and the comment from there.
[dependencies]
headless-lms-certificates = { path = "../certificates" }
headless-lms-models = { path = "../models" }
headless-lms-utils = { path = "../utils" }
headless-lms-chatbot = { path = "../chatbot" }
mooc-langs-api = { path = "../langs-api" }
doc-macro = { path = "../doc-macro" }

# Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust
actix-web = "4.11.0"
# Static file serving for Actix Web
actix-files = "0.6.6"
# Multipart form support for Actix web.
actix-multipart = "0.7.2"
# Strongly Typed Mimes
mime = "0.3.17"
# An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications.
tokio.workspace = true
# Utilities to work with `Stream` and `tokio`.
tokio-stream = "0.1.17"
# An implementation of futures and streams featuring zero allocations, composability, and iteraâ€¦
futures = "0.3.31"
# Common utilities and extension traits for the futures-rs library.
futures-util = "0.3.31"
# A `dotenv` implementation for Rust
dotenv = "0.15.0"
# A simple library to work with listenfds passed from the outside (systemd/catflap socket activation)
listenfd = "1.0.2"
# Flexible concrete Error type built on std::error::Error
anyhow = "1.0.98"
# ðŸ§° The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries
sqlx.workspace = true
# A library to generate and parse UUIDs.
uuid = { version = "1.17.0", features = ["serde", "v4", "v5"] }
# A generic serialization/deserialization framework
serde = { version = "1.0.219", features = ["derive"] }
# Date and time library for Rust
chrono = { version = "0.4.41", features = ["serde"] }
# A JSON serialization file format
serde_json = "1.0.142"
# Adds #[derive(x)] macros for more traits
derive_more = { version = "2.0.1", features = ["full"] }
# Types and traits for working with bytes
bytes = "1.10.1"
# Extra iterator adaptors, iterator methods, free functions, and macros.
itertools = "0.14.0"
# the BLAKE3 hash function
blake3 = "1.8.2"
# Recursively walk a directory.
walkdir = "2.5.0"
# higher level HTTP client library
reqwest = { version = "0.12.22", features = ["brotli", "gzip", "json", "http2", "rustls-tls", "stream"] }
# Sessions for Actix web
actix-session = { version = "0.10.1", features = ["cookie-session"] }
# An extensible, strongly-typed implementation of OAuth2
oauth2 = "5.0.0"
# URL library for Rust, based on the WHATWG URL Standard
url = "2.5.4"
# Application-level tracing for Rust.
tracing = "0.1.41"
# Utilities for implementing and composing `tracing` subscribers.
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
# Utilities for enriching errors with `tracing`.
tracing-error = "0.2.1"
#  A library to acquire a stack trace (backtrace) at runtime in a Rust program. Should be removed after Rust 1.65.
backtrace = "0.3.75"
# Provides compatibility between `tracing` and the `log` crate.
tracing-log = "0.2.0"
# This library provides a convenient derive macro for the standard library's std::error::Error trait.
thiserror = "2.0.12"
# generate typescript bindings from rust types
ts-rs = { git = "https://github.com/Heliozoa/ts-rs", rev = "94bf3c040ece6627b69f0d7095c0a5e2984adc86", features = [
  "chrono-impl",
  "serde-compat",
  "serde-json-impl",
  "uuid-impl",
], optional = true }
# restricting the transitive dependencies of actix-web during beta.
# HTTP primitives for the Actix ecosystem .
actix-http = "3.11.0"
# Fast CSV parsing with support for serde.
csv = "1.3.1"
# Email client
lettre = "0.11.18"
# An implementation of regular expressions for Rust.
regex = "1.11.1"
# Single assignment cells and lazy values.
once_cell = "1.21.3"
# Rate limiting middleware for actix-web
actix-extensible-rate-limit = "0.4.0"
# Detect if a user-agent is a known bot
isbot = "0.1.3"
# user-agent strings parser
woothee = "0.13.0"
# Bindings to libgit2 for interoperating with git repositories.
git2 = "0.20.2"
# A library for managing temporary files and directories.
tempfile = "3.20.0"
#  Binding for the zstd compression library.
zstd = "0.13.3" # matches the version from actix-http
# A Rust implementation of a TAR file reader and writer.
tar = "0.4.44"
# Utilities for random number generation
rand = "0.9.2"
# JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.
jwt = "0.16.0"
# Pure Rust implementation of the Hash-based Message Authentication Code (HMAC).
hmac = "0.12.1"
# Pure Rust implementation of the SHA-2 hash function family.
sha2 = "0.10.9"
# Websocket support for actix-web
actix-web-actors = "4.3.1"
# Actors for actix-web-actors
actix = "0.13.5"
# Type erasure for async trait methods
async-trait = "0.1.88"
# Utilities for working with Tokio.
tokio-util = "0.7.15"
# Asynchronous streams using async & await notation
async-stream = "0.3.6"
# Secret value wrapper to avoid leaking secrets in logs and memory
secrecy = { version = "0.10.3", features = ["serde"] }
# Password hashing using Argon2id
argon2 = "0.5.3"

[dev-dependencies]
# Overwrite `assert_eq!` and `assert_ne!` with drop-in replacements, adding colorful diffs.
pretty_assertions = "1.4.1"
# HTTP mocking for Rust.
mockito = "1.7.0"
# Random number generators and other randomness functionality.
rand = "0.9.2"

[features]
ts_rs = ["ts-rs", "headless-lms-models/ts_rs", "headless-lms-utils/ts_rs"]
