#[cfg(test)]
use crate::{
    controllers::{
        auth::Login,
        main_frontend::{
            courses::GetFeedbackQuery, exercises::ExerciseSubmissions, feedback::MarkAsRead,
            proposed_edits::GetEditProposalsQuery,
        },
        ErrorResponse, UploadResult,
    },
    models::{
        chapters::*, course_instance_enrollments::*, course_instances::*, courses::*,
        email_templates::*, exams::*, exercise_service_info::*, exercise_services::*,
        exercise_slides::*, exercise_tasks::*, exercises::*, feedback::*, gradings::*,
        organizations::*, page_history::*, pages::*, playground_examples::*,
        proposed_block_edits::*, proposed_page_edits::*, submissions::*, user_course_settings::*,
        user_exercise_states::*,
    },
    utils::pagination::Pagination,
};

ts_rs::export! {
  Chapter,
  EmailTemplate,
  CmsPageExercise,
  CmsPageExerciseSlide,
  CmsPageExerciseTask,
  CmsPageUpdate,
  ContentManagementPage,
  CourseStructure,
  Page,
  UploadResult,
  PageWithExercises,
  UserCourseInstanceProgress,
  UserCourseInstanceChapterProgress,
  UserCourseInstanceChapterExerciseProgress,
  CourseInstanceEnrollment,
  CourseInstance,
  ChapterWithStatus,
  CourseMaterialExercise,
  PageRoutingDataWithChapterStatus,
  SubmissionResult,
  ExerciseService,
  ExerciseServiceNewOrUpdate,
  Course,
  Exercise,
  ExerciseSlide,
  ExerciseServiceInfoApi,
  SubmissionCount,
  SubmissionCountByWeekAndHour,
  SubmissionCountByExercise,
  ExerciseSubmissions,
  Organization,
  NewChapter,
  ChapterUpdate,
  EmailTemplateNew,
  EmailTemplateUpdate,
  NewPage,
  NewSubmission,
  NewCourse,
  CourseUpdate,
  Login,
  SubmissionInfo,
  PageSearchResult,
  PageSearchRequest,
  PageHistory,
  HistoryChangeReason,
  HistoryRestoreData,
  Feedback,
  MarkAsRead,
  NewFeedback,
  FeedbackBlock,
  FeedbackCount,
  GetFeedbackQuery,
  CourseInstanceForm,
  PageProposal,
  BlockProposal,
  ProposalCount,
  EditProposalInfo,
  GetEditProposalsQuery,
  NewProposedPageEdits,
  ErrorResponse,
  Exam,
  // dependencies
  VariantStatus,
  ChapterStatus,
  CourseMaterialExerciseTask,
  CourseMaterialExerciseServiceInfo,
  ExerciseStatus,
  Submission,
  Grading,
  ActivityProgress,
  GradingProgress,
  UserPointsUpdateStrategy,
  Pagination,
  ProposalStatus,
  NewProposedBlockEdit,
  BlockProposalInfo,
  BlockProposalAction,
  // returned from the API as serde_json::Value
  ExerciseTask,
  ExerciseWithExerciseTasks,
  UserCourseSettings,
  PlaygroundExample,PlaygroundExampleData,
  CoursePageWithUserData
    => "../../shared-module/src/bindings.ts"
}
