initSidebarItems({"constant":[["DUMMY_SP","Dummy span, both position and length are zero, syntax context is zero as well."],["NO_EXPANSION",""]],"enum":[["FileName","Differentiates between real files and common virtual files."],["NonNarrowChar","Identifies an offset of a non-narrow character in a SourceFile"],["SpanLinesError",""],["SpanSnippetError",""]],"mod":[["hygiene","Machinery for hygienic macros, inspired by the `MTWT[1]` paper."]],"static":[["GLOBALS","Storage for span hygiene data."]],"struct":[["BytePos","A byte offset. Keep this small (currently 32-bits), as AST contains a lot of them."],["CharPos","A character offset. Because of multibyte utf8 characters, a byte offset is not equivalent to a character offset. The SourceMap will convert BytePos values to CharPos values as necessary."],["DefaultSourceMapGenConfig",""],["DistinctSources",""],["FileLines",""],["FilePathMapping",""],["Globals",""],["LineCol","Used to create a `.map` file."],["LineInfo",""],["Loc","A source code location used for error reporting"],["LocWithOpt","A source code location used as the result of `lookup_char_pos_adj`"],["MalformedSourceMapPositions",""],["Mark","A mark is a unique id associated with a macro expansion."],["MultiByteChar","Identifies an offset of a multi-byte character in a SourceFile"],["MultiSpan","A collection of spans. Spans have two orthogonal attributes:"],["RealFileLoader","A FileLoader that uses std::fs to load real files."],["SourceFile","A single source in the SourceMap."],["SourceFileAndBytePos",""],["SourceFileAndLine",""],["SourceMap","The interner for spans."],["Span","Spans represent a region of code, used for error reporting. Positions in spans are absolute positions from the beginning of the `source_map`, not positions relative to `SourceFile`s. Methods on the `SourceMap` can be used to relate spans back to the original source. You must be careful if the span crosses more than one file - you will not be able to use many of the functions on spans in `source_map` and you cannot assume that the length of the `span = hi - lo`; there may be space in the `BytePos` range between files."],["SpanLabel",""],["StableSourceFileId",""],["SyntaxContext","A SyntaxContext represents a chain of macro expansions (represented by marks)."]],"trait":[["FileLoader","An abstraction over the fs operations used by the Parser."],["Pos",""],["SourceMapGenConfig",""]],"type":[["FileLinesResult",""]]});