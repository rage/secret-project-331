initSidebarItems({"enum":[["Delimiter","Describes how a sequence of token trees is delimited."],["Element","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any."],["Pair","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any."],["TokenTree","A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`)."]],"struct":[["Group","A delimited token stream."],["Literal","A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`), byte character (`b'a'`), an integer or floating point number with or without a suffix (`1`, `1u8`, `2.3`, `2.3f32`)."],["Punct","A `Punct` is a single punctuation character like `+`, `-` or `#`."],["Punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`."],["Span","A region of source code, along with macro expansion information."],["TokenStream","An abstract stream of tokens, or more concretely a sequence of token trees."]],"trait":[["ItemImplExt","Extension trait for `ItemImpl` (impl block)."],["PairExt",""],["ToTokens","Types that can be interpolated inside a `quote!` invocation."]]});