initSidebarItems({"fn":[["dynamic_filter_fn","Constructs a [`DynFilterFn`] from a function or closure that returns `true` if a span or event should be enabled within a particular span context."],["filter_fn","Constructs a [`FilterFn`], from a function or closure that returns `true` if a span or event should be enabled, based on its `Metadata`."]],"mod":[["targets","A filter that enables or disables spans and events based on their target and level."]],"struct":[["BadFieldName","Indicates that a field name specified in a filter directive was invalid."],["Directive","A single filtering directive."],["DynFilterFn","A filter implemented by a closure or function pointer that determines whether a given span or event is enabled dynamically, potentially based on the current span context."],["EnvFilter","A `Layer` which filters spans and events based on a set of filter directives."],["FilterFn","A filter implemented by a closure or function pointer that determines whether a given span or event is enabled, based on its `Metadata`."],["FilterId","Uniquely identifies an individual `Filter` instance in the context of a `Subscriber`."],["Filtered","A [`Layer`] that wraps an inner [`Layer`] and adds a `Filter` which controls what spans and events are enabled for that layer."],["FromEnvError","Indicates that an error occurred while parsing a `EnvFilter` from an environment variable."],["LevelFilter","A filter comparable to a verbosity [`Level`]."],["LevelParseError","Indicates that a string could not be parsed to a valid level."],["ParseError","Indicates that a string could not be parsed as a filtering directive."]]});