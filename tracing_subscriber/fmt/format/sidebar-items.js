initSidebarItems({"fn":[["debug_fn","Returns a `FormatFields` implementation that formats fields using the provided function or closure."],["format","Returns the default configuration for an [event formatter]."],["json","Returns the default configuration for a JSON [event formatter]."]],"struct":[["Compact","Marker for `Format` that indicates that the compact log format should be used."],["DefaultFields","The default `FormatFields` implementation."],["DefaultVisitor","The visitor produced by `DefaultFields`’s `MakeVisitor` implementation."],["FieldFn","A `FormatFields` implementation that formats fields by calling a function or closure."],["FieldFnVisitor","The visitor produced by `FieldFn`’s `MakeVisitor` implementation."],["FmtSpan","Configures what points in the span lifecycle are logged as events."],["Format","A pre-configured event formatter."],["Full","Marker for `Format` that indicates that the verbose log format should be used."],["Json","Marker for `Format` that indicates that the verbose JSON log format should be used."],["JsonFields","The JSON `FormatFields` implementation."],["JsonVisitor","The visitor produced by `JsonFields`’s `MakeVisitor` implementation."],["Pretty","An excessively pretty, human-readable event formatter."],["PrettyFields","An excessively pretty, human-readable `MakeVisitor` implementation."],["PrettyVisitor","The visitor produced by [`Pretty`]’s `MakeVisitor` implementation."]],"trait":[["FormatEvent","A type that can format a tracing `Event` for a `fmt::Write`."],["FormatFields","A type that can format a set of fields to a `fmt::Write`."]]});