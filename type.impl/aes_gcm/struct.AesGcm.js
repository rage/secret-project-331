(function() {
    var type_impls = Object.fromEntries([["aes_gcm",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AeadCore-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#251-259\">source</a><a href=\"#impl-AeadCore-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Aes, NonceSize, TagSize&gt; <a class=\"trait\" href=\"aes_gcm/trait.AeadCore.html\" title=\"trait aes_gcm::AeadCore\">AeadCore</a> for <a class=\"struct\" href=\"aes_gcm/struct.AesGcm.html\" title=\"struct aes_gcm::AesGcm\">AesGcm</a>&lt;Aes, NonceSize, TagSize&gt;<div class=\"where\">where\n    NonceSize: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>&gt;,\n    TagSize: <a class=\"trait\" href=\"aes_gcm/trait.TagSize.html\" title=\"trait aes_gcm::TagSize\">TagSize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.NonceSize\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#256\">source</a><a href=\"#associatedtype.NonceSize\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"aes_gcm/trait.AeadCore.html#associatedtype.NonceSize\" class=\"associatedtype\">NonceSize</a> = NonceSize</h4></section></summary><div class='docblock'>The length of a nonce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.TagSize\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#257\">source</a><a href=\"#associatedtype.TagSize\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"aes_gcm/trait.AeadCore.html#associatedtype.TagSize\" class=\"associatedtype\">TagSize</a> = TagSize</h4></section></summary><div class='docblock'>The maximum length of the nonce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CiphertextOverhead\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#258\">source</a><a href=\"#associatedtype.CiphertextOverhead\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"aes_gcm/trait.AeadCore.html#associatedtype.CiphertextOverhead\" class=\"associatedtype\">CiphertextOverhead</a> = <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a></h4></section></summary><div class='docblock'>The upper bound amount of additional space required to support a\nciphertext vs. a plaintext.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate_nonce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/aead/lib.rs.html#151-153\">source</a><a href=\"#method.generate_nonce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.AeadCore.html#method.generate_nonce\" class=\"fn\">generate_nonce</a>(\n    rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>,\n) -&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>, Self::<a class=\"associatedtype\" href=\"aes_gcm/trait.AeadCore.html#associatedtype.NonceSize\" title=\"type aes_gcm::AeadCore::NonceSize\">NonceSize</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>, Self::<a class=\"associatedtype\" href=\"aes_gcm/trait.AeadCore.html#associatedtype.NonceSize\" title=\"type aes_gcm::AeadCore::NonceSize\">NonceSize</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Generate a random nonce for this AEAD algorithm. <a href=\"aes_gcm/trait.AeadCore.html#method.generate_nonce\">Read more</a></div></details></div></details>","AeadCore","aes_gcm::Aes128Gcm","aes_gcm::Aes256Gcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AeadInPlace-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#261-312\">source</a><a href=\"#impl-AeadInPlace-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Aes, NonceSize, TagSize&gt; <a class=\"trait\" href=\"aes_gcm/trait.AeadInPlace.html\" title=\"trait aes_gcm::AeadInPlace\">AeadInPlace</a> for <a class=\"struct\" href=\"aes_gcm/struct.AesGcm.html\" title=\"struct aes_gcm::AesGcm\">AesGcm</a>&lt;Aes, NonceSize, TagSize&gt;<div class=\"where\">where\n    Aes: <a class=\"trait\" href=\"cipher/block/trait.BlockCipher.html\" title=\"trait cipher::block::BlockCipher\">BlockCipher</a> + <a class=\"trait\" href=\"crypto_common/trait.BlockSizeUser.html\" title=\"trait crypto_common::BlockSizeUser\">BlockSizeUser</a>&lt;BlockSize = <a class=\"type\" href=\"typenum/generated/consts/type.U16.html\" title=\"type typenum::generated::consts::U16\">U16</a>&gt; + <a class=\"trait\" href=\"cipher/block/trait.BlockEncrypt.html\" title=\"trait cipher::block::BlockEncrypt\">BlockEncrypt</a>,\n    NonceSize: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>&gt;,\n    TagSize: <a class=\"trait\" href=\"aes_gcm/trait.TagSize.html\" title=\"trait aes_gcm::TagSize\">TagSize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encrypt_in_place_detached\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#267-285\">source</a><a href=\"#method.encrypt_in_place_detached\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.AeadInPlace.html#tymethod.encrypt_in_place_detached\" class=\"fn\">encrypt_in_place_detached</a>(\n    &amp;self,\n    nonce: &amp;<a class=\"type\" href=\"aes_gcm/type.Nonce.html\" title=\"type aes_gcm::Nonce\">Nonce</a>&lt;NonceSize&gt;,\n    associated_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>],\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"aes_gcm/type.Tag.html\" title=\"type aes_gcm::Tag\">Tag</a>&lt;TagSize&gt;, <a class=\"struct\" href=\"aes_gcm/struct.Error.html\" title=\"struct aes_gcm::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Encrypt the data in-place, returning the authentication tag</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrypt_in_place_detached\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#287-311\">source</a><a href=\"#method.decrypt_in_place_detached\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.AeadInPlace.html#tymethod.decrypt_in_place_detached\" class=\"fn\">decrypt_in_place_detached</a>(\n    &amp;self,\n    nonce: &amp;<a class=\"type\" href=\"aes_gcm/type.Nonce.html\" title=\"type aes_gcm::Nonce\">Nonce</a>&lt;NonceSize&gt;,\n    associated_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>],\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>],\n    tag: &amp;<a class=\"type\" href=\"aes_gcm/type.Tag.html\" title=\"type aes_gcm::Tag\">Tag</a>&lt;TagSize&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"aes_gcm/struct.Error.html\" title=\"struct aes_gcm::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decrypt the message in-place, returning an error in the event the provided\nauthentication tag does not match the given ciphertext (i.e. ciphertext\nis modified/unauthentic)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encrypt_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/aead/lib.rs.html#280-285\">source</a><a href=\"#method.encrypt_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.AeadInPlace.html#method.encrypt_in_place\" class=\"fn\">encrypt_in_place</a>(\n    &amp;self,\n    nonce: &amp;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>, Self::<a class=\"associatedtype\" href=\"aes_gcm/trait.AeadCore.html#associatedtype.NonceSize\" title=\"type aes_gcm::AeadCore::NonceSize\">NonceSize</a>&gt;,\n    associated_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>],\n    buffer: &amp;mut dyn <a class=\"trait\" href=\"aead/trait.Buffer.html\" title=\"trait aead::Buffer\">Buffer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"aes_gcm/struct.Error.html\" title=\"struct aes_gcm::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Encrypt the given buffer containing a plaintext message in-place. <a href=\"aes_gcm/trait.AeadInPlace.html#method.encrypt_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrypt_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/aead/lib.rs.html#304-309\">source</a><a href=\"#method.decrypt_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.AeadInPlace.html#method.decrypt_in_place\" class=\"fn\">decrypt_in_place</a>(\n    &amp;self,\n    nonce: &amp;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>, Self::<a class=\"associatedtype\" href=\"aes_gcm/trait.AeadCore.html#associatedtype.NonceSize\" title=\"type aes_gcm::AeadCore::NonceSize\">NonceSize</a>&gt;,\n    associated_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>],\n    buffer: &amp;mut dyn <a class=\"trait\" href=\"aead/trait.Buffer.html\" title=\"trait aead::Buffer\">Buffer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"aes_gcm/struct.Error.html\" title=\"struct aes_gcm::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decrypt the message in-place, returning an error in the event the\nprovided authentication tag does not match the given ciphertext. <a href=\"aes_gcm/trait.AeadInPlace.html#method.decrypt_in_place\">Read more</a></div></details></div></details>","AeadInPlace","aes_gcm::Aes128Gcm","aes_gcm::Aes256Gcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#192\">source</a><a href=\"#impl-Clone-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Aes: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, NonceSize: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, TagSize&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"aes_gcm/struct.AesGcm.html\" title=\"struct aes_gcm::AesGcm\">AesGcm</a>&lt;Aes, NonceSize, TagSize&gt;<div class=\"where\">where\n    TagSize: <a class=\"trait\" href=\"aes_gcm/trait.TagSize.html\" title=\"trait aes_gcm::TagSize\">TagSize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#192\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"aes_gcm/struct.AesGcm.html\" title=\"struct aes_gcm::AesGcm\">AesGcm</a>&lt;Aes, NonceSize, TagSize&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","aes_gcm::Aes128Gcm","aes_gcm::Aes256Gcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAes%3E-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#228-249\">source</a><a href=\"#impl-From%3CAes%3E-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Aes, NonceSize, TagSize&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Aes&gt; for <a class=\"struct\" href=\"aes_gcm/struct.AesGcm.html\" title=\"struct aes_gcm::AesGcm\">AesGcm</a>&lt;Aes, NonceSize, TagSize&gt;<div class=\"where\">where\n    Aes: <a class=\"trait\" href=\"crypto_common/trait.BlockSizeUser.html\" title=\"trait crypto_common::BlockSizeUser\">BlockSizeUser</a>&lt;BlockSize = <a class=\"type\" href=\"typenum/generated/consts/type.U16.html\" title=\"type typenum::generated::consts::U16\">U16</a>&gt; + <a class=\"trait\" href=\"cipher/block/trait.BlockEncrypt.html\" title=\"trait cipher::block::BlockEncrypt\">BlockEncrypt</a>,\n    TagSize: <a class=\"trait\" href=\"aes_gcm/trait.TagSize.html\" title=\"trait aes_gcm::TagSize\">TagSize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#233-248\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cipher: Aes) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Aes>","aes_gcm::Aes128Gcm","aes_gcm::Aes256Gcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KeyInit-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#218-226\">source</a><a href=\"#impl-KeyInit-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Aes, NonceSize, TagSize&gt; <a class=\"trait\" href=\"aes_gcm/trait.KeyInit.html\" title=\"trait aes_gcm::KeyInit\">KeyInit</a> for <a class=\"struct\" href=\"aes_gcm/struct.AesGcm.html\" title=\"struct aes_gcm::AesGcm\">AesGcm</a>&lt;Aes, NonceSize, TagSize&gt;<div class=\"where\">where\n    Aes: <a class=\"trait\" href=\"crypto_common/trait.BlockSizeUser.html\" title=\"trait crypto_common::BlockSizeUser\">BlockSizeUser</a>&lt;BlockSize = <a class=\"type\" href=\"typenum/generated/consts/type.U16.html\" title=\"type typenum::generated::consts::U16\">U16</a>&gt; + <a class=\"trait\" href=\"cipher/block/trait.BlockEncrypt.html\" title=\"trait cipher::block::BlockEncrypt\">BlockEncrypt</a> + <a class=\"trait\" href=\"aes_gcm/trait.KeyInit.html\" title=\"trait aes_gcm::KeyInit\">KeyInit</a>,\n    TagSize: <a class=\"trait\" href=\"aes_gcm/trait.TagSize.html\" title=\"trait aes_gcm::TagSize\">TagSize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#223-225\">source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.KeyInit.html#tymethod.new\" class=\"fn\">new</a>(key: &amp;<a class=\"type\" href=\"aes_gcm/type.Key.html\" title=\"type aes_gcm::Key\">Key</a>&lt;Self&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Create new value from fixed size key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_from_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crypto_common/lib.rs.html#129\">source</a><a href=\"#method.new_from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.KeyInit.html#method.new_from_slice\" class=\"fn\">new_from_slice</a>(key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"crypto_common/struct.InvalidLength.html\" title=\"struct crypto_common::InvalidLength\">InvalidLength</a>&gt;</h4></section></summary><div class='docblock'>Create new value from variable size key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crypto_common/lib.rs.html#141\">source</a><a href=\"#method.generate_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.KeyInit.html#method.generate_key\" class=\"fn\">generate_key</a>(\n    rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>,\n) -&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>, Self::<a class=\"associatedtype\" href=\"aes_gcm/trait.KeySizeUser.html#associatedtype.KeySize\" title=\"type aes_gcm::KeySizeUser::KeySize\">KeySize</a>&gt;</h4></section></summary><div class='docblock'>Generate random key using the provided <a href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\"><code>CryptoRng</code></a>.</div></details></div></details>","KeyInit","aes_gcm::Aes128Gcm","aes_gcm::Aes256Gcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KeySizeUser-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#210-216\">source</a><a href=\"#impl-KeySizeUser-for-AesGcm%3CAes,+NonceSize,+TagSize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Aes, NonceSize, TagSize&gt; <a class=\"trait\" href=\"aes_gcm/trait.KeySizeUser.html\" title=\"trait aes_gcm::KeySizeUser\">KeySizeUser</a> for <a class=\"struct\" href=\"aes_gcm/struct.AesGcm.html\" title=\"struct aes_gcm::AesGcm\">AesGcm</a>&lt;Aes, NonceSize, TagSize&gt;<div class=\"where\">where\n    Aes: <a class=\"trait\" href=\"aes_gcm/trait.KeySizeUser.html\" title=\"trait aes_gcm::KeySizeUser\">KeySizeUser</a>,\n    TagSize: <a class=\"trait\" href=\"aes_gcm/trait.TagSize.html\" title=\"trait aes_gcm::TagSize\">TagSize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.KeySize\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/aes_gcm/lib.rs.html#215\">source</a><a href=\"#associatedtype.KeySize\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"aes_gcm/trait.KeySizeUser.html#associatedtype.KeySize\" class=\"associatedtype\">KeySize</a> = &lt;Aes as <a class=\"trait\" href=\"aes_gcm/trait.KeySizeUser.html\" title=\"trait aes_gcm::KeySizeUser\">KeySizeUser</a>&gt;::<a class=\"associatedtype\" href=\"aes_gcm/trait.KeySizeUser.html#associatedtype.KeySize\" title=\"type aes_gcm::KeySizeUser::KeySize\">KeySize</a></h4></section></summary><div class='docblock'>Key size in bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crypto_common/lib.rs.html#85\">source</a><a href=\"#method.key_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"aes_gcm/trait.KeySizeUser.html#method.key_size\" class=\"fn\">key_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return key size in bytes.</div></details></div></details>","KeySizeUser","aes_gcm::Aes128Gcm","aes_gcm::Aes256Gcm"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[23297]}