(function() {var type_impls = {
"chumsky":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Map%3CA,+F,+O%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chumsky/combinator.rs.html#947-951\">source</a><a href=\"#impl-Clone-for-Map%3CA,+F,+O%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"chumsky/combinator/struct.Map.html\" title=\"struct chumsky::combinator::Map\">Map</a>&lt;A, F, O&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/combinator.rs.html#948-950\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","chumsky::combinator::IgnoreThen","chumsky::combinator::ThenIgnore"],["<section id=\"impl-Copy-for-Map%3CA,+F,+O%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chumsky/combinator.rs.html#946\">source</a><a href=\"#impl-Copy-for-Map%3CA,+F,+O%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"chumsky/combinator/struct.Map.html\" title=\"struct chumsky::combinator::Map\">Map</a>&lt;A, F, O&gt;</h3></section>","Copy","chumsky::combinator::IgnoreThen","chumsky::combinator::ThenIgnore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parser%3CI,+U%3E-for-Map%3CA,+F,+O%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chumsky/combinator.rs.html#953-980\">source</a><a href=\"#impl-Parser%3CI,+U%3E-for-Map%3CA,+F,+O%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, O, A: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, O, Error = E&gt;, U, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(O) -&gt; U, E: <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt; <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U&gt; for <a class=\"struct\" href=\"chumsky/combinator/struct.Map.html\" title=\"struct chumsky::combinator::Map\">Map</a>&lt;A, F, O&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"chumsky/trait.Parser.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = E</h4></section></summary><div class='docblock'>The type of errors emitted by this parser.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_recovery\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#195-202\">source</a><a href=\"#method.parse_recovery\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.parse_recovery\" class=\"fn\">parse_recovery</a>&lt;'a, Iter, S&gt;(\n    &amp;self,\n    stream: S\n) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Iter: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (I, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>)&gt; + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"chumsky/stream/struct.Stream.html\" title=\"struct chumsky::stream::Stream\">Stream</a>&lt;'a, I, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>, Iter&gt;&gt;,</div></h4></section></summary><div class='docblock'>Parse a stream of tokens, yielding an output if possible, and any errors encountered along the way. <a href=\"chumsky/trait.Parser.html#method.parse_recovery\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_recovery_verbose\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#217-227\">source</a><a href=\"#method.parse_recovery_verbose\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.parse_recovery_verbose\" class=\"fn\">parse_recovery_verbose</a>&lt;'a, Iter, S&gt;(\n    &amp;self,\n    stream: S\n) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Iter: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (I, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>)&gt; + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"chumsky/stream/struct.Stream.html\" title=\"struct chumsky::stream::Stream\">Stream</a>&lt;'a, I, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>, Iter&gt;&gt;,</div></h4></section></summary><div class='docblock'>Parse a stream of tokens, yielding an output if possible, and any errors encountered along the way. Unlike\n<a href=\"chumsky/trait.Parser.html#method.parse_recovery\" title=\"method chumsky::Parser::parse_recovery\"><code>Parser::parse_recovery</code></a>, this function will produce verbose debugging output as it executes. <a href=\"chumsky/trait.Parser.html#method.parse_recovery_verbose\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#235-249\">source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.parse\" class=\"fn\">parse</a>&lt;'a, Iter, S&gt;(&amp;self, stream: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;O, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Iter: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (I, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>)&gt; + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"chumsky/stream/struct.Stream.html\" title=\"struct chumsky::stream::Stream\">Stream</a>&lt;'a, I, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>, Iter&gt;&gt;,</div></h4></section></summary><div class='docblock'>Parse a stream of tokens, yielding an output <em>or</em> any errors that were encountered along the way. <a href=\"chumsky/trait.Parser.html#method.parse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#259-265\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.debug\" class=\"fn\">debug</a>&lt;T&gt;(self, x: T) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Debug.html\" title=\"struct chumsky::combinator::Debug\">Debug</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + 'static,</div></h4></section></summary><div class='docblock'>Include this parser in the debugging output produced by <a href=\"chumsky/trait.Parser.html#method.parse_recovery_verbose\" title=\"method chumsky::Parser::parse_recovery_verbose\"><code>Parser::parse_recovery_verbose</code></a>. <a href=\"chumsky/trait.Parser.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#293-299\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.map\" class=\"fn\">map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Map.html\" title=\"struct chumsky::combinator::Map\">Map</a>&lt;Self, F, O&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(O) -&gt; U,</div></h4></section></summary><div class='docblock'>Map the output of this parser to another value. <a href=\"chumsky/trait.Parser.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_with_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#324-330\">source</a><a href=\"#method.map_with_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.map_with_span\" class=\"fn\">map_with_span</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.MapWithSpan.html\" title=\"struct chumsky::combinator::MapWithSpan\">MapWithSpan</a>&lt;Self, F, O&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(O, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>) -&gt; U,</div></h4></section></summary><div class='docblock'>Map the output of this parser to another value, making use of the pattern’s span when doing so. <a href=\"chumsky/trait.Parser.html#method.map_with_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_err\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#339-345\">source</a><a href=\"#method.map_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.map_err\" class=\"fn\">map_err</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.MapErr.html\" title=\"struct chumsky::combinator::MapErr\">MapErr</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>) -&gt; Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>,</div></h4></section></summary><div class='docblock'>Map the primary error of this parser to another value. <a href=\"chumsky/trait.Parser.html#method.map_err\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or_else\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#354-360\">source</a><a href=\"#method.or_else\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.or_else\" class=\"fn\">or_else</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.OrElse.html\" title=\"struct chumsky::combinator::OrElse\">OrElse</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;O, Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Map the primary error of this parser to a result. If the result is <a href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok</code></a>, the parser succeeds with that value. <a href=\"chumsky/trait.Parser.html#method.or_else\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_err_with_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#371-377\">source</a><a href=\"#method.map_err_with_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.map_err_with_span\" class=\"fn\">map_err_with_span</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.MapErrWithSpan.html\" title=\"struct chumsky::combinator::MapErrWithSpan\">MapErrWithSpan</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>) -&gt; Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>,</div></h4></section></summary><div class='docblock'>Map the primary error of this parser to another value, making use of the span from the start of the attempted\nto the point at which the error was encountered. <a href=\"chumsky/trait.Parser.html#method.map_err_with_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#399-405\">source</a><a href=\"#method.try_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.try_map\" class=\"fn\">try_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.TryMap.html\" title=\"struct chumsky::combinator::TryMap\">TryMap</a>&lt;Self, F, O&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(O, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;U, Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>After a successful parse, apply a fallible function to the output. If the function produces an error, treat it\nas a parsing error. <a href=\"chumsky/trait.Parser.html#method.try_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#431-437\">source</a><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.validate\" class=\"fn\">validate</a>&lt;F, U&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Validate.html\" title=\"struct chumsky::combinator::Validate\">Validate</a>&lt;Self, O, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(O, &lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Span\" title=\"type chumsky::error::Error::Span\">Span</a>, &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>)) -&gt; U,</div></h4></section></summary><div class='docblock'>Validate an output, producing non-terminal errors if it does not fulfil certain criteria. <a href=\"chumsky/trait.Parser.html#method.validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.labelled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#470-476\">source</a><a href=\"#method.labelled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.labelled\" class=\"fn\">labelled</a>&lt;L&gt;(self, label: L) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Label.html\" title=\"struct chumsky::combinator::Label\">Label</a>&lt;Self, L&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a> as <a class=\"trait\" href=\"chumsky/error/trait.Error.html\" title=\"trait chumsky::error::Error\">Error</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/error/trait.Error.html#associatedtype.Label\" title=\"type chumsky::error::Error::Label\">Label</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Label the pattern parsed by this parser for more useful error messages. <a href=\"chumsky/trait.Parser.html#method.labelled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#497-503\">source</a><a href=\"#method.to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.to\" class=\"fn\">to</a>&lt;U&gt;(self, x: U) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.To.html\" title=\"struct chumsky::combinator::To\">To</a>&lt;Self, O, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Transform all outputs of this parser to a pretermined value. <a href=\"chumsky/trait.Parser.html#method.to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.foldl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#526-533\">source</a><a href=\"#method.foldl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.foldl\" class=\"fn\">foldl</a>&lt;A, B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Foldl.html\" title=\"struct chumsky::combinator::Foldl\">Foldl</a>&lt;Self, F, A, B&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; A,</div></h4></section></summary><div class='docblock'>Left-fold the output of the parser into a single value. <a href=\"chumsky/trait.Parser.html#method.foldl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.foldr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#560-568\">source</a><a href=\"#method.foldr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.foldr\" class=\"fn\">foldr</a>&lt;'a, A, B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Foldr.html\" title=\"struct chumsky::combinator::Foldr\">Foldr</a>&lt;Self, F, A, B&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    A::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>, B) -&gt; B + 'a,</div></h4></section></summary><div class='docblock'>Right-fold the output of the parser into a single value. <a href=\"chumsky/trait.Parser.html#method.foldr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ignored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#591-596\">source</a><a href=\"#method.ignored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.ignored\" class=\"fn\">ignored</a>(self) -&gt; <a class=\"type\" href=\"chumsky/combinator/type.Ignored.html\" title=\"type chumsky::combinator::Ignored\">Ignored</a>&lt;Self, O&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Ignore the output of this parser, yielding <code>()</code> as an output instead. <a href=\"chumsky/trait.Parser.html#method.ignored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#641-647\">source</a><a href=\"#method.then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.then\" class=\"fn\">then</a>&lt;U, P&gt;(self, other: P) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Then.html\" title=\"struct chumsky::combinator::Then\">Then</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Parse one thing and then another thing, yielding a tuple of the two outputs. <a href=\"chumsky/trait.Parser.html#method.then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#670-676\">source</a><a href=\"#method.then_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.then_with\" class=\"fn\">then_with</a>&lt;U, P, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(O) -&gt; P&gt;(\n    self,\n    other: F\n) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.ThenWith.html\" title=\"struct chumsky::combinator::ThenWith\">ThenWith</a>&lt;I, O, U, Self, P, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Parse one thing and then another thing, creating the second parser from the result of\nthe first. If you only have a couple cases to handle, prefer <a href=\"chumsky/trait.Parser.html#method.or\" title=\"method chumsky::Parser::or\"><code>Parser::or</code></a>. <a href=\"chumsky/trait.Parser.html#method.then_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#701-714\">source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.chain\" class=\"fn\">chain</a>&lt;T, U, P&gt;(\n    self,\n    other: P\n) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Map.html\" title=\"struct chumsky::combinator::Map\">Map</a>&lt;<a class=\"struct\" href=\"chumsky/combinator/struct.Then.html\" title=\"struct chumsky::combinator::Then\">Then</a>&lt;Self, P&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(O, U)</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(O, U)</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"chumsky/chain/trait.Chain.html\" title=\"trait chumsky::chain::Chain\">Chain</a>&lt;T&gt;,\n    O: <a class=\"trait\" href=\"chumsky/chain/trait.Chain.html\" title=\"trait chumsky::chain::Chain\">Chain</a>&lt;T&gt;,\n    P: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Parse one thing and then another thing, attempting to chain the two outputs into a <a href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec</code></a>. <a href=\"chumsky/trait.Parser.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ignore_then\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#750-756\">source</a><a href=\"#method.ignore_then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.ignore_then\" class=\"fn\">ignore_then</a>&lt;U, P&gt;(self, other: P) -&gt; <a class=\"type\" href=\"chumsky/combinator/type.IgnoreThen.html\" title=\"type chumsky::combinator::IgnoreThen\">IgnoreThen</a>&lt;Self, P, O, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Parse one thing and then another thing, yielding only the output of the latter. <a href=\"chumsky/trait.Parser.html#method.ignore_then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_ignore\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#787-793\">source</a><a href=\"#method.then_ignore\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.then_ignore\" class=\"fn\">then_ignore</a>&lt;U, P&gt;(self, other: P) -&gt; <a class=\"type\" href=\"chumsky/combinator/type.ThenIgnore.html\" title=\"type chumsky::combinator::ThenIgnore\">ThenIgnore</a>&lt;Self, P, O, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Parse one thing and then another thing, yielding only the output of the former. <a href=\"chumsky/trait.Parser.html#method.then_ignore\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.padded_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#811-817\">source</a><a href=\"#method.padded_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.padded_by\" class=\"fn\">padded_by</a>&lt;U, P&gt;(\n    self,\n    other: P\n) -&gt; <a class=\"type\" href=\"chumsky/combinator/type.ThenIgnore.html\" title=\"type chumsky::combinator::ThenIgnore\">ThenIgnore</a>&lt;<a class=\"type\" href=\"chumsky/combinator/type.IgnoreThen.html\" title=\"type chumsky::combinator::IgnoreThen\">IgnoreThen</a>&lt;P, Self, U, O&gt;, P, O, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Parse a pattern, but with an instance of another pattern on either end, yielding the output of the inner. <a href=\"chumsky/trait.Parser.html#method.padded_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delimited_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#868-880\">source</a><a href=\"#method.delimited_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.delimited_by\" class=\"fn\">delimited_by</a>&lt;U, V, L, R&gt;(\n    self,\n    start: L,\n    end: R\n) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.DelimitedBy.html\" title=\"struct chumsky::combinator::DelimitedBy\">DelimitedBy</a>&lt;Self, L, R, U, V&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    L: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,\n    R: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, V, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Parse the pattern surrounded by the given delimiters. <a href=\"chumsky/trait.Parser.html#method.delimited_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#912-918\">source</a><a href=\"#method.or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.or\" class=\"fn\">or</a>&lt;P&gt;(self, other: P) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Or.html\" title=\"struct chumsky::combinator::Or\">Or</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, O, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Parse one thing or, on failure, another thing. <a href=\"chumsky/trait.Parser.html#method.or\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#964-970\">source</a><a href=\"#method.recover_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.recover_with\" class=\"fn\">recover_with</a>&lt;S&gt;(self, strategy: S) -&gt; <a class=\"struct\" href=\"chumsky/recovery/struct.Recovery.html\" title=\"struct chumsky::recovery::Recovery\">Recovery</a>&lt;Self, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: <a class=\"trait\" href=\"chumsky/recovery/trait.Strategy.html\" title=\"trait chumsky::recovery::Strategy\">Strategy</a>&lt;I, O, Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Apply a fallback recovery strategy to this parser should it fail. <a href=\"chumsky/trait.Parser.html#method.recover_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or_not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#992-997\">source</a><a href=\"#method.or_not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.or_not\" class=\"fn\">or_not</a>(self) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.OrNot.html\" title=\"struct chumsky::combinator::OrNot\">OrNot</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempt to parse something, but only if it exists. <a href=\"chumsky/trait.Parser.html#method.or_not\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#1050-1055\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Not.html\" title=\"struct chumsky::combinator::Not\">Not</a>&lt;Self, O&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Parses a single token if, and only if, the pattern fails to parse. <a href=\"chumsky/trait.Parser.html#method.not\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeated\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#1079-1084\">source</a><a href=\"#method.repeated\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.repeated\" class=\"fn\">repeated</a>(self) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Repeated.html\" title=\"struct chumsky::combinator::Repeated\">Repeated</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Parse a pattern any number of times (including zero times). <a href=\"chumsky/trait.Parser.html#method.repeated\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.separated_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#1106-1120\">source</a><a href=\"#method.separated_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.separated_by\" class=\"fn\">separated_by</a>&lt;U, P&gt;(self, other: P) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.SeparatedBy.html\" title=\"struct chumsky::combinator::SeparatedBy\">SeparatedBy</a>&lt;Self, P, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, U, Error = Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Parse a pattern, separated by another, any number of times. <a href=\"chumsky/trait.Parser.html#method.separated_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rewind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#1142-1147\">source</a><a href=\"#method.rewind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.rewind\" class=\"fn\">rewind</a>(self) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Rewind.html\" title=\"struct chumsky::combinator::Rewind\">Rewind</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Parse a pattern. Afterwards, the input stream will be rewound to its original state, as if parsing had not\noccurred. <a href=\"chumsky/trait.Parser.html#method.rewind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#1167-1172\">source</a><a href=\"#method.boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.boxed\" class=\"fn\">boxed</a>&lt;'a&gt;(self) -&gt; <a class=\"struct\" href=\"chumsky/struct.BoxedParser.html\" title=\"struct chumsky::BoxedParser\">BoxedParser</a>&lt;'a, I, O, Self::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a,</div></h4></section></summary><div class='docblock'>Box the parser, yielding a parser that performs parsing through dynamic dispatch. <a href=\"chumsky/trait.Parser.html#method.boxed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chumsky/lib.rs.html#1228-1234\">source</a><a href=\"#method.unwrapped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chumsky/trait.Parser.html#method.unwrapped\" class=\"fn\">unwrapped</a>&lt;U, E&gt;(self) -&gt; <a class=\"struct\" href=\"chumsky/combinator/struct.Unwrapped.html\" title=\"struct chumsky::combinator::Unwrapped\">Unwrapped</a>&lt;Self, E, &lt;Self as <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, O&gt;&gt;::<a class=\"associatedtype\" href=\"chumsky/trait.Parser.html#associatedtype.Error\" title=\"type chumsky::Parser::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"chumsky/trait.Parser.html\" title=\"trait chumsky::Parser\">Parser</a>&lt;I, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;U, E&gt;&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class='docblock'>For parsers that produce a <a href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\"><code>Result</code></a> as their output, unwrap the result (panicking if an <a href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a> is\nencountered). <a href=\"chumsky/trait.Parser.html#method.unwrapped\">Read more</a></div></details></div></details>","Parser<I, U>","chumsky::combinator::IgnoreThen","chumsky::combinator::ThenIgnore"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()