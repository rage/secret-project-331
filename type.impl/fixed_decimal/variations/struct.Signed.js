(function() {
    var type_impls = Object.fromEntries([["icu",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-Clone-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-Debug-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-Default-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#266\">Source</a><a href=\"#impl-Deref-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#267\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#268\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#273\">Source</a><a href=\"#impl-DerefMut-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#274\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#888\">Source</a><a href=\"#impl-Display-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3><div class=\"docblock\"><p>This trait is implemented for compatibility with <a href=\"alloc::fmt\"><code>fmt!</code></a>.\nTo create a string, [<code>Writeable::write_to_string</code>] is usually more efficient.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#888\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedInteger%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/integer.rs.html#42\">Source</a><a href=\"#impl-From%3CFixedInteger%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"fixed_decimal/integer/struct.FixedInteger.html\" title=\"struct fixed_decimal::integer::FixedInteger\">FixedInteger</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/integer.rs.html#43\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"fixed_decimal/integer/struct.FixedInteger.html\" title=\"struct fixed_decimal::integer::FixedInteger\">FixedInteger</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FixedInteger>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci128%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#181\">Source</a><a href=\"#impl-From%3Ci128%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#181\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i128>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci16%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#184\">Source</a><a href=\"#impl-From%3Ci16%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#184\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i16>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#183\">Source</a><a href=\"#impl-From%3Ci32%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#183\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i32>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci64%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#182\">Source</a><a href=\"#impl-From%3Ci64%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#182\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i64>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#185\">Source</a><a href=\"#impl-From%3Ci8%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#185\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i8>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cisize%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#180\">Source</a><a href=\"#impl-From%3Cisize%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#180\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<isize>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu128%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#203\">Source</a><a href=\"#impl-From%3Cu128%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#203\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u128>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#206\">Source</a><a href=\"#impl-From%3Cu16%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#206\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u16>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#205\">Source</a><a href=\"#impl-From%3Cu32%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#205\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u32>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#204\">Source</a><a href=\"#impl-From%3Cu64%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#204\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#207\">Source</a><a href=\"#impl-From%3Cu8%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#207\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u8>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cusize%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#202\">Source</a><a href=\"#impl-From%3Cusize%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#202\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<usize>","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#152\">Source</a><a href=\"#impl-FromStr-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#153\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"fixed_decimal/enum.ParseError.html\" title=\"enum fixed_decimal::ParseError\">ParseError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#154\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;, &lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-PartialEq-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#56\">Source</a><a href=\"#impl-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#58\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.sign\" class=\"fn\">sign</a>(&amp;self) -&gt; <a class=\"enum\" href=\"fixed_decimal/variations/enum.Sign.html\" title=\"enum fixed_decimal::variations::Sign\">Sign</a></h4></section></summary><div class=\"docblock\"><p>Returns the sign of this signed number.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_sign\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#63\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.set_sign\" class=\"fn\">set_sign</a>(&amp;mut self, sign: <a class=\"enum\" href=\"fixed_decimal/variations/enum.Sign.html\" title=\"enum fixed_decimal::variations::Sign\">Sign</a>)</h4></section></summary><div class=\"docblock\"><p>Changes the sign of this signed number to the one given.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_sign\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#68\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.with_sign\" class=\"fn\">with_sign</a>(self, sign: <a class=\"enum\" href=\"fixed_decimal/variations/enum.Sign.html\" title=\"enum fixed_decimal::variations::Sign\">Sign</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number with the sign changed to the one given.</p>\n</div></details></div></details>",0,"icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#280\">Source</a><a href=\"#impl-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3><div class=\"docblock\"><p>All the rounding and rounding related logic is implmented in this implmentation block.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#308\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.round\" class=\"fn\">round</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number at a particular digit position.</p>\n<p>This uses half to even rounding, which rounds to the nearest integer and resolves ties by\nselecting the nearest even integer to the original value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rounded\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#334\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.rounded\" class=\"fn\">rounded</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded at a particular digit position.</p>\n<p>This uses half to even rounding by default, which rounds to the nearest integer and\nresolves ties by selecting the nearest even integer to the original value.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#364\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.ceil\" class=\"fn\">ceil</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number towards positive infinity at a particular digit position.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceiled\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#387\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.ceiled\" class=\"fn\">ceiled</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded towards positive infinity at a particular digit position.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-1\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expand\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#417\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.expand\" class=\"fn\">expand</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number away from zero at a particular digit position.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expanded\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#440\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.expanded\" class=\"fn\">expanded</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded away from zero at a particular digit position.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#470\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.floor\" class=\"fn\">floor</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number towards negative infinity at a particular digit position.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floored\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#493\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.floored\" class=\"fn\">floored</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded towards negative infinity at a particular digit position.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunc\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#525\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.trunc\" class=\"fn\">trunc</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number towards zero at a particular digit position.</p>\n<p>Also see <a href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html#method.pad_end\" title=\"method fixed_decimal::decimal::UnsignedDecimal::pad_end\"><code>UnsignedDecimal::pad_end()</code></a>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunced\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#550\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.trunced\" class=\"fn\">trunced</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded towards zero at a particular digit position.</p>\n<p>Also see <a href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html#method.padded_end\" title=\"method fixed_decimal::decimal::UnsignedDecimal::padded_end\"><code>UnsignedDecimal::padded_end()</code></a>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-1\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_with_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#588\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.round_with_mode\" class=\"fn\">round_with_mode</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>, mode: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.SignedRoundingMode.html\" title=\"enum fixed_decimal::rounding::SignedRoundingMode\">SignedRoundingMode</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number at a particular digit position, using the specified rounding mode.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::{Decimal, SignedRoundingMode, UnsignedRoundingMode};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\ndec.round_with_mode(<span class=\"number\">0</span>, SignedRoundingMode::Floor);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-4\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\ndec.round_with_mode(<span class=\"number\">0</span>, SignedRoundingMode::Ceil);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-3\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"5.455\"</span>).unwrap();\ndec.round_with_mode(\n    -<span class=\"number\">2</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfExpand),\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"5.46\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-7.235\"</span>).unwrap();\ndec.round_with_mode(\n    -<span class=\"number\">2</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfTrunc),\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-7.23\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"9.75\"</span>).unwrap();\ndec.round_with_mode(\n    -<span class=\"number\">1</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfEven),\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"9.8\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rounded_with_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#664\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.rounded_with_mode\" class=\"fn\">rounded_with_mode</a>(\n    self,\n    position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>,\n    mode: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.SignedRoundingMode.html\" title=\"enum fixed_decimal::rounding::SignedRoundingMode\">SignedRoundingMode</a>,\n) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded at a particular digit position, using the specified rounding mode.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::{Decimal, SignedRoundingMode, UnsignedRoundingMode};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-4\"</span>,\n    dec.rounded_with_mode(<span class=\"number\">0</span>, SignedRoundingMode::Floor)\n        .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-3\"</span>,\n    dec.rounded_with_mode(<span class=\"number\">0</span>, SignedRoundingMode::Ceil)\n        .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"5.455\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"5.46\"</span>,\n    dec.rounded_with_mode(\n        -<span class=\"number\">2</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfExpand)\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-7.235\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-7.23\"</span>,\n    dec.rounded_with_mode(\n        -<span class=\"number\">2</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfTrunc)\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"9.75\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"9.8\"</span>,\n    dec.rounded_with_mode(\n        -<span class=\"number\">1</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfEven)\n    )\n    .to_string()\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_with_mode_and_increment\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#715-720\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.round_with_mode_and_increment\" class=\"fn\">round_with_mode_and_increment</a>(\n    &amp;mut self,\n    position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>,\n    mode: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.SignedRoundingMode.html\" title=\"enum fixed_decimal::rounding::SignedRoundingMode\">SignedRoundingMode</a>,\n    increment: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.RoundingIncrement.html\" title=\"enum fixed_decimal::rounding::RoundingIncrement\">RoundingIncrement</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Rounds this number at a particular digit position and increment, using the specified rounding mode.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::{\n    Decimal, RoundingIncrement, SignedRoundingMode, UnsignedRoundingMode,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    <span class=\"number\">0</span>,\n    SignedRoundingMode::Floor,\n    RoundingIncrement::MultiplesOf1,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-4\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.59\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    -<span class=\"number\">1</span>,\n    SignedRoundingMode::Ceil,\n    RoundingIncrement::MultiplesOf2,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-3.4\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"5.455\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    -<span class=\"number\">2</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfExpand),\n    RoundingIncrement::MultiplesOf5,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"5.45\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-7.235\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    -<span class=\"number\">2</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfTrunc),\n    RoundingIncrement::MultiplesOf25,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-7.25\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"9.75\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    -<span class=\"number\">1</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfEven),\n    RoundingIncrement::MultiplesOf5,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"10.0\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rounded_with_mode_and_increment\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#809-814\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.rounded_with_mode_and_increment\" class=\"fn\">rounded_with_mode_and_increment</a>(\n    self,\n    position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>,\n    mode: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.SignedRoundingMode.html\" title=\"enum fixed_decimal::rounding::SignedRoundingMode\">SignedRoundingMode</a>,\n    increment: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.RoundingIncrement.html\" title=\"enum fixed_decimal::rounding::RoundingIncrement\">RoundingIncrement</a>,\n) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded at a particular digit position and increment, using the specified rounding mode.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::{\n    Decimal, RoundingIncrement, SignedRoundingMode, UnsignedRoundingMode,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-4\"</span>,\n    dec.rounded_with_mode_and_increment(\n        <span class=\"number\">0</span>,\n        SignedRoundingMode::Floor,\n        RoundingIncrement::MultiplesOf1\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.59\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-3.4\"</span>,\n    dec.rounded_with_mode_and_increment(\n        -<span class=\"number\">1</span>,\n        SignedRoundingMode::Ceil,\n        RoundingIncrement::MultiplesOf2\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"5.455\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"5.45\"</span>,\n    dec.rounded_with_mode_and_increment(\n        -<span class=\"number\">2</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfExpand),\n        RoundingIncrement::MultiplesOf5\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-7.235\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-7.25\"</span>,\n    dec.rounded_with_mode_and_increment(\n        -<span class=\"number\">2</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfTrunc),\n        RoundingIncrement::MultiplesOf25\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"9.75\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"10.0\"</span>,\n    dec.rounded_with_mode_and_increment(\n        -<span class=\"number\">1</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfEven),\n        RoundingIncrement::MultiplesOf5\n    )\n    .to_string()\n);</code></pre></div>\n</div></details></div></details>",0,"icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#49\">Source</a><a href=\"#impl-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#50\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.new\" class=\"fn\">new</a>(sign: <a class=\"enum\" href=\"fixed_decimal/variations/enum.Sign.html\" title=\"enum fixed_decimal::variations::Sign\">Sign</a>, absolute: <a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#56\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.try_from_str\" class=\"fn\">try_from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;, <a class=\"enum\" href=\"fixed_decimal/enum.ParseError.html\" title=\"enum fixed_decimal::ParseError\">ParseError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a <a href=\"icu/decimal/input/type.Decimal.html\" title=\"type icu::decimal::input::Decimal\"><code>Decimal</code></a>.</p>\n</div></details><section id=\"method.try_from_utf8\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#60\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.try_from_utf8\" class=\"fn\">try_from_utf8</a>(\n    input_str: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;, <a class=\"enum\" href=\"fixed_decimal/enum.ParseError.html\" title=\"enum fixed_decimal::ParseError\">ParseError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_sign_display\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#102\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.apply_sign_display\" class=\"fn\">apply_sign_display</a>(&amp;mut self, sign_display: <a class=\"enum\" href=\"icu/decimal/input/enum.SignDisplay.html\" title=\"enum icu::decimal::input::SignDisplay\">SignDisplay</a>)</h4></section></summary><div class=\"docblock\"><p>Sets the sign of this number according to the given sign display strategy.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n<span class=\"kw\">use </span>fixed_decimal::SignDisplay::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from(<span class=\"number\">1729</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1729\"</span>, dec.to_string());\ndec.apply_sign_display(Always);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"+1729\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_sign_display\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#146\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.with_sign_display\" class=\"fn\">with_sign_display</a>(\n    self,\n    sign_display: <a class=\"enum\" href=\"icu/decimal/input/enum.SignDisplay.html\" title=\"enum icu::decimal::input::SignDisplay\">SignDisplay</a>,\n) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number with its sign set according to the given sign display strategy.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n<span class=\"kw\">use </span>fixed_decimal::SignDisplay::<span class=\"kw-2\">*</span>;\n\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"+1729\"</span>,\n    Decimal::from(<span class=\"number\">1729</span>)\n        .with_sign_display(ExceptZero)\n        .to_string()\n);</code></pre></div>\n</div></details></div></details>",0,"icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#888\">Source</a><a href=\"#impl-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#888\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.to_string\" class=\"fn\">to_string</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Converts the given value to a <code>String</code>.</p>\n<p>Under the hood, this uses an efficient [<code>Writeable</code>] implementation.\nHowever, in order to avoid allocating a string, it is more efficient\nto use [<code>Writeable</code>] directly.</p>\n</div></details></div></details>",0,"icu::decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Writeable-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#866\">Source</a><a href=\"#impl-Writeable-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"writeable/trait.Writeable.html\" title=\"trait writeable::Writeable\">Writeable</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3><div class=\"docblock\"><p>Render the <a href=\"icu/decimal/input/type.Decimal.html\" title=\"type icu::decimal::input::Decimal\"><code>Decimal</code></a> as a string of ASCII digits with a possible decimal point.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_writeable_eq!</span>(Decimal::from(<span class=\"number\">42</span>), <span class=\"string\">\"42\"</span>);</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#867\">Source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to\" class=\"fn\">write_to</a>&lt;W&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes a string to the given sink. Errors from the sink are bubbled up.\nThe default implementation delegates to <code>write_to_parts</code>, and discards any\n<code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writeable_length_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#883\">Source</a><a href=\"#method.writeable_length_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.writeable_length_hint\" class=\"fn\">writeable_length_hint</a>(&amp;self) -&gt; <a class=\"struct\" href=\"writeable/struct.LengthHint.html\" title=\"struct writeable::LengthHint\">LengthHint</a></h4></section></summary><div class='docblock'>Returns a hint for the number of UTF-8 bytes that will be written to the sink. <a href=\"writeable/trait.Writeable.html#method.writeable_length_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_parts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/lib.rs.html#255\">Source</a><a href=\"#method.write_to_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to_parts\" class=\"fn\">write_to_parts</a>&lt;S&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"writeable/trait.PartsWrite.html\" title=\"trait writeable::PartsWrite\">PartsWrite</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Write bytes and <code>Part</code> annotations to the given sink. Errors from the\nsink are bubbled up. The default implementation delegates to <code>write_to</code>,\nand doesn’t produce any <code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/lib.rs.html#305\">Source</a><a href=\"#method.write_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to_string\" class=\"fn\">write_to_string</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Creates a new <code>String</code> with the data from this <code>Writeable</code>. Like <code>ToString</code>,\nbut smaller and faster. <a href=\"writeable/trait.Writeable.html#method.write_to_string\">Read more</a></div></details></div></details>","Writeable","icu::decimal::input::Decimal"],["<section id=\"impl-StructuralPartialEq-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-StructuralPartialEq-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h3></section>","StructuralPartialEq","icu::decimal::input::Decimal"]]],["icu_decimal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-Clone-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-Debug-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-Default-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#266\">Source</a><a href=\"#impl-Deref-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#267\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#268\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#273\">Source</a><a href=\"#impl-DerefMut-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#274\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#888\">Source</a><a href=\"#impl-Display-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3><div class=\"docblock\"><p>This trait is implemented for compatibility with <a href=\"alloc::fmt\"><code>fmt!</code></a>.\nTo create a string, [<code>Writeable::write_to_string</code>] is usually more efficient.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#888\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedInteger%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/integer.rs.html#42\">Source</a><a href=\"#impl-From%3CFixedInteger%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"fixed_decimal/integer/struct.FixedInteger.html\" title=\"struct fixed_decimal::integer::FixedInteger\">FixedInteger</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/integer.rs.html#43\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"fixed_decimal/integer/struct.FixedInteger.html\" title=\"struct fixed_decimal::integer::FixedInteger\">FixedInteger</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FixedInteger>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci128%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#181\">Source</a><a href=\"#impl-From%3Ci128%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#181\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i128>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci16%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#184\">Source</a><a href=\"#impl-From%3Ci16%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#184\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i16>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#183\">Source</a><a href=\"#impl-From%3Ci32%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#183\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i32>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci64%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#182\">Source</a><a href=\"#impl-From%3Ci64%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#182\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i64>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#185\">Source</a><a href=\"#impl-From%3Ci8%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#185\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i8>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cisize%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#180\">Source</a><a href=\"#impl-From%3Cisize%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#180\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<isize>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu128%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#203\">Source</a><a href=\"#impl-From%3Cu128%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#203\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u128>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#206\">Source</a><a href=\"#impl-From%3Cu16%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#206\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u16>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#205\">Source</a><a href=\"#impl-From%3Cu32%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#205\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u32>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#204\">Source</a><a href=\"#impl-From%3Cu64%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#204\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#207\">Source</a><a href=\"#impl-From%3Cu8%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#207\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u8>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cusize%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#202\">Source</a><a href=\"#impl-From%3Cusize%3E-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#202\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<usize>","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#152\">Source</a><a href=\"#impl-FromStr-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#153\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"fixed_decimal/enum.ParseError.html\" title=\"enum fixed_decimal::ParseError\">ParseError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#154\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;, &lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-PartialEq-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#56\">Source</a><a href=\"#impl-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#58\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.sign\" class=\"fn\">sign</a>(&amp;self) -&gt; <a class=\"enum\" href=\"fixed_decimal/variations/enum.Sign.html\" title=\"enum fixed_decimal::variations::Sign\">Sign</a></h4></section></summary><div class=\"docblock\"><p>Returns the sign of this signed number.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_sign\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#63\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.set_sign\" class=\"fn\">set_sign</a>(&amp;mut self, sign: <a class=\"enum\" href=\"fixed_decimal/variations/enum.Sign.html\" title=\"enum fixed_decimal::variations::Sign\">Sign</a>)</h4></section></summary><div class=\"docblock\"><p>Changes the sign of this signed number to the one given.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_sign\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#68\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.with_sign\" class=\"fn\">with_sign</a>(self, sign: <a class=\"enum\" href=\"fixed_decimal/variations/enum.Sign.html\" title=\"enum fixed_decimal::variations::Sign\">Sign</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number with the sign changed to the one given.</p>\n</div></details></div></details>",0,"icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#280\">Source</a><a href=\"#impl-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3><div class=\"docblock\"><p>All the rounding and rounding related logic is implmented in this implmentation block.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#308\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.round\" class=\"fn\">round</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number at a particular digit position.</p>\n<p>This uses half to even rounding, which rounds to the nearest integer and resolves ties by\nselecting the nearest even integer to the original value.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.round(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rounded\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#334\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.rounded\" class=\"fn\">rounded</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded at a particular digit position.</p>\n<p>This uses half to even rounding by default, which rounds to the nearest integer and\nresolves ties by selecting the nearest even integer to the original value.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.rounded(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#364\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.ceil\" class=\"fn\">ceil</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number towards positive infinity at a particular digit position.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.ceil(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceiled\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#387\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.ceiled\" class=\"fn\">ceiled</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded towards positive infinity at a particular digit position.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-1\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.ceiled(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expand\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#417\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.expand\" class=\"fn\">expand</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number away from zero at a particular digit position.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.expand(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expanded\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#440\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.expanded\" class=\"fn\">expanded</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded away from zero at a particular digit position.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"2\"</span>, dec.expanded(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#470\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.floor\" class=\"fn\">floor</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number towards negative infinity at a particular digit position.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.floor(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floored\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#493\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.floored\" class=\"fn\">floored</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded towards negative infinity at a particular digit position.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-2\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.floored(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunc\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#525\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.trunc\" class=\"fn\">trunc</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number towards zero at a particular digit position.</p>\n<p>Also see <a href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html#method.pad_end\" title=\"method fixed_decimal::decimal::UnsignedDecimal::pad_end\"><code>UnsignedDecimal::pad_end()</code></a>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-1\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\ndec.trunc(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunced\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#550\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.trunced\" class=\"fn\">trunced</a>(self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded towards zero at a particular digit position.</p>\n<p>Also see <a href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html#method.padded_end\" title=\"method fixed_decimal::decimal::UnsignedDecimal::padded_end\"><code>UnsignedDecimal::padded_end()</code></a>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"-1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-1\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.4\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"0.6\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());\n<span class=\"kw\">let </span>dec = Decimal::from_str(<span class=\"string\">\"1.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1\"</span>, dec.trunced(<span class=\"number\">0</span>).to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_with_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#588\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.round_with_mode\" class=\"fn\">round_with_mode</a>(&amp;mut self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>, mode: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.SignedRoundingMode.html\" title=\"enum fixed_decimal::rounding::SignedRoundingMode\">SignedRoundingMode</a>)</h4></section></summary><div class=\"docblock\"><p>Rounds this number at a particular digit position, using the specified rounding mode.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::{Decimal, SignedRoundingMode, UnsignedRoundingMode};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\ndec.round_with_mode(<span class=\"number\">0</span>, SignedRoundingMode::Floor);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-4\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\ndec.round_with_mode(<span class=\"number\">0</span>, SignedRoundingMode::Ceil);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-3\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"5.455\"</span>).unwrap();\ndec.round_with_mode(\n    -<span class=\"number\">2</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfExpand),\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"5.46\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-7.235\"</span>).unwrap();\ndec.round_with_mode(\n    -<span class=\"number\">2</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfTrunc),\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-7.23\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"9.75\"</span>).unwrap();\ndec.round_with_mode(\n    -<span class=\"number\">1</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfEven),\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"9.8\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rounded_with_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#664\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.rounded_with_mode\" class=\"fn\">rounded_with_mode</a>(\n    self,\n    position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>,\n    mode: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.SignedRoundingMode.html\" title=\"enum fixed_decimal::rounding::SignedRoundingMode\">SignedRoundingMode</a>,\n) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded at a particular digit position, using the specified rounding mode.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::{Decimal, SignedRoundingMode, UnsignedRoundingMode};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-4\"</span>,\n    dec.rounded_with_mode(<span class=\"number\">0</span>, SignedRoundingMode::Floor)\n        .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-3\"</span>,\n    dec.rounded_with_mode(<span class=\"number\">0</span>, SignedRoundingMode::Ceil)\n        .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"5.455\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"5.46\"</span>,\n    dec.rounded_with_mode(\n        -<span class=\"number\">2</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfExpand)\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-7.235\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-7.23\"</span>,\n    dec.rounded_with_mode(\n        -<span class=\"number\">2</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfTrunc)\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"9.75\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"9.8\"</span>,\n    dec.rounded_with_mode(\n        -<span class=\"number\">1</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfEven)\n    )\n    .to_string()\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_with_mode_and_increment\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#715-720\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.round_with_mode_and_increment\" class=\"fn\">round_with_mode_and_increment</a>(\n    &amp;mut self,\n    position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>,\n    mode: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.SignedRoundingMode.html\" title=\"enum fixed_decimal::rounding::SignedRoundingMode\">SignedRoundingMode</a>,\n    increment: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.RoundingIncrement.html\" title=\"enum fixed_decimal::rounding::RoundingIncrement\">RoundingIncrement</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Rounds this number at a particular digit position and increment, using the specified rounding mode.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::{\n    Decimal, RoundingIncrement, SignedRoundingMode, UnsignedRoundingMode,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    <span class=\"number\">0</span>,\n    SignedRoundingMode::Floor,\n    RoundingIncrement::MultiplesOf1,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-4\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.59\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    -<span class=\"number\">1</span>,\n    SignedRoundingMode::Ceil,\n    RoundingIncrement::MultiplesOf2,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-3.4\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"5.455\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    -<span class=\"number\">2</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfExpand),\n    RoundingIncrement::MultiplesOf5,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"5.45\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-7.235\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    -<span class=\"number\">2</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfTrunc),\n    RoundingIncrement::MultiplesOf25,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"-7.25\"</span>, dec.to_string());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"9.75\"</span>).unwrap();\ndec.round_with_mode_and_increment(\n    -<span class=\"number\">1</span>,\n    SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfEven),\n    RoundingIncrement::MultiplesOf5,\n);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"10.0\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rounded_with_mode_and_increment\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#809-814\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.rounded_with_mode_and_increment\" class=\"fn\">rounded_with_mode_and_increment</a>(\n    self,\n    position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>,\n    mode: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.SignedRoundingMode.html\" title=\"enum fixed_decimal::rounding::SignedRoundingMode\">SignedRoundingMode</a>,\n    increment: <a class=\"enum\" href=\"fixed_decimal/rounding/enum.RoundingIncrement.html\" title=\"enum fixed_decimal::rounding::RoundingIncrement\">RoundingIncrement</a>,\n) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number rounded at a particular digit position and increment, using the specified rounding mode.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::{\n    Decimal, RoundingIncrement, SignedRoundingMode, UnsignedRoundingMode,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.5\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-4\"</span>,\n    dec.rounded_with_mode_and_increment(\n        <span class=\"number\">0</span>,\n        SignedRoundingMode::Floor,\n        RoundingIncrement::MultiplesOf1\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-3.59\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-3.4\"</span>,\n    dec.rounded_with_mode_and_increment(\n        -<span class=\"number\">1</span>,\n        SignedRoundingMode::Ceil,\n        RoundingIncrement::MultiplesOf2\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"5.455\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"5.45\"</span>,\n    dec.rounded_with_mode_and_increment(\n        -<span class=\"number\">2</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfExpand),\n        RoundingIncrement::MultiplesOf5\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"-7.235\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"-7.25\"</span>,\n    dec.rounded_with_mode_and_increment(\n        -<span class=\"number\">2</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfTrunc),\n        RoundingIncrement::MultiplesOf25\n    )\n    .to_string()\n);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from_str(<span class=\"string\">\"9.75\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"10.0\"</span>,\n    dec.rounded_with_mode_and_increment(\n        -<span class=\"number\">1</span>,\n        SignedRoundingMode::Unsigned(UnsignedRoundingMode::HalfEven),\n        RoundingIncrement::MultiplesOf5\n    )\n    .to_string()\n);</code></pre></div>\n</div></details></div></details>",0,"icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#49\">Source</a><a href=\"#impl-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#50\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.new\" class=\"fn\">new</a>(sign: <a class=\"enum\" href=\"fixed_decimal/variations/enum.Sign.html\" title=\"enum fixed_decimal::variations::Sign\">Sign</a>, absolute: <a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#56\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.try_from_str\" class=\"fn\">try_from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;, <a class=\"enum\" href=\"fixed_decimal/enum.ParseError.html\" title=\"enum fixed_decimal::ParseError\">ParseError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a <a href=\"icu_decimal/input/type.Decimal.html\" title=\"type icu_decimal::input::Decimal\"><code>Decimal</code></a>.</p>\n</div></details><section id=\"method.try_from_utf8\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#60\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.try_from_utf8\" class=\"fn\">try_from_utf8</a>(\n    input_str: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;, <a class=\"enum\" href=\"fixed_decimal/enum.ParseError.html\" title=\"enum fixed_decimal::ParseError\">ParseError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_sign_display\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#102\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.apply_sign_display\" class=\"fn\">apply_sign_display</a>(&amp;mut self, sign_display: <a class=\"enum\" href=\"icu_decimal/input/enum.SignDisplay.html\" title=\"enum icu_decimal::input::SignDisplay\">SignDisplay</a>)</h4></section></summary><div class=\"docblock\"><p>Sets the sign of this number according to the given sign display strategy.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n<span class=\"kw\">use </span>fixed_decimal::SignDisplay::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dec = Decimal::from(<span class=\"number\">1729</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"1729\"</span>, dec.to_string());\ndec.apply_sign_display(Always);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"+1729\"</span>, dec.to_string());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_sign_display\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#146\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.with_sign_display\" class=\"fn\">with_sign_display</a>(\n    self,\n    sign_display: <a class=\"enum\" href=\"icu_decimal/input/enum.SignDisplay.html\" title=\"enum icu_decimal::input::SignDisplay\">SignDisplay</a>,\n) -&gt; <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this number with its sign set according to the given sign display strategy.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>fixed_decimal::Decimal;\n<span class=\"kw\">use </span>fixed_decimal::SignDisplay::<span class=\"kw-2\">*</span>;\n\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"string\">\"+1729\"</span>,\n    Decimal::from(<span class=\"number\">1729</span>)\n        .with_sign_display(ExceptZero)\n        .to_string()\n);</code></pre></div>\n</div></details></div></details>",0,"icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#888\">Source</a><a href=\"#impl-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string\" class=\"method\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#888\">Source</a><h4 class=\"code-header\">pub fn <a href=\"fixed_decimal/variations/struct.Signed.html#tymethod.to_string\" class=\"fn\">to_string</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Converts the given value to a <code>String</code>.</p>\n<p>Under the hood, this uses an efficient [<code>Writeable</code>] implementation.\nHowever, in order to avoid allocating a string, it is more efficient\nto use [<code>Writeable</code>] directly.</p>\n</div></details></div></details>",0,"icu_decimal::input::Decimal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Writeable-for-Signed%3CUnsignedDecimal%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#866\">Source</a><a href=\"#impl-Writeable-for-Signed%3CUnsignedDecimal%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"writeable/trait.Writeable.html\" title=\"trait writeable::Writeable\">Writeable</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;<a class=\"struct\" href=\"fixed_decimal/decimal/struct.UnsignedDecimal.html\" title=\"struct fixed_decimal::decimal::UnsignedDecimal\">UnsignedDecimal</a>&gt;</h3><div class=\"docblock\"><p>Render the <a href=\"icu_decimal/input/type.Decimal.html\" title=\"type icu_decimal::input::Decimal\"><code>Decimal</code></a> as a string of ASCII digits with a possible decimal point.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_writeable_eq!</span>(Decimal::from(<span class=\"number\">42</span>), <span class=\"string\">\"42\"</span>);</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#867\">Source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to\" class=\"fn\">write_to</a>&lt;W&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes a string to the given sink. Errors from the sink are bubbled up.\nThe default implementation delegates to <code>write_to_parts</code>, and discards any\n<code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writeable_length_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/signed_decimal.rs.html#883\">Source</a><a href=\"#method.writeable_length_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.writeable_length_hint\" class=\"fn\">writeable_length_hint</a>(&amp;self) -&gt; <a class=\"struct\" href=\"writeable/struct.LengthHint.html\" title=\"struct writeable::LengthHint\">LengthHint</a></h4></section></summary><div class='docblock'>Returns a hint for the number of UTF-8 bytes that will be written to the sink. <a href=\"writeable/trait.Writeable.html#method.writeable_length_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_parts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/lib.rs.html#255\">Source</a><a href=\"#method.write_to_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to_parts\" class=\"fn\">write_to_parts</a>&lt;S&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"writeable/trait.PartsWrite.html\" title=\"trait writeable::PartsWrite\">PartsWrite</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Write bytes and <code>Part</code> annotations to the given sink. Errors from the\nsink are bubbled up. The default implementation delegates to <code>write_to</code>,\nand doesn’t produce any <code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/writeable/lib.rs.html#305\">Source</a><a href=\"#method.write_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"writeable/trait.Writeable.html#method.write_to_string\" class=\"fn\">write_to_string</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Creates a new <code>String</code> with the data from this <code>Writeable</code>. Like <code>ToString</code>,\nbut smaller and faster. <a href=\"writeable/trait.Writeable.html#method.write_to_string\">Read more</a></div></details></div></details>","Writeable","icu_decimal::input::Decimal"],["<section id=\"impl-StructuralPartialEq-for-Signed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fixed_decimal/variations.rs.html#50\">Source</a><a href=\"#impl-StructuralPartialEq-for-Signed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"fixed_decimal/variations/struct.Signed.html\" title=\"struct fixed_decimal::variations::Signed\">Signed</a>&lt;T&gt;</h3></section>","StructuralPartialEq","icu_decimal::input::Decimal"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[99247,99225]}