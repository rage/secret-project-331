(function() {
    var type_impls = Object.fromEntries([["icu_pattern",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#77-84\">Source</a><a href=\"#impl-Debug-for-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#78-83\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#71-75\">Source</a><a href=\"#impl-PartialEq-for-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#72-74\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#155-195\">Source</a><a href=\"#impl-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_items\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#181-194\">Source</a><h4 class=\"code-header\">pub fn <a href=\"icu_pattern/struct.Pattern.html#tymethod.try_from_items\" class=\"fn\">try_from_items</a>&lt;'a, I&gt;(items: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Self&gt;, <a class=\"enum\" href=\"icu_pattern/enum.PatternError.html\" title=\"enum icu_pattern::PatternError\">Error</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"icu_pattern/enum.PatternItemCow.html\" title=\"enum icu_pattern::PatternItemCow\">PatternItemCow</a>&lt;'a, B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKeyCow\" title=\"type icu_pattern::PatternBackend::PlaceholderKeyCow\">PlaceholderKeyCow</a>&lt;'a&gt;&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a pattern from an iterator of pattern items.</p>\n<p>✨ <em>Enabled with the <code>alloc</code> Cargo feature.</em></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>icu_pattern::Pattern;\n<span class=\"kw\">use </span>icu_pattern::PatternItemCow;\n<span class=\"kw\">use </span>icu_pattern::SinglePlaceholder;\n<span class=\"kw\">use </span>icu_pattern::SinglePlaceholderKey;\n<span class=\"kw\">use </span>std::borrow::Cow;\n\nPattern::&lt;SinglePlaceholder&gt;::try_from_items(\n    [\n        PatternItemCow::Placeholder(SinglePlaceholderKey::Singleton),\n        PatternItemCow::Literal(Cow::Borrowed(<span class=\"string\">\" days\"</span>)),\n    ]\n    .into_iter(),\n)\n.expect(<span class=\"string\">\"valid pattern items\"</span>);</code></pre></div>\n</div></details></div></details>",0,"icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#198-234\">Source</a><a href=\"#impl-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, B&gt; <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>,\n    B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKeyCow\" title=\"type icu_pattern::PatternBackend::PlaceholderKeyCow\">PlaceholderKeyCow</a>&lt;'a&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>,\n    &lt;B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKeyCow\" title=\"type icu_pattern::PatternBackend::PlaceholderKeyCow\">PlaceholderKeyCow</a>&lt;'a&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#222-233\">Source</a><h4 class=\"code-header\">pub fn <a href=\"icu_pattern/struct.Pattern.html#tymethod.try_from_str\" class=\"fn\">try_from_str</a>(\n    pattern: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>,\n    options: <a class=\"struct\" href=\"icu_pattern/struct.ParserOptions.html\" title=\"struct icu_pattern::ParserOptions\">ParserOptions</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Self&gt;, <a class=\"enum\" href=\"icu_pattern/enum.PatternError.html\" title=\"enum icu_pattern::PatternError\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a pattern by parsing a syntax string.</p>\n<p>✨ <em>Enabled with the <code>alloc</code> Cargo feature.</em></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>icu_pattern::Pattern;\n<span class=\"kw\">use </span>icu_pattern::SinglePlaceholder;\n\n<span class=\"comment\">// Create a pattern from a valid string:\n</span>Pattern::&lt;SinglePlaceholder&gt;::try_from_str(<span class=\"string\">\"{0} days\"</span>, Default::default())\n    .expect(<span class=\"string\">\"valid pattern\"</span>);\n\n<span class=\"comment\">// Error on an invalid pattern:\n</span>Pattern::&lt;SinglePlaceholder&gt;::try_from_str(<span class=\"string\">\"{0 days\"</span>, Default::default())\n    .expect_err(<span class=\"string\">\"mismatched braces\"</span>);</code></pre></div>\n</div></details></div></details>",0,"icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#236-278\">Source</a><a href=\"#impl-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#241-243\">Source</a><h4 class=\"code-header\">pub fn <a href=\"icu_pattern/struct.Pattern.html#tymethod.iter\" class=\"fn\">iter</a>(\n    &amp;self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"icu_pattern/enum.PatternItem.html\" title=\"enum icu_pattern::PatternItem\">PatternItem</a>&lt;'_, B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKey\" title=\"type icu_pattern::PatternBackend::PlaceholderKey\">PlaceholderKey</a>&lt;'_&gt;&gt;&gt; + '_</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the <a href=\"icu_pattern/enum.PatternItem.html\" title=\"enum icu_pattern::PatternItem\"><code>PatternItem</code></a>s in this pattern.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_interpolate\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#247-258\">Source</a><h4 class=\"code-header\">pub fn <a href=\"icu_pattern/struct.Pattern.html#tymethod.try_interpolate\" class=\"fn\">try_interpolate</a>&lt;'a, P&gt;(\n    &amp;'a self,\n    value_provider: P,\n) -&gt; impl <a class=\"trait\" href=\"writeable/try_writeable/trait.TryWriteable.html\" title=\"trait writeable::try_writeable::TryWriteable\">TryWriteable</a>&lt;Error = B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Error\" title=\"type icu_pattern::PatternBackend::Error\">Error</a>&lt;'a&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + 'a<div class=\"where\">where\n    P: <a class=\"trait\" href=\"icu_pattern/trait.PlaceholderValueProvider.html\" title=\"trait icu_pattern::PlaceholderValueProvider\">PlaceholderValueProvider</a>&lt;B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKey\" title=\"type icu_pattern::PatternBackend::PlaceholderKey\">PlaceholderKey</a>&lt;'a&gt;, Error = B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Error\" title=\"type icu_pattern::PatternBackend::Error\">Error</a>&lt;'a&gt;&gt; + 'a,</div></h4></section></summary><div class=\"docblock\"><p>Returns a <a href=\"writeable/try_writeable/trait.TryWriteable.html\" title=\"trait writeable::try_writeable::TryWriteable\"><code>TryWriteable</code></a> that interpolates items from the given replacement provider\ninto this pattern string.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_interpolate_to_string\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#266-277\">Source</a><h4 class=\"code-header\">pub fn <a href=\"icu_pattern/struct.Pattern.html#tymethod.try_interpolate_to_string\" class=\"fn\">try_interpolate_to_string</a>&lt;'a, P&gt;(\n    &amp;'a self,\n    value_provider: P,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, (B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Error\" title=\"type icu_pattern::PatternBackend::Error\">Error</a>&lt;'a&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>)&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"icu_pattern/trait.PlaceholderValueProvider.html\" title=\"trait icu_pattern::PlaceholderValueProvider\">PlaceholderValueProvider</a>&lt;B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKey\" title=\"type icu_pattern::PatternBackend::PlaceholderKey\">PlaceholderKey</a>&lt;'a&gt;, Error = B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Error\" title=\"type icu_pattern::PatternBackend::Error\">Error</a>&lt;'a&gt;&gt; + 'a,</div></h4></section></summary><div class=\"docblock\"><p>Interpolates the pattern directly to a string, returning the string or an error.</p>\n<p>In addition to the error, the lossy fallback string is returned in the failure case.</p>\n<p>✨ <em>Enabled with the <code>alloc</code> Cargo feature.</em></p>\n</div></details></div></details>",0,"icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#280-308\">Source</a><a href=\"#impl-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;<div class=\"where\">where\n    for&lt;'b&gt; B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>&lt;Error&lt;'b&gt; = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.interpolate\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#286-294\">Source</a><h4 class=\"code-header\">pub fn <a href=\"icu_pattern/struct.Pattern.html#tymethod.interpolate\" class=\"fn\">interpolate</a>&lt;'a, P&gt;(\n    &amp;'a self,\n    value_provider: P,\n) -&gt; impl <a class=\"trait\" href=\"writeable/trait.Writeable.html\" title=\"trait writeable::Writeable\">Writeable</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + 'a<div class=\"where\">where\n    P: <a class=\"trait\" href=\"icu_pattern/trait.PlaceholderValueProvider.html\" title=\"trait icu_pattern::PlaceholderValueProvider\">PlaceholderValueProvider</a>&lt;B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKey\" title=\"type icu_pattern::PatternBackend::PlaceholderKey\">PlaceholderKey</a>&lt;'a&gt;, Error = B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Error\" title=\"type icu_pattern::PatternBackend::Error\">Error</a>&lt;'a&gt;&gt; + 'a,</div></h4></section></summary><div class=\"docblock\"><p>Returns a <a href=\"writeable/trait.Writeable.html\" title=\"trait writeable::Writeable\"><code>Writeable</code></a> that interpolates items from the given replacement provider\ninto this pattern string.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.interpolate_to_string\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#300-307\">Source</a><h4 class=\"code-header\">pub fn <a href=\"icu_pattern/struct.Pattern.html#tymethod.interpolate_to_string\" class=\"fn\">interpolate_to_string</a>&lt;'a, P&gt;(&amp;'a self, value_provider: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"icu_pattern/trait.PlaceholderValueProvider.html\" title=\"trait icu_pattern::PlaceholderValueProvider\">PlaceholderValueProvider</a>&lt;B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKey\" title=\"type icu_pattern::PatternBackend::PlaceholderKey\">PlaceholderKey</a>&lt;'a&gt;, Error = B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Error\" title=\"type icu_pattern::PatternBackend::Error\">Error</a>&lt;'a&gt;&gt; + 'a,</div></h4></section></summary><div class=\"docblock\"><p>Interpolates the pattern directly to a string.</p>\n<p>✨ <em>Enabled with the <code>alloc</code> Cargo feature.</em></p>\n</div></details></div></details>",0,"icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/serde.rs.html#150-168\">Source</a><a href=\"#impl-Serialize-for-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;<div class=\"where\">where\n    B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Store\" title=\"type icu_pattern::PatternBackend::Store\">Store</a>: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    for&lt;'a&gt; B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKeyCow\" title=\"type icu_pattern::PatternBackend::PlaceholderKeyCow\">PlaceholderKeyCow</a>&lt;'a&gt;: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.PlaceholderKey\" title=\"type icu_pattern::PatternBackend::PlaceholderKey\">PlaceholderKey</a>&lt;'a&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/serde.rs.html#155-167\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToOwned-for-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#119-128\">Source</a><a href=\"#impl-ToOwned-for-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a> for <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Store\" title=\"type icu_pattern::PatternBackend::Store\">Store</a>&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a B::<a class=\"associatedtype\" href=\"icu_pattern/trait.PatternBackend.html#associatedtype.Store\" title=\"type icu_pattern::PatternBackend::Store\">Store</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#123\">Source</a><a href=\"#associatedtype.Owned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" class=\"associatedtype\">Owned</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after obtaining ownership.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/frontend/mod.rs.html#125-127\">Source</a><a href=\"#method.to_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" title=\"type alloc::borrow::ToOwned::Owned\">Owned</a></h4></section></summary><div class='docblock'>Creates owned data from borrowed data, usually by cloning. <a href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_into\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/alloc/borrow.rs.html#76\">Source</a></span><a href=\"#method.clone_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/trait.ToOwned.html#method.clone_into\" class=\"fn\">clone_into</a>(&amp;self, target: &amp;mut Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" title=\"type alloc::borrow::ToOwned::Owned\">Owned</a>)</h4></section></summary><div class='docblock'>Uses borrowed data to replace owned data, usually by cloning. <a href=\"https://doc.rust-lang.org/1.87.0/alloc/borrow/trait.ToOwned.html#method.clone_into\">Read more</a></div></details></div></details>","ToOwned","icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VarULE-for-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/implementations.rs.html#39-52\">Source</a><a href=\"#impl-VarULE-for-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, S: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a>&gt; <a class=\"trait\" href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a> for <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>&lt;Store = S&gt;,</div></h3><div class=\"docblock\"><p>Implement <code>VarULE</code> for <code>Pattern&lt;SinglePlaceholder, str&gt;</code>.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h4>\n<p>Safety checklist for <code>ULE</code>:</p>\n<ol>\n<li><code>Pattern&lt;B&gt;</code> does not include any uninitialized or padding bytes.</li>\n<li><code>Pattern&lt;B&gt;</code> is aligned to 1 byte.</li>\n<li>The implementation of <code>validate_bytes()</code> returns an error\nif any byte is not valid.</li>\n<li>The implementation of <code>validate_bytes()</code> returns an error\nif the slice cannot be used to build a <code>Pattern&lt;B&gt;</code> in its entirety.</li>\n<li>The implementation of <code>from_bytes_unchecked()</code> returns a reference to the same data.</li>\n<li><code>parse_bytes()</code> is equivalent to <code>validate_bytes()</code> followed by <code>from_bytes_unchecked()</code>.</li>\n<li><code>Pattern&lt;B&gt;</code> byte equality is semantic equality.</li>\n</ol>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/implementations.rs.html#43-46\">Source</a><a href=\"#method.validate_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.VarULE.html#tymethod.validate_bytes\" class=\"fn\">validate_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"zerovec/ule/enum.UleError.html\" title=\"enum zerovec::ule::UleError\">UleError</a>&gt;</h4></section></summary><div class='docblock'>Validates a byte slice, <code>&amp;[u8]</code>. <a href=\"zerovec/ule/trait.VarULE.html#tymethod.validate_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/implementations.rs.html#48-51\">Source</a><a href=\"#method.from_bytes_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"zerovec/ule/trait.VarULE.html#tymethod.from_bytes_unchecked\" class=\"fn\">from_bytes_unchecked</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]) -&gt; &amp;Self</h4></section></summary><div class='docblock'>Takes a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;Self</code> with the same lifetime, assuming\nthat this byte slice has previously been run through <a href=\"zerovec/ule/trait.VarULE.html#method.parse_bytes\" title=\"associated function zerovec::ule::VarULE::parse_bytes::parse_bytes\"><code>Self::parse_bytes()</code></a> with\nsuccess. <a href=\"zerovec/ule/trait.VarULE.html#tymethod.from_bytes_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#316\">Source</a><a href=\"#method.parse_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.VarULE.html#method.parse_bytes\" class=\"fn\">parse_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, <a class=\"enum\" href=\"zerovec/ule/enum.UleError.html\" title=\"enum zerovec::ule::UleError\">UleError</a>&gt;</h4></section></summary><div class='docblock'>Parses a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;Self</code> with the same lifetime. <a href=\"zerovec/ule/trait.VarULE.html#method.parse_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#354\">Source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.VarULE.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Given <code>&amp;Self</code>, returns a <code>&amp;[u8]</code> with the same lifetime. <a href=\"zerovec/ule/trait.VarULE.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#361\">Source</a><a href=\"#method.to_boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.VarULE.html#method.to_boxed\" class=\"fn\">to_boxed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Allocate on the heap as a <code>Box&lt;T&gt;</code></div></details></div></details>","VarULE","icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-Pattern%3CB%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_pattern/implementations.rs.html#14-22\">Source</a><a href=\"#impl-ZeroMapKV%3C'a%3E-for-Pattern%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, B: <a class=\"trait\" href=\"icu_pattern/trait.PatternBackend.html\" title=\"trait icu_pattern::PatternBackend\">PatternBackend</a>&gt; <a class=\"trait\" href=\"zerovec/map/kv/trait.ZeroMapKV.html\" title=\"trait zerovec::map::kv::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; for <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;: <a class=\"trait\" href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/implementations.rs.html#18\">Source</a><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Container\" class=\"associatedtype\">Container</a> = <a class=\"struct\" href=\"zerovec/varzerovec/vec/struct.VarZeroVec.html\" title=\"struct zerovec::varzerovec::vec::VarZeroVec\">VarZeroVec</a>&lt;'a, <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: <a href=\"zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\"><code>ZeroVec</code></a> or <a href=\"zerovec/varzerovec/vec/struct.VarZeroVec.html\" title=\"struct zerovec::varzerovec::vec::VarZeroVec\"><code>VarZeroVec</code></a>.</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/implementations.rs.html#19\">Source</a><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = <a class=\"struct\" href=\"zerovec/varzerovec/slice/struct.VarZeroSlice.html\" title=\"struct zerovec::varzerovec::slice::VarZeroSlice\">VarZeroSlice</a>&lt;<a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/implementations.rs.html#20\">Source</a><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\" class=\"associatedtype\">GetType</a> = <a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/icu_pattern/implementations.rs.html#21\">Source</a><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\" class=\"associatedtype\">OwnedType</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"icu_pattern/struct.Pattern.html\" title=\"struct icu_pattern::Pattern\">Pattern</a>&lt;B&gt;&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\">Read more</a></div></details></div></details>","ZeroMapKV<'a>","icu_pattern::SinglePlaceholderPattern","icu_pattern::DoublePlaceholderPattern","icu_pattern::MultiNamedPlaceholderPattern"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[39445]}