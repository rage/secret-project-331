(function() {
    var type_impls = Object.fromEntries([["ring",[]],["sqlx",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3C'_,+Postgres%3E-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/bytes.rs.html#101\">source</a><a href=\"#impl-Decode%3C'_,+Postgres%3E-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sqlx/trait.Decode.html\" title=\"trait sqlx::Decode\">Decode</a>&lt;'_, <a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/bytes.rs.html#102\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>(\n    value: <a class=\"struct\" href=\"sqlx/postgres/struct.PgValueRef.html\" title=\"struct sqlx::postgres::PgValueRef\">PgValueRef</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">N</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode a new value of this type using a raw value from the database.</div></details></div></details>","Decode<'_, Postgres>","sqlx::types::uuid::Bytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3C'r,+Postgres%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/array.rs.html#195-197\">source</a><a href=\"#impl-Decode%3C'r,+Postgres%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sqlx/trait.Decode.html\" title=\"trait sqlx::Decode\">Decode</a>&lt;'r, <a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: for&lt;'a&gt; <a class=\"trait\" href=\"sqlx/trait.Decode.html\" title=\"trait sqlx::Decode\">Decode</a>&lt;'a, <a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt; + <a class=\"trait\" href=\"sqlx/trait.Type.html\" title=\"trait sqlx::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/array.rs.html#199\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>(value: <a class=\"struct\" href=\"sqlx/postgres/struct.PgValueRef.html\" title=\"struct sqlx::postgres::PgValueRef\">PgValueRef</a>&lt;'r&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode a new value of this type using a raw value from the database.</div></details></div></details>","Decode<'r, Postgres>","sqlx::types::uuid::Bytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3C'_,+Postgres%3E-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/bytes.rs.html#57\">source</a><a href=\"#impl-Encode%3C'_,+Postgres%3E-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sqlx/trait.Encode.html\" title=\"trait sqlx::Encode\">Encode</a>&lt;'_, <a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/bytes.rs.html#58\">source</a><a href=\"#method.encode_by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Encode.html#tymethod.encode_by_ref\" class=\"fn\">encode_by_ref</a>(\n    &amp;self,\n    buf: &amp;mut <a class=\"struct\" href=\"sqlx/postgres/struct.PgArgumentBuffer.html\" title=\"struct sqlx::postgres::PgArgumentBuffer\">PgArgumentBuffer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"sqlx/encode/enum.IsNull.html\" title=\"enum sqlx::encode::IsNull\">IsNull</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>Writes the value of <code>self</code> into <code>buf</code> without moving <code>self</code>. <a href=\"sqlx/trait.Encode.html#tymethod.encode_by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_core/encode.rs.html#29-31\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Encode.html#method.encode\" class=\"fn\">encode</a>(\n    self,\n    buf: &amp;mut &lt;DB as <a class=\"trait\" href=\"sqlx/trait.Database.html\" title=\"trait sqlx::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"sqlx/trait.Database.html#associatedtype.ArgumentBuffer\" title=\"type sqlx::Database::ArgumentBuffer\">ArgumentBuffer</a>&lt;'q&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"sqlx/encode/enum.IsNull.html\" title=\"enum sqlx::encode::IsNull\">IsNull</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes the value of <code>self</code> into <code>buf</code> in the expected format for the database.</div></details><section id=\"method.produces\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_core/encode.rs.html#45\">source</a><a href=\"#method.produces\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Encode.html#method.produces\" class=\"fn\">produces</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;DB as <a class=\"trait\" href=\"sqlx/trait.Database.html\" title=\"trait sqlx::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"sqlx/trait.Database.html#associatedtype.TypeInfo\" title=\"type sqlx::Database::TypeInfo\">TypeInfo</a>&gt;</h4></section><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_core/encode.rs.html#52\">source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Encode.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","Encode<'_, Postgres>","sqlx::types::uuid::Bytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3C'q,+Postgres%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/array.rs.html#144-147\">source</a><a href=\"#impl-Encode%3C'q,+Postgres%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'q, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sqlx/trait.Encode.html\" title=\"trait sqlx::Encode\">Encode</a>&lt;'q, <a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.slice.html\">[T]</a>: for&lt;'a&gt; <a class=\"trait\" href=\"sqlx/trait.Encode.html\" title=\"trait sqlx::Encode\">Encode</a>&lt;'q, <a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt;,\n    T: <a class=\"trait\" href=\"sqlx/trait.Encode.html\" title=\"trait sqlx::Encode\">Encode</a>&lt;'q, <a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/array.rs.html#149\">source</a><a href=\"#method.encode_by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Encode.html#tymethod.encode_by_ref\" class=\"fn\">encode_by_ref</a>(\n    &amp;self,\n    buf: &amp;mut <a class=\"struct\" href=\"sqlx/postgres/struct.PgArgumentBuffer.html\" title=\"struct sqlx::postgres::PgArgumentBuffer\">PgArgumentBuffer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"sqlx/encode/enum.IsNull.html\" title=\"enum sqlx::encode::IsNull\">IsNull</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>Writes the value of <code>self</code> into <code>buf</code> without moving <code>self</code>. <a href=\"sqlx/trait.Encode.html#tymethod.encode_by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_core/encode.rs.html#29-31\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Encode.html#method.encode\" class=\"fn\">encode</a>(\n    self,\n    buf: &amp;mut &lt;DB as <a class=\"trait\" href=\"sqlx/trait.Database.html\" title=\"trait sqlx::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"sqlx/trait.Database.html#associatedtype.ArgumentBuffer\" title=\"type sqlx::Database::ArgumentBuffer\">ArgumentBuffer</a>&lt;'q&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"sqlx/encode/enum.IsNull.html\" title=\"enum sqlx::encode::IsNull\">IsNull</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes the value of <code>self</code> into <code>buf</code> in the expected format for the database.</div></details><section id=\"method.produces\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_core/encode.rs.html#45\">source</a><a href=\"#method.produces\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Encode.html#method.produces\" class=\"fn\">produces</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;DB as <a class=\"trait\" href=\"sqlx/trait.Database.html\" title=\"trait sqlx::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"sqlx/trait.Database.html#associatedtype.TypeInfo\" title=\"type sqlx::Database::TypeInfo\">TypeInfo</a>&gt;</h4></section><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_core/encode.rs.html#52\">source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Encode.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","Encode<'q, Postgres>","sqlx::types::uuid::Bytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PgHasArrayType-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/bytes.rs.html#31\">source</a><a href=\"#impl-PgHasArrayType-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sqlx/postgres/trait.PgHasArrayType.html\" title=\"trait sqlx::postgres::PgHasArrayType\">PgHasArrayType</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.array_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/bytes.rs.html#32\">source</a><a href=\"#method.array_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/postgres/trait.PgHasArrayType.html#tymethod.array_type_info\" class=\"fn\">array_type_info</a>() -&gt; <a class=\"struct\" href=\"sqlx/postgres/struct.PgTypeInfo.html\" title=\"struct sqlx::postgres::PgTypeInfo\">PgTypeInfo</a></h4></section><section id=\"method.array_compatible\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/array.rs.html#53\">source</a><a href=\"#method.array_compatible\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/postgres/trait.PgHasArrayType.html#method.array_compatible\" class=\"fn\">array_compatible</a>(ty: &amp;<a class=\"struct\" href=\"sqlx/postgres/struct.PgTypeInfo.html\" title=\"struct sqlx::postgres::PgTypeInfo\">PgTypeInfo</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","PgHasArrayType","sqlx::types::uuid::Bytes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Type%3CPostgres%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/array.rs.html#120-122\">source</a><a href=\"#impl-Type%3CPostgres%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sqlx/trait.Type.html\" title=\"trait sqlx::Type\">Type</a>&lt;<a class=\"struct\" href=\"sqlx/struct.Postgres.html\" title=\"struct sqlx::Postgres\">Postgres</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sqlx/postgres/trait.PgHasArrayType.html\" title=\"trait sqlx::postgres::PgHasArrayType\">PgHasArrayType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/array.rs.html#124\">source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Type.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; <a class=\"struct\" href=\"sqlx/postgres/struct.PgTypeInfo.html\" title=\"struct sqlx::postgres::PgTypeInfo\">PgTypeInfo</a></h4></section></summary><div class='docblock'>Returns the canonical SQL type for this Rust type. <a href=\"sqlx/trait.Type.html#tymethod.type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compatible\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sqlx_postgres/types/array.rs.html#128\">source</a><a href=\"#method.compatible\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sqlx/trait.Type.html#method.compatible\" class=\"fn\">compatible</a>(ty: &amp;<a class=\"struct\" href=\"sqlx/postgres/struct.PgTypeInfo.html\" title=\"struct sqlx::postgres::PgTypeInfo\">PgTypeInfo</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if this Rust type is compatible with the given SQL type. <a href=\"sqlx/trait.Type.html#method.compatible\">Read more</a></div></details></div></details>","Type<Postgres>","sqlx::types::uuid::Bytes"]]],["sqlx_postgres",[]],["uuid",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11,21302,21,12]}